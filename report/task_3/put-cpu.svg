<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (4,126 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="10.0" y="931.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="10.0" y="867.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.05%)</title><rect x="10.3" y="931.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.3" y="942.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="10.3" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.3" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="10.6" y="915.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.6" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.02%)</title><rect x="10.6" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.6" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="10.6" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.12%)</title><rect x="10.9" y="931.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="10.9" y="915.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.9" y="926.0"></text>
</g>
<g>
<title>_IO_padn (1 samples, 0.02%)</title><rect x="10.9" y="899.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.1" y="915.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.1" y="926.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.02%)</title><rect x="11.1" y="899.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="11.1" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="14.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="11.1" y="867.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="14.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="11.1" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="14.1" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="11.1" y="835.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="14.1" y="846.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="11.1" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="14.1" y="830.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="11.1" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="14.1" y="814.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="11.4" y="915.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="14.4" y="926.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (2 samples, 0.05%)</title><rect x="11.7" y="915.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="14.7" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (25 samples, 0.61%)</title><rect x="12.3" y="931.0" width="7.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="15.3" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="12.3" y="915.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.3" y="926.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="12.3" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.3" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="12.6" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.6" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.02%)</title><rect x="12.6" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.6" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.02%)</title><rect x="12.9" y="915.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="15.9" y="926.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.10%)</title><rect x="13.1" y="915.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="16.1" y="926.0"></text>
</g>
<g>
<title>clock_gettime (18 samples, 0.44%)</title><rect x="14.3" y="915.0" width="5.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="17.3" y="926.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.12%)</title><rect x="18.0" y="899.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="21.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,687 samples, 65.12%)</title><rect x="19.4" y="931.0" width="768.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.4" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,687 samples, 65.12%)</title><rect x="19.4" y="915.0" width="768.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.4" y="926.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,687 samples, 65.12%)</title><rect x="19.4" y="899.0" width="768.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.4" y="910.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (178 samples, 4.31%)</title><rect x="23.2" y="883.0" width="50.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.2" y="894.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (178 samples, 4.31%)</title><rect x="23.2" y="867.0" width="50.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.2" y="878.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO$$Lambda$90.0x0000000800bbee38.run (178 samples, 4.31%)</title><rect x="23.2" y="851.0" width="50.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.2" y="862.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.lambda$upsert$1 (178 samples, 4.31%)</title><rect x="23.2" y="835.0" width="50.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.2" y="846.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.forEach (12 samples, 0.29%)</title><rect x="23.2" y="819.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO$$Lambda$91.0x0000000800bbf060.accept (12 samples, 0.29%)</title><rect x="23.2" y="803.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.lambda$upsert$0 (12 samples, 0.29%)</title><rect x="23.2" y="787.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.remove (12 samples, 0.29%)</title><rect x="23.2" y="771.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doRemove (12 samples, 0.29%)</title><rect x="23.2" y="755.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="23.4" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.22%)</title><rect x="23.7" y="739.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.19%)</title><rect x="24.0" y="723.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.19%)</title><rect x="24.0" y="707.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.19%)</title><rect x="24.0" y="691.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.0" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.19%)</title><rect x="24.0" y="675.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.0" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.07%)</title><rect x="24.9" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.9" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.07%)</title><rect x="24.9" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.9" y="654.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.05%)</title><rect x="25.7" y="659.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="28.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.unlinkNode (1 samples, 0.02%)</title><rect x="26.3" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="26.3" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="26.3" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.flush (166 samples, 4.02%)</title><rect x="26.6" y="819.0" width="47.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.6" y="830.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.write (166 samples, 4.02%)</title><rect x="26.6" y="803.0" width="47.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.6" y="814.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.writeImpl (166 samples, 4.02%)</title><rect x="26.6" y="787.0" width="47.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.6" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.rename (1 samples, 0.02%)</title><rect x="26.6" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.6" y="782.0"></text>
</g>
<g>
<title>java/nio/file/Files.move (1 samples, 0.02%)</title><rect x="26.6" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.move (1 samples, 0.02%)</title><rect x="26.6" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixCopyFile.move (1 samples, 0.02%)</title><rect x="26.6" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.rename (1 samples, 0.02%)</title><rect x="26.6" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.rename0 (1 samples, 0.02%)</title><rect x="26.6" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.6" y="702.0"></text>
</g>
<g>
<title>rename (1 samples, 0.02%)</title><rect x="26.6" y="675.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="29.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="26.6" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="26.6" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_rename (1 samples, 0.02%)</title><rect x="26.6" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.6" y="638.0"></text>
</g>
<g>
<title>do_renameat2 (1 samples, 0.02%)</title><rect x="26.6" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="29.6" y="622.0"></text>
</g>
<g>
<title>apparmor_path_rename (1 samples, 0.02%)</title><rect x="26.6" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.writeInt (27 samples, 0.65%)</title><rect x="26.9" y="771.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="26.9" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.9" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="26.9" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (26 samples, 0.63%)</title><rect x="27.2" y="755.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (26 samples, 0.63%)</title><rect x="27.2" y="739.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.2" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.05%)</title><rect x="27.2" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.05%)</title><rect x="27.2" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.02%)</title><rect x="27.4" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.02%)</title><rect x="27.4" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (1 samples, 0.02%)</title><rect x="27.4" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (24 samples, 0.58%)</title><rect x="27.7" y="723.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (24 samples, 0.58%)</title><rect x="27.7" y="707.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (24 samples, 0.58%)</title><rect x="27.7" y="691.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.7" y="702.0"></text>
</g>
<g>
<title>__libc_write (24 samples, 0.58%)</title><rect x="27.7" y="675.0" width="6.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="30.7" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.44%)</title><rect x="29.4" y="659.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.44%)</title><rect x="29.4" y="643.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_write (17 samples, 0.41%)</title><rect x="29.7" y="627.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="32.7" y="638.0"></text>
</g>
<g>
<title>ksys_write (17 samples, 0.41%)</title><rect x="29.7" y="611.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="32.7" y="622.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.41%)</title><rect x="29.7" y="595.0" width="4.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.7" y="606.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.39%)</title><rect x="30.0" y="579.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.0" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (16 samples, 0.39%)</title><rect x="30.0" y="563.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="33.0" y="574.0"></text>
</g>
<g>
<title>ext4_buffered_write_iter (16 samples, 0.39%)</title><rect x="30.0" y="547.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="33.0" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="30.0" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="33.0" y="542.0"></text>
</g>
<g>
<title>generic_perform_write (15 samples, 0.36%)</title><rect x="30.3" y="531.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="33.3" y="542.0"></text>
</g>
<g>
<title>__get_user_nocheck_1 (1 samples, 0.02%)</title><rect x="30.3" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="33.3" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.07%)</title><rect x="30.6" y="515.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.6" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="30.6" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="33.6" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="30.6" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="33.6" y="494.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.02%)</title><rect x="30.6" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="33.6" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="30.9" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.9" y="510.0"></text>
</g>
<g>
<title>create_empty_buffers (1 samples, 0.02%)</title><rect x="30.9" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="33.9" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="31.2" y="499.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.2" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (11 samples, 0.27%)</title><rect x="31.4" y="515.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="34.4" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="31.7" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="34.7" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="31.7" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="34.7" y="494.0"></text>
</g>
<g>
<title>stop_this_handle (1 samples, 0.02%)</title><rect x="31.7" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="34.7" y="478.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.02%)</title><rect x="31.7" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.7" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="31.7" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.7" y="446.0"></text>
</g>
<g>
<title>generic_write_end (9 samples, 0.22%)</title><rect x="32.0" y="499.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.0" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (8 samples, 0.19%)</title><rect x="32.0" y="483.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.0" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (8 samples, 0.19%)</title><rect x="32.0" y="467.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.0" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="32.0" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="35.0" y="462.0"></text>
</g>
<g>
<title>__ext4_mark_inode_dirty (7 samples, 0.17%)</title><rect x="32.3" y="451.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="35.3" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (7 samples, 0.17%)</title><rect x="32.3" y="435.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="35.3" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (7 samples, 0.17%)</title><rect x="32.3" y="419.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="35.3" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (4 samples, 0.10%)</title><rect x="32.9" y="403.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="35.9" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (4 samples, 0.10%)</title><rect x="32.9" y="387.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="35.9" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="32.9" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.9" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (3 samples, 0.07%)</title><rect x="33.2" y="371.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="36.2" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.07%)</title><rect x="33.2" y="355.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="36.2" y="366.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.02%)</title><rect x="34.0" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="37.0" y="414.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.02%)</title><rect x="34.0" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="37.0" y="398.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.02%)</title><rect x="34.3" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="37.3" y="494.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (1 samples, 0.02%)</title><rect x="34.3" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="37.3" y="478.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.02%)</title><rect x="34.3" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="37.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.writeValueWithSize (129 samples, 3.13%)</title><rect x="34.6" y="771.0" width="36.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.6" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.writeInt (60 samples, 1.45%)</title><rect x="34.6" y="755.0" width="17.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (60 samples, 1.45%)</title><rect x="34.6" y="739.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (58 samples, 1.41%)</title><rect x="34.6" y="723.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.6" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.02%)</title><rect x="34.6" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.02%)</title><rect x="34.6" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.02%)</title><rect x="34.6" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.02%)</title><rect x="34.6" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (1 samples, 0.02%)</title><rect x="34.6" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (54 samples, 1.31%)</title><rect x="34.9" y="707.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (54 samples, 1.31%)</title><rect x="34.9" y="691.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (54 samples, 1.31%)</title><rect x="34.9" y="675.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.9" y="686.0"></text>
</g>
<g>
<title>__libc_write (54 samples, 1.31%)</title><rect x="34.9" y="659.0" width="15.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="37.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 1.02%)</title><rect x="38.3" y="643.0" width="12.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="41.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 1.02%)</title><rect x="38.3" y="627.0" width="12.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="41.3" y="638.0"></text>
</g>
<g>
<title>__x64_sys_write (39 samples, 0.95%)</title><rect x="38.3" y="611.0" width="11.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="41.3" y="622.0"></text>
</g>
<g>
<title>ksys_write (39 samples, 0.95%)</title><rect x="38.3" y="595.0" width="11.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="41.3" y="606.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="38.3" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="41.3" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="38.3" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="41.3" y="574.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.02%)</title><rect x="38.3" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="41.3" y="558.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="38.6" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="41.6" y="590.0"></text>
</g>
<g>
<title>vfs_write (37 samples, 0.90%)</title><rect x="38.9" y="579.0" width="10.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="41.9" y="590.0"></text>
</g>
<g>
<title>new_sync_write (34 samples, 0.82%)</title><rect x="39.7" y="563.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="42.7" y="574.0"></text>
</g>
<g>
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="39.7" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="42.7" y="558.0"></text>
</g>
<g>
<title>ext4_file_write_iter (33 samples, 0.80%)</title><rect x="40.0" y="547.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.0" y="558.0"></text>
</g>
<g>
<title>ext4_buffered_write_iter (33 samples, 0.80%)</title><rect x="40.0" y="531.0" width="9.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="43.0" y="542.0"></text>
</g>
<g>
<title>ext4_fc_start_update (1 samples, 0.02%)</title><rect x="40.0" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="43.0" y="526.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.05%)</title><rect x="40.3" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.3" y="526.0"></text>
</g>
<g>
<title>file_modified (2 samples, 0.05%)</title><rect x="40.3" y="499.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.3" y="510.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.05%)</title><rect x="40.3" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.3" y="494.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="40.3" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="43.3" y="478.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="40.3" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.3" y="462.0"></text>
</g>
<g>
<title>update_time (1 samples, 0.02%)</title><rect x="40.6" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="43.6" y="478.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.02%)</title><rect x="40.6" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.6" y="462.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="40.6" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="43.6" y="446.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="40.6" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="43.6" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="40.6" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.6" y="414.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="40.6" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="43.6" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="40.6" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.6" y="382.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="40.6" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.6" y="366.0"></text>
</g>
<g>
<title>generic_perform_write (30 samples, 0.73%)</title><rect x="40.9" y="515.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.9" y="526.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.02%)</title><rect x="41.2" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="44.2" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_begin (7 samples, 0.17%)</title><rect x="41.5" y="499.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="44.5" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.07%)</title><rect x="41.7" y="483.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.7" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.07%)</title><rect x="41.7" y="467.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.7" y="478.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.05%)</title><rect x="41.7" y="451.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="44.7" y="462.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.02%)</title><rect x="42.3" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.3" y="462.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.07%)</title><rect x="42.6" y="483.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="45.6" y="494.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.02%)</title><rect x="42.6" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.6" y="478.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.05%)</title><rect x="42.9" y="467.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="45.9" y="478.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.02%)</title><rect x="43.2" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.2" y="462.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.02%)</title><rect x="43.2" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="46.2" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_end (20 samples, 0.48%)</title><rect x="43.5" y="499.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.5" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="43.7" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.7" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="43.7" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="46.7" y="478.0"></text>
</g>
<g>
<title>stop_this_handle (1 samples, 0.02%)</title><rect x="43.7" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="46.7" y="462.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.02%)</title><rect x="43.7" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="46.7" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="43.7" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="46.7" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="43.7" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="46.7" y="414.0"></text>
</g>
<g>
<title>generic_write_end (18 samples, 0.44%)</title><rect x="44.0" y="483.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.0" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (17 samples, 0.41%)</title><rect x="44.3" y="467.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="47.3" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (17 samples, 0.41%)</title><rect x="44.3" y="451.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.3" y="462.0"></text>
</g>
<g>
<title>__ext4_mark_inode_dirty (17 samples, 0.41%)</title><rect x="44.3" y="435.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="47.3" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (12 samples, 0.29%)</title><rect x="44.3" y="419.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="47.3" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (8 samples, 0.19%)</title><rect x="44.6" y="403.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.6" y="414.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="44.9" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.9" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.02%)</title><rect x="44.9" y="371.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="47.9" y="382.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 0.15%)</title><rect x="45.2" y="387.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="48.2" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="45.2" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.2" y="382.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (5 samples, 0.12%)</title><rect x="45.5" y="371.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="48.5" y="382.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="45.5" y="355.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="48.5" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.05%)</title><rect x="45.7" y="355.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="48.7" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.05%)</title><rect x="46.3" y="355.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="49.3" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.05%)</title><rect x="46.3" y="339.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="49.3" y="350.0"></text>
</g>
<g>
<title>ext4_fc_track_inode (2 samples, 0.05%)</title><rect x="46.9" y="403.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="49.9" y="414.0"></text>
</g>
<g>
<title>ext4_fc_track_template.isra.0 (1 samples, 0.02%)</title><rect x="47.2" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="50.2" y="398.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.02%)</title><rect x="47.5" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="50.5" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.12%)</title><rect x="47.8" y="419.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.8" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (3 samples, 0.07%)</title><rect x="47.8" y="403.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="50.8" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="48.3" y="387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.3" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.0 (1 samples, 0.02%)</title><rect x="48.3" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="51.3" y="382.0"></text>
</g>
<g>
<title>ext4_get_inode_loc (2 samples, 0.05%)</title><rect x="48.6" y="403.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="51.6" y="414.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="48.9" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.9" y="398.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="48.9" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="51.9" y="382.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.02%)</title><rect x="48.9" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.9" y="366.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="48.9" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.9" y="350.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="49.2" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="52.2" y="510.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (3 samples, 0.07%)</title><rect x="49.5" y="611.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.07%)</title><rect x="50.3" y="707.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.07%)</title><rect x="50.3" y="691.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="51.2" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="51.5" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (69 samples, 1.67%)</title><rect x="51.8" y="755.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.10%)</title><rect x="52.3" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.3" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.10%)</title><rect x="52.3" y="723.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (60 samples, 1.45%)</title><rect x="53.5" y="739.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.5" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.02%)</title><rect x="53.5" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.02%)</title><rect x="53.5" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.02%)</title><rect x="53.5" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.02%)</title><rect x="53.5" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.02%)</title><rect x="53.5" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.02%)</title><rect x="53.5" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.02%)</title><rect x="53.5" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (54 samples, 1.31%)</title><rect x="53.8" y="723.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (54 samples, 1.31%)</title><rect x="53.8" y="707.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (54 samples, 1.31%)</title><rect x="53.8" y="691.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.8" y="702.0"></text>
</g>
<g>
<title>__libc_write (51 samples, 1.24%)</title><rect x="54.6" y="675.0" width="14.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="57.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.95%)</title><rect x="58.0" y="659.0" width="11.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="61.0" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.95%)</title><rect x="58.0" y="643.0" width="11.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_write (36 samples, 0.87%)</title><rect x="58.0" y="627.0" width="10.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="61.0" y="638.0"></text>
</g>
<g>
<title>ksys_write (36 samples, 0.87%)</title><rect x="58.0" y="611.0" width="10.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="61.0" y="622.0"></text>
</g>
<g>
<title>vfs_write (36 samples, 0.87%)</title><rect x="58.0" y="595.0" width="10.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="61.0" y="606.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="58.0" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="61.0" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="58.3" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.3" y="590.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="58.6" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.6" y="590.0"></text>
</g>
<g>
<title>new_sync_write (32 samples, 0.78%)</title><rect x="58.9" y="579.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.9" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (32 samples, 0.78%)</title><rect x="58.9" y="563.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="61.9" y="574.0"></text>
</g>
<g>
<title>ext4_buffered_write_iter (31 samples, 0.75%)</title><rect x="58.9" y="547.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.9" y="558.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.02%)</title><rect x="58.9" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="61.9" y="542.0"></text>
</g>
<g>
<title>file_modified (1 samples, 0.02%)</title><rect x="58.9" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.9" y="526.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.02%)</title><rect x="58.9" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="61.9" y="510.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="58.9" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.9" y="494.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="58.9" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.9" y="478.0"></text>
</g>
<g>
<title>generic_perform_write (30 samples, 0.73%)</title><rect x="59.2" y="531.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.2" y="542.0"></text>
</g>
<g>
<title>__get_user_nocheck_1 (1 samples, 0.02%)</title><rect x="59.2" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.2" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.10%)</title><rect x="59.5" y="515.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="62.5" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.05%)</title><rect x="59.5" y="499.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="62.5" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.05%)</title><rect x="59.5" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="62.5" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="59.5" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="62.5" y="478.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.02%)</title><rect x="59.8" y="467.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="62.8" y="478.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.02%)</title><rect x="60.0" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="63.0" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="60.3" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.3" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="60.3" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="63.3" y="494.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.02%)</title><rect x="60.3" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="63.3" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (24 samples, 0.58%)</title><rect x="60.6" y="515.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="63.6" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.12%)</title><rect x="60.6" y="499.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="63.6" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.12%)</title><rect x="60.6" y="483.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="63.6" y="494.0"></text>
</g>
<g>
<title>stop_this_handle (5 samples, 0.12%)</title><rect x="60.6" y="467.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="63.6" y="478.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.02%)</title><rect x="61.8" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="64.8" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="61.8" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.8" y="446.0"></text>
</g>
<g>
<title>generic_write_end (19 samples, 0.46%)</title><rect x="62.1" y="499.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="65.1" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (18 samples, 0.44%)</title><rect x="62.1" y="483.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="65.1" y="494.0"></text>
</g>
<g>
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="62.1" y="467.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="65.1" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (17 samples, 0.41%)</title><rect x="62.3" y="467.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="65.3" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="62.3" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="65.3" y="462.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="62.3" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="65.3" y="446.0"></text>
</g>
<g>
<title>__ext4_mark_inode_dirty (16 samples, 0.39%)</title><rect x="62.6" y="451.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="65.6" y="462.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="62.6" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="65.6" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (10 samples, 0.24%)</title><rect x="62.9" y="435.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="65.9" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (10 samples, 0.24%)</title><rect x="62.9" y="419.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="65.9" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (7 samples, 0.17%)</title><rect x="63.8" y="403.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="66.8" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="63.8" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="66.8" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (6 samples, 0.15%)</title><rect x="64.1" y="387.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.1" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.07%)</title><rect x="64.6" y="371.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="67.6" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="65.5" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="68.5" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="65.5" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="68.5" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.12%)</title><rect x="65.8" y="435.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="68.8" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="66.1" y="419.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.1" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="66.1" y="403.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="69.1" y="414.0"></text>
</g>
<g>
<title>ext4_get_inode_loc (3 samples, 0.07%)</title><rect x="66.3" y="419.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="69.3" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.07%)</title><rect x="66.3" y="403.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="69.3" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="66.9" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="69.9" y="398.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.02%)</title><rect x="66.9" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="69.9" y="382.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.02%)</title><rect x="67.2" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.2" y="494.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (1 samples, 0.02%)</title><rect x="67.2" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="70.2" y="478.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.02%)</title><rect x="67.5" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.5" y="526.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.02%)</title><rect x="67.8" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.8" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="68.1" y="579.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="71.1" y="590.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="68.1" y="563.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="71.1" y="574.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (2 samples, 0.05%)</title><rect x="68.3" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="71.3" y="638.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="68.9" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="71.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.12%)</title><rect x="69.2" y="723.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.12%)</title><rect x="69.2" y="707.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.02%)</title><rect x="69.5" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.5" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.02%)</title><rect x="69.8" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.8" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.02%)</title><rect x="69.8" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.8" y="686.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="70.1" y="691.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="73.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.07%)</title><rect x="70.6" y="739.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="71.2" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.position (9 samples, 0.22%)</title><rect x="71.5" y="771.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.seek (7 samples, 0.17%)</title><rect x="71.5" y="755.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.seek0 (7 samples, 0.17%)</title><rect x="71.5" y="739.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.5" y="750.0"></text>
</g>
<g>
<title>__libc_lseek (7 samples, 0.17%)</title><rect x="71.5" y="723.0" width="2.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="74.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="72.6" y="707.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="75.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="72.6" y="691.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_lseek (1 samples, 0.02%)</title><rect x="72.6" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="75.6" y="686.0"></text>
</g>
<g>
<title>ksys_lseek (1 samples, 0.02%)</title><rect x="72.6" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.6" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="72.6" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="75.6" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="72.6" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.6" y="638.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.02%)</title><rect x="72.6" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="75.6" y="622.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (2 samples, 0.05%)</title><rect x="72.9" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="75.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.05%)</title><rect x="73.5" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.02%)</title><rect x="74.1" y="883.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.10%)</title><rect x="74.3" y="883.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.10%)</title><rect x="74.3" y="867.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (4 samples, 0.10%)</title><rect x="74.3" y="851.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.getAndUnsetStatus (4 samples, 0.10%)</title><rect x="74.3" y="835.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndBitwiseAndInt (4 samples, 0.10%)</title><rect x="74.3" y="819.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl$$Lambda$89.0x0000000800bbe7d0.run (1 samples, 0.02%)</title><rect x="75.2" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (829 samples, 20.09%)</title><rect x="75.5" y="883.0" width="237.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.5" y="894.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (828 samples, 20.07%)</title><rect x="75.8" y="867.0" width="236.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.8" y="878.0">java/util/concurrent/LinkedBloc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (577 samples, 13.98%)</title><rect x="77.2" y="851.0" width="165.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.2" y="862.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (502 samples, 12.17%)</title><rect x="79.8" y="835.0" width="143.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.8" y="846.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionNode.block (499 samples, 12.09%)</title><rect x="80.1" y="819.0" width="142.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.1" y="830.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionNode.isReleasable (12 samples, 0.29%)</title><rect x="80.1" y="803.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (487 samples, 11.80%)</title><rect x="83.5" y="803.0" width="139.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.5" y="814.0">java/util/concurr..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (486 samples, 11.78%)</title><rect x="83.5" y="787.0" width="139.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.5" y="798.0">jdk/internal/misc..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="86.4" y="771.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="89.4" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="86.6" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="89.6" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (188 samples, 4.56%)</title><rect x="86.9" y="771.0" width="53.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="89.9" y="782.0">Unsaf..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.07%)</title><rect x="92.1" y="755.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="95.1" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_interrupted(bool) (2 samples, 0.05%)</title><rect x="92.9" y="755.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="95.9" y="766.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.17%)</title><rect x="93.5" y="755.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="96.5" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (53 samples, 1.28%)</title><rect x="95.5" y="755.0" width="15.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="98.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="102.9" y="739.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="105.9" y="750.0"></text>
</g>
<g>
<title>Mutex::lock_without_safepoint_check() (8 samples, 0.19%)</title><rect x="103.2" y="739.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="106.2" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.05%)</title><rect x="104.9" y="723.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="107.9" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (12 samples, 0.29%)</title><rect x="105.5" y="739.0" width="3.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="108.5" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::interrupted(oopDesc*) (2 samples, 0.05%)</title><rect x="109.0" y="739.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="112.0" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.10%)</title><rect x="109.5" y="739.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="112.5" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.10%)</title><rect x="110.7" y="755.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="113.7" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.07%)</title><rect x="111.8" y="755.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="114.8" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (89 samples, 2.16%)</title><rect x="112.7" y="755.0" width="25.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="115.7" y="766.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.95%)</title><rect x="127.0" y="739.0" width="11.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="130.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.95%)</title><rect x="127.0" y="723.0" width="11.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="130.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.56%)</title><rect x="127.0" y="707.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="130.0" y="718.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.53%)</title><rect x="127.3" y="691.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="130.3" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="128.1" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="131.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.29%)</title><rect x="128.4" y="675.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.4" y="686.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.12%)</title><rect x="130.4" y="659.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="133.4" y="670.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="131.8" y="675.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="134.8" y="686.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.07%)</title><rect x="132.4" y="675.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="135.4" y="686.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="133.3" y="675.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.3" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="133.5" y="707.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.5" y="718.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (14 samples, 0.34%)</title><rect x="134.1" y="707.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="137.1" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="138.1" y="755.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="141.1" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="139.0" y="755.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="142.0" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@plt (1 samples, 0.02%)</title><rect x="139.6" y="755.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="142.6" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (1 samples, 0.02%)</title><rect x="139.8" y="755.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="142.8" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.05%)</title><rect x="140.1" y="755.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="143.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (275 samples, 6.67%)</title><rect x="140.7" y="771.0" width="78.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="143.7" y="782.0">[unknown]</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (7 samples, 0.17%)</title><rect x="140.7" y="755.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="143.7" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (7 samples, 0.17%)</title><rect x="142.7" y="755.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="145.7" y="766.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (4 samples, 0.10%)</title><rect x="144.7" y="755.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="147.7" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (240 samples, 5.82%)</title><rect x="145.8" y="755.0" width="68.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="148.8" y="766.0">__pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (145 samples, 3.51%)</title><rect x="173.0" y="739.0" width="41.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="176.0" y="750.0">ent..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="173.0" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="176.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (143 samples, 3.47%)</title><rect x="173.3" y="723.0" width="40.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="176.3" y="734.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (130 samples, 3.15%)</title><rect x="174.2" y="707.0" width="37.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="177.2" y="718.0">__x..</text>
</g>
<g>
<title>do_futex (119 samples, 2.88%)</title><rect x="177.3" y="691.0" width="34.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="180.3" y="702.0">do..</text>
</g>
<g>
<title>futex_wait (108 samples, 2.62%)</title><rect x="180.5" y="675.0" width="30.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="183.5" y="686.0">fu..</text>
</g>
<g>
<title>__get_user_nocheck_4 (8 samples, 0.19%)</title><rect x="183.6" y="659.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="186.6" y="670.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="185.9" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="188.9" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (62 samples, 1.50%)</title><rect x="186.5" y="659.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="189.5" y="670.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="191.3" y="643.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="194.3" y="654.0"></text>
</g>
<g>
<title>schedule (43 samples, 1.04%)</title><rect x="191.9" y="643.0" width="12.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="194.9" y="654.0"></text>
</g>
<g>
<title>__schedule (38 samples, 0.92%)</title><rect x="193.3" y="627.0" width="10.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="196.3" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (31 samples, 0.75%)</title><rect x="195.3" y="611.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="198.3" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (17 samples, 0.41%)</title><rect x="204.2" y="659.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="207.2" y="670.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.15%)</title><rect x="207.0" y="643.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.0" y="654.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="208.8" y="643.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.8" y="654.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.12%)</title><rect x="209.0" y="659.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="212.0" y="670.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.07%)</title><rect x="210.5" y="659.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.5" y="670.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (10 samples, 0.24%)</title><rect x="211.3" y="707.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="214.3" y="718.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="214.2" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="217.2" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.17%)</title><rect x="214.5" y="755.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="217.5" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.07%)</title><rect x="216.5" y="755.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="219.5" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.07%)</title><rect x="217.3" y="755.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="220.3" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="218.2" y="755.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="221.2" y="766.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (3 samples, 0.07%)</title><rect x="218.5" y="755.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="221.5" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (11 samples, 0.27%)</title><rect x="219.3" y="771.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="222.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="222.5" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.05%)</title><rect x="222.8" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.canReacquire (1 samples, 0.02%)</title><rect x="223.3" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isEnqueued (1 samples, 0.02%)</title><rect x="223.3" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.enableWait (50 samples, 1.21%)</title><rect x="223.6" y="835.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (50 samples, 1.21%)</title><rect x="223.6" y="819.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (41 samples, 0.99%)</title><rect x="225.6" y="803.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (41 samples, 0.99%)</title><rect x="225.6" y="787.0" width="11.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="228.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="226.2" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (37 samples, 0.90%)</title><rect x="226.8" y="771.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.10%)</title><rect x="226.8" y="755.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="229.8" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="227.1" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="230.1" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="227.4" y="739.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="230.4" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="227.6" y="739.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="230.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (33 samples, 0.80%)</title><rect x="227.9" y="755.0" width="9.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="230.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.75%)</title><rect x="228.5" y="739.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.75%)</title><rect x="228.5" y="723.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 0.70%)</title><rect x="228.5" y="707.0" width="8.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="231.5" y="718.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.70%)</title><rect x="228.5" y="691.0" width="8.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="231.5" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="228.8" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="231.8" y="686.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.65%)</title><rect x="229.1" y="675.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.1" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.10%)</title><rect x="229.4" y="659.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="232.4" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="229.6" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="232.6" y="654.0"></text>
</g>
<g>
<title>plist_del (2 samples, 0.05%)</title><rect x="229.9" y="643.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="232.9" y="654.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 0.53%)</title><rect x="230.5" y="659.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="233.5" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.53%)</title><rect x="230.5" y="643.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="233.5" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.51%)</title><rect x="230.8" y="627.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="233.8" y="638.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (2 samples, 0.05%)</title><rect x="236.8" y="707.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="239.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.05%)</title><rect x="237.4" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (15 samples, 0.36%)</title><rect x="237.9" y="835.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.12%)</title><rect x="240.8" y="819.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.12%)</title><rect x="240.8" y="803.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.8" y="814.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="240.8" y="787.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="243.8" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="240.8" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="243.8" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="240.8" y="755.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="243.8" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="241.1" y="771.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="244.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="241.1" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="241.1" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="244.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="241.1" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="244.1" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="241.1" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="244.1" y="718.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="241.1" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="244.1" y="702.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="241.1" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="244.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="241.4" y="787.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="244.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.07%)</title><rect x="241.4" y="771.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="244.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.15%)</title><rect x="242.2" y="851.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.15%)</title><rect x="242.2" y="835.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="245.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.getAndUnsetStatus (2 samples, 0.05%)</title><rect x="242.2" y="819.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndBitwiseAndInt (2 samples, 0.05%)</title><rect x="242.2" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enqueue (4 samples, 0.10%)</title><rect x="242.8" y="819.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (9 samples, 0.22%)</title><rect x="243.9" y="851.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.lockInterruptibly (9 samples, 0.22%)</title><rect x="243.9" y="835.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="246.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (9 samples, 0.22%)</title><rect x="243.9" y="819.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.17%)</title><rect x="244.5" y="803.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.15%)</title><rect x="244.8" y="787.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.15%)</title><rect x="244.8" y="771.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.07%)</title><rect x="244.8" y="755.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="247.8" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="244.8" y="739.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="247.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="244.8" y="723.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="247.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="244.8" y="707.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="247.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="244.8" y="691.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="247.8" y="702.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (1 samples, 0.02%)</title><rect x="245.4" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="248.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="245.7" y="755.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="248.7" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.07%)</title><rect x="245.7" y="739.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="248.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="245.9" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="248.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="245.9" y="707.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="248.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="245.9" y="691.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="248.9" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="245.9" y="675.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="248.9" y="686.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="245.9" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="248.9" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="245.9" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="248.9" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="245.9" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="248.9" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="245.9" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="248.9" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="245.9" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="248.9" y="606.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="246.2" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="249.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (231 samples, 5.60%)</title><rect x="246.5" y="851.0" width="66.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.5" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (231 samples, 5.60%)</title><rect x="246.5" y="835.0" width="66.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.5" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (231 samples, 5.60%)</title><rect x="246.5" y="819.0" width="66.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.5" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (231 samples, 5.60%)</title><rect x="246.5" y="803.0" width="66.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.5" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.02%)</title><rect x="252.8" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (208 samples, 5.04%)</title><rect x="253.1" y="787.0" width="59.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.1" y="798.0">jdk/in..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="254.2" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="257.2" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="254.5" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="257.5" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (35 samples, 0.85%)</title><rect x="254.8" y="771.0" width="10.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="257.8" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="257.7" y="755.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="260.7" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="258.0" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="261.0" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="258.5" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="261.5" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.17%)</title><rect x="258.8" y="755.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="261.8" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="260.8" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="263.8" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="261.4" y="755.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="264.4" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="262.2" y="755.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="265.2" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.07%)</title><rect x="262.5" y="755.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="265.5" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.10%)</title><rect x="263.4" y="755.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="266.4" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="264.5" y="755.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="267.5" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (167 samples, 4.05%)</title><rect x="264.8" y="771.0" width="47.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="267.8" y="782.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (140 samples, 3.39%)</title><rect x="272.5" y="755.0" width="40.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.5" y="766.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (140 samples, 3.39%)</title><rect x="272.5" y="739.0" width="40.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="275.5" y="750.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (134 samples, 3.25%)</title><rect x="272.5" y="723.0" width="38.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="275.5" y="734.0">__x..</text>
</g>
<g>
<title>do_futex (132 samples, 3.20%)</title><rect x="273.1" y="707.0" width="37.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="276.1" y="718.0">do_..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="273.1" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="276.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (130 samples, 3.15%)</title><rect x="273.4" y="691.0" width="37.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="276.4" y="702.0">fut..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="277.4" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.4" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.12%)</title><rect x="277.7" y="675.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="280.7" y="686.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="278.5" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.5" y="670.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="278.8" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.8" y="670.0"></text>
</g>
<g>
<title>wake_up_q (110 samples, 2.67%)</title><rect x="279.1" y="675.0" width="31.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="282.1" y="686.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (109 samples, 2.64%)</title><rect x="279.4" y="659.0" width="31.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="282.4" y="670.0">tr..</text>
</g>
<g>
<title>__lock_text_start (109 samples, 2.64%)</title><rect x="279.4" y="643.0" width="31.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="282.4" y="654.0">__..</text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="310.6" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.6" y="702.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (6 samples, 0.15%)</title><rect x="310.9" y="723.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl$$Lambda$89.0x0000000800bbe7d0.run (1,662 samples, 40.28%)</title><rect x="312.6" y="883.0" width="475.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.6" y="894.0">ru/mail/polis/service/medalexey/ServiceImpl$$Lambda$89.0x00000008..</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.handleRequestTask (2 samples, 0.05%)</title><rect x="312.6" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.lambda$handleRequest$0 (1,660 samples, 40.23%)</title><rect x="313.2" y="867.0" width="474.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.2" y="878.0">ru/mail/polis/service/medalexey/ServiceImpl.lambda$handleRequest$0</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.handleRequestTask (1,660 samples, 40.23%)</title><rect x="313.2" y="851.0" width="474.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.2" y="862.0">ru/mail/polis/service/medalexey/ServiceImpl.handleRequestTask</text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="315.2" y="835.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.15%)</title><rect x="315.4" y="835.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.10%)</title><rect x="316.0" y="819.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,381 samples, 33.47%)</title><rect x="317.2" y="835.0" width="394.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.2" y="846.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.19%)</title><rect x="317.7" y="819.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="320.7" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, Thread*) (8 samples, 0.19%)</title><rect x="317.7" y="803.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="320.7" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.17%)</title><rect x="317.7" y="787.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="320.7" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.0] (6 samples, 0.15%)</title><rect x="318.0" y="771.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="321.0" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="319.7" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="322.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (18 samples, 0.44%)</title><rect x="320.0" y="819.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.0" y="830.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.07%)</title><rect x="322.9" y="803.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="325.9" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.12%)</title><rect x="323.7" y="803.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="326.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,321 samples, 32.02%)</title><rect x="325.2" y="819.0" width="377.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.2" y="830.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 0.99%)</title><rect x="325.4" y="803.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="326.9" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="329.9" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="326.9" y="771.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="329.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (35 samples, 0.85%)</title><rect x="327.2" y="787.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 0.41%)</title><rect x="327.2" y="771.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.2" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="331.2" y="755.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="334.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (18 samples, 0.44%)</title><rect x="332.0" y="771.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (18 samples, 0.44%)</title><rect x="332.0" y="755.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (18 samples, 0.44%)</title><rect x="332.0" y="739.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,279 samples, 31.00%)</title><rect x="337.2" y="803.0" width="365.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.2" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,279 samples, 31.00%)</title><rect x="337.2" y="787.0" width="365.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.2" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.07%)</title><rect x="338.0" y="771.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.05%)</title><rect x="338.9" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,271 samples, 30.80%)</title><rect x="339.5" y="771.0" width="363.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.5" y="782.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,268 samples, 30.73%)</title><rect x="340.3" y="755.0" width="362.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="343.3" y="766.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (35 samples, 0.85%)</title><rect x="344.6" y="739.0" width="10.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="347.6" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.15%)</title><rect x="347.2" y="723.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="350.2" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="348.9" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="351.9" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="349.5" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="352.5" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.10%)</title><rect x="350.0" y="723.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="353.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.24%)</title><rect x="351.2" y="723.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="354.2" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="352.0" y="707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="355.0" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="352.6" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="355.6" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.10%)</title><rect x="352.9" y="707.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="355.9" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.10%)</title><rect x="352.9" y="691.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="355.9" y="702.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.02%)</title><rect x="354.0" y="723.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="357.0" y="734.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="354.3" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="357.3" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="354.6" y="739.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="357.6" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="355.5" y="739.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="358.5" y="750.0"></text>
</g>
<g>
<title>__send (1,205 samples, 29.21%)</title><rect x="356.0" y="739.0" width="344.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="359.0" y="750.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,164 samples, 28.21%)</title><rect x="367.8" y="723.0" width="332.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.8" y="734.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (6 samples, 0.15%)</title><rect x="367.8" y="707.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="370.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1,158 samples, 28.07%)</title><rect x="369.5" y="707.0" width="331.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.5" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.02%)</title><rect x="369.8" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="372.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1,130 samples, 27.39%)</title><rect x="370.1" y="691.0" width="323.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="373.1" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,124 samples, 27.24%)</title><rect x="370.6" y="675.0" width="321.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="373.6" y="686.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="372.9" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="375.9" y="670.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.12%)</title><rect x="373.5" y="659.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="376.5" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (1,082 samples, 26.22%)</title><rect x="374.9" y="659.0" width="309.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="377.9" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.12%)</title><rect x="375.5" y="643.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="378.5" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,043 samples, 25.28%)</title><rect x="376.9" y="643.0" width="298.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="379.9" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,042 samples, 25.25%)</title><rect x="377.2" y="627.0" width="298.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="380.2" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="377.2" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="380.2" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="377.5" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="380.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.10%)</title><rect x="377.8" y="611.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="380.8" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.07%)</title><rect x="378.9" y="611.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="381.9" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="379.2" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="382.2" y="606.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="379.8" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="382.8" y="622.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.05%)</title><rect x="380.4" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.4" y="622.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 0.12%)</title><rect x="380.9" y="611.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="383.9" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.07%)</title><rect x="382.4" y="611.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="385.4" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,021 samples, 24.75%)</title><rect x="383.2" y="611.0" width="292.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="386.2" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (12 samples, 0.29%)</title><rect x="389.5" y="595.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.5" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.22%)</title><rect x="390.4" y="579.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="393.4" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.05%)</title><rect x="392.9" y="595.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="395.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="393.5" y="595.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="396.5" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.17%)</title><rect x="394.4" y="595.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="397.4" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.12%)</title><rect x="394.4" y="579.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.4" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.05%)</title><rect x="395.8" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="398.8" y="590.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="396.4" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="399.4" y="606.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="396.9" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="399.9" y="606.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="397.2" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.2" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.10%)</title><rect x="397.5" y="595.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.5" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.10%)</title><rect x="397.5" y="579.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="400.5" y="590.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="398.4" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="401.4" y="574.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="398.4" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="401.4" y="558.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="398.4" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.4" y="542.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="398.4" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.4" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (50 samples, 1.21%)</title><rect x="398.7" y="595.0" width="14.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="401.7" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (46 samples, 1.11%)</title><rect x="399.5" y="579.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.5" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (18 samples, 0.44%)</title><rect x="401.2" y="563.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="404.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.24%)</title><rect x="401.5" y="547.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="404.5" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="403.5" y="531.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="406.5" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="404.1" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="407.1" y="542.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="404.4" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="407.4" y="558.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.05%)</title><rect x="404.7" y="547.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="407.7" y="558.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.10%)</title><rect x="405.2" y="547.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.2" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="406.4" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="409.4" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.32%)</title><rect x="406.7" y="563.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="409.7" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.05%)</title><rect x="409.8" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="412.8" y="558.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.10%)</title><rect x="410.4" y="563.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="413.4" y="574.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.10%)</title><rect x="410.4" y="547.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.4" y="558.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.07%)</title><rect x="411.5" y="563.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.5" y="574.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="412.4" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="415.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="412.7" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="415.7" y="590.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.15%)</title><rect x="413.0" y="595.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="416.0" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="414.7" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="417.7" y="606.0"></text>
</g>
<g>
<title>tcp_push (890 samples, 21.57%)</title><rect x="415.2" y="595.0" width="254.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="418.2" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (889 samples, 21.55%)</title><rect x="415.5" y="579.0" width="254.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="418.5" y="590.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.07%)</title><rect x="416.4" y="563.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.4" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="417.3" y="563.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="420.3" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="417.5" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="420.5" y="574.0"></text>
</g>
<g>
<title>tcp_mtu_probe (2 samples, 0.05%)</title><rect x="418.1" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.1" y="574.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.05%)</title><rect x="418.7" y="563.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="421.7" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (876 samples, 21.23%)</title><rect x="419.3" y="563.0" width="250.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="422.3" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (808 samples, 19.58%)</title><rect x="424.1" y="547.0" width="231.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.1" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="431.6" y="531.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="434.6" y="542.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.10%)</title><rect x="431.8" y="531.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="434.8" y="542.0"></text>
</g>
<g>
<title>bpf_skops_write_hdr_opt.isra.0 (2 samples, 0.05%)</title><rect x="433.0" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="436.0" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (763 samples, 18.49%)</title><rect x="433.6" y="531.0" width="218.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="436.6" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (760 samples, 18.42%)</title><rect x="433.6" y="515.0" width="217.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="436.6" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.05%)</title><rect x="435.3" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.3" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.10%)</title><rect x="435.8" y="499.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.8" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.10%)</title><rect x="435.8" y="483.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="438.8" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="437.0" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="440.0" y="510.0"></text>
</g>
<g>
<title>ip_local_out (745 samples, 18.06%)</title><rect x="437.3" y="499.0" width="213.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="440.3" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (160 samples, 3.88%)</title><rect x="437.8" y="483.0" width="45.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.8" y="494.0">__ip..</text>
</g>
<g>
<title>__x86_retpoline_rax (2 samples, 0.05%)</title><rect x="437.8" y="467.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="440.8" y="478.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.07%)</title><rect x="438.4" y="467.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="441.4" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (8 samples, 0.19%)</title><rect x="439.3" y="467.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.3" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.10%)</title><rect x="441.6" y="467.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="444.6" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (8 samples, 0.19%)</title><rect x="442.7" y="467.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="445.7" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (131 samples, 3.17%)</title><rect x="445.0" y="467.0" width="37.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.0" y="478.0">nf_..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.15%)</title><rect x="445.3" y="451.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="448.3" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (22 samples, 0.53%)</title><rect x="447.0" y="451.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="450.0" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="447.0" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="450.0" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (21 samples, 0.51%)</title><rect x="447.3" y="435.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="450.3" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.12%)</title><rect x="453.3" y="451.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="456.3" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (89 samples, 2.16%)</title><rect x="454.7" y="451.0" width="25.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="457.7" y="462.0">i..</text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.07%)</title><rect x="455.0" y="435.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="458.0" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.02%)</title><rect x="455.9" y="435.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="458.9" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (83 samples, 2.01%)</title><rect x="456.1" y="435.0" width="23.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="459.1" y="446.0">n..</text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (11 samples, 0.27%)</title><rect x="459.0" y="419.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.0" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (4 samples, 0.10%)</title><rect x="462.2" y="419.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="465.2" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="463.3" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="466.3" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.05%)</title><rect x="463.6" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.6" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (4 samples, 0.10%)</title><rect x="464.2" y="419.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="467.2" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (42 samples, 1.02%)</title><rect x="465.3" y="419.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="468.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="471.3" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="474.3" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="471.3" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="474.3" y="398.0"></text>
</g>
<g>
<title>nf_ct_acct_add?[nf_conntrack] (2 samples, 0.05%)</title><rect x="471.6" y="403.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="474.6" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (5 samples, 0.12%)</title><rect x="472.2" y="403.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="475.2" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (13 samples, 0.32%)</title><rect x="473.6" y="403.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="476.6" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.10%)</title><rect x="476.2" y="387.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="479.2" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (9 samples, 0.22%)</title><rect x="477.3" y="419.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="480.3" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.02%)</title><rect x="479.9" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.9" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.05%)</title><rect x="480.2" y="451.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (6 samples, 0.15%)</title><rect x="480.7" y="451.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.7" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (6 samples, 0.15%)</title><rect x="480.7" y="435.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.7" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.05%)</title><rect x="480.7" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="483.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (4 samples, 0.10%)</title><rect x="481.3" y="419.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="484.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (4 samples, 0.10%)</title><rect x="482.5" y="467.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="485.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="483.6" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="486.6" y="494.0"></text>
</g>
<g>
<title>ip_output (571 samples, 13.84%)</title><rect x="483.9" y="483.0" width="163.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.9" y="494.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.05%)</title><rect x="484.2" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="487.2" y="478.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="484.7" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="487.7" y="478.0"></text>
</g>
<g>
<title>apparmor_ipv4_postroute (1 samples, 0.02%)</title><rect x="485.0" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.0" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (551 samples, 13.35%)</title><rect x="485.3" y="467.0" width="157.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="488.3" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (10 samples, 0.24%)</title><rect x="485.9" y="451.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.9" y="462.0"></text>
</g>
<g>
<title>migrate_disable (1 samples, 0.02%)</title><rect x="488.5" y="435.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="491.5" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (535 samples, 12.97%)</title><rect x="488.7" y="451.0" width="153.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="491.7" y="462.0">__ip_finish_output</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="489.0" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="492.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (533 samples, 12.92%)</title><rect x="489.3" y="435.0" width="152.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="492.3" y="446.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (466 samples, 11.29%)</title><rect x="493.6" y="419.0" width="133.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="496.6" y="430.0">__local_bh_enable..</text>
</g>
<g>
<title>do_softirq (465 samples, 11.27%)</title><rect x="493.9" y="403.0" width="133.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="496.9" y="414.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (458 samples, 11.10%)</title><rect x="495.9" y="387.0" width="131.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="498.9" y="398.0">do_softirq_own_s..</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (458 samples, 11.10%)</title><rect x="495.9" y="371.0" width="131.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.9" y="382.0">asm_call_sysvec_..</text>
</g>
<g>
<title>__softirqentry_text_start (458 samples, 11.10%)</title><rect x="495.9" y="355.0" width="131.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.9" y="366.0">__softirqentry_t..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.05%)</title><rect x="498.2" y="339.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="501.2" y="350.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="498.8" y="339.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="501.8" y="350.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="499.0" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.0" y="350.0"></text>
</g>
<g>
<title>net_rx_action (445 samples, 10.79%)</title><rect x="499.3" y="339.0" width="127.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="502.3" y="350.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (435 samples, 10.54%)</title><rect x="501.6" y="323.0" width="124.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.6" y="334.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (425 samples, 10.30%)</title><rect x="503.9" y="307.0" width="121.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="506.9" y="318.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="504.2" y="291.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="507.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (423 samples, 10.25%)</title><rect x="504.5" y="291.0" width="121.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="507.5" y="302.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.32%)</title><rect x="504.5" y="275.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (408 samples, 9.89%)</title><rect x="508.2" y="275.0" width="116.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="511.2" y="286.0">ip_rcv</text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="509.3" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="509.6" y="259.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="512.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.10%)</title><rect x="510.2" y="259.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (378 samples, 9.16%)</title><rect x="511.3" y="259.0" width="108.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="514.3" y="270.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (370 samples, 8.97%)</title><rect x="511.6" y="243.0" width="105.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="514.6" y="254.0">ip_local_deli..</text>
</g>
<g>
<title>ip_local_deliver_finish (341 samples, 8.26%)</title><rect x="512.5" y="227.0" width="97.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="515.5" y="238.0">ip_local_de..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (339 samples, 8.22%)</title><rect x="512.5" y="211.0" width="96.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="515.5" y="222.0">ip_protocol..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="513.3" y="195.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="516.3" y="206.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="513.6" y="195.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="516.6" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.07%)</title><rect x="514.2" y="195.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.2" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="515.1" y="195.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.1" y="206.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="515.3" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="518.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.05%)</title><rect x="515.6" y="195.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (326 samples, 7.90%)</title><rect x="516.2" y="195.0" width="93.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="519.2" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (17 samples, 0.41%)</title><rect x="520.5" y="179.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="523.5" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="525.1" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.1" y="174.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="525.4" y="179.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.4" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.07%)</title><rect x="525.6" y="179.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.6" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="526.5" y="179.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="529.5" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="526.8" y="179.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.22%)</title><rect x="527.1" y="179.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.1" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.07%)</title><rect x="527.1" y="163.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="530.1" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.10%)</title><rect x="527.9" y="163.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="530.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.05%)</title><rect x="529.1" y="163.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="532.1" y="174.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="529.6" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="532.6" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.07%)</title><rect x="529.9" y="179.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="532.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (272 samples, 6.59%)</title><rect x="530.8" y="179.0" width="77.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="533.8" y="190.0">tcp_v4_do..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="531.4" y="163.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="534.4" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="531.6" y="163.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="534.6" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.10%)</title><rect x="531.9" y="163.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="534.9" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="533.1" y="163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="536.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (263 samples, 6.37%)</title><rect x="533.4" y="163.0" width="75.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="536.4" y="174.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (21 samples, 0.51%)</title><rect x="538.8" y="147.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="541.8" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="539.7" y="131.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="542.7" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (17 samples, 0.41%)</title><rect x="539.9" y="131.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="542.9" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.41%)</title><rect x="539.9" y="115.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.9" y="126.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="539.9" y="99.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="542.9" y="110.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.39%)</title><rect x="540.2" y="99.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="543.2" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.36%)</title><rect x="540.2" y="83.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="543.2" y="94.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="544.5" y="83.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="544.5" y="67.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="547.5" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="544.8" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="547.8" y="158.0"></text>
</g>
<g>
<title>tcp_ack (101 samples, 2.45%)</title><rect x="545.1" y="147.0" width="28.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="548.1" y="158.0">tc..</text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="550.0" y="131.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="553.0" y="142.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.05%)</title><rect x="550.2" y="131.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="553.2" y="142.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="550.8" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="553.8" y="142.0"></text>
</g>
<g>
<title>tcp_ack_tstamp (3 samples, 0.07%)</title><rect x="551.1" y="131.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="554.1" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (71 samples, 1.72%)</title><rect x="552.0" y="131.0" width="20.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (49 samples, 1.19%)</title><rect x="555.1" y="115.0" width="14.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="558.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.12%)</title><rect x="555.1" y="99.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="558.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="555.4" y="83.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="558.4" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="555.7" y="83.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="558.7" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="556.2" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="559.2" y="78.0"></text>
</g>
<g>
<title>skb_release_all (41 samples, 0.99%)</title><rect x="556.5" y="99.0" width="11.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="559.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (36 samples, 0.87%)</title><rect x="557.1" y="83.0" width="10.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="560.1" y="94.0"></text>
</g>
<g>
<title>skb_free_head (18 samples, 0.44%)</title><rect x="562.2" y="67.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="565.2" y="78.0"></text>
</g>
<g>
<title>kfree (18 samples, 0.44%)</title><rect x="562.2" y="51.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="565.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="566.8" y="35.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="569.8" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.07%)</title><rect x="567.4" y="83.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="570.4" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="568.3" y="99.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="571.3" y="110.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="568.5" y="99.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="571.5" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="569.1" y="115.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="572.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="569.7" y="115.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="572.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.07%)</title><rect x="570.0" y="115.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="573.0" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="570.8" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.8" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.05%)</title><rect x="571.1" y="115.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="574.1" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.05%)</title><rect x="571.7" y="115.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.7" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.07%)</title><rect x="572.3" y="131.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="575.3" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="573.1" y="131.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="576.1" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="573.4" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="576.4" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="573.7" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="576.7" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (102 samples, 2.47%)</title><rect x="574.0" y="147.0" width="29.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="577.0" y="158.0">tc..</text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.05%)</title><rect x="574.0" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="577.0" y="142.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="574.5" y="131.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="577.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (99 samples, 2.40%)</title><rect x="574.8" y="131.0" width="28.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="577.8" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (96 samples, 2.33%)</title><rect x="575.7" y="115.0" width="27.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="578.7" y="126.0">_..</text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="575.7" y="99.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (95 samples, 2.30%)</title><rect x="576.0" y="99.0" width="27.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="579.0" y="110.0">_..</text>
</g>
<g>
<title>__lock_text_start (94 samples, 2.28%)</title><rect x="576.3" y="83.0" width="26.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="579.3" y="94.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.10%)</title><rect x="603.1" y="147.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="606.1" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="604.3" y="147.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="607.3" y="158.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.07%)</title><rect x="604.3" y="131.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="607.3" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.05%)</title><rect x="605.1" y="147.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="608.1" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="605.7" y="147.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="608.7" y="158.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.05%)</title><rect x="606.3" y="147.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="609.3" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="606.9" y="147.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="609.9" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="607.1" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="610.1" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.07%)</title><rect x="607.4" y="147.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.4" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="608.3" y="147.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.07%)</title><rect x="608.6" y="179.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="611.6" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="609.4" y="211.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="609.7" y="211.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="612.7" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="610.0" y="227.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.0" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.05%)</title><rect x="610.6" y="227.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="613.6" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.51%)</title><rect x="611.2" y="227.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="614.2" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.22%)</title><rect x="611.2" y="211.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.2" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.22%)</title><rect x="611.2" y="195.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="614.2" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (7 samples, 0.17%)</title><rect x="613.7" y="211.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="616.7" y="222.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (5 samples, 0.12%)</title><rect x="614.3" y="195.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="617.3" y="206.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.02%)</title><rect x="615.2" y="179.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="618.2" y="190.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="615.4" y="179.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="618.4" y="190.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.02%)</title><rect x="615.7" y="211.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="618.7" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (2 samples, 0.05%)</title><rect x="616.0" y="211.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="619.0" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (2 samples, 0.05%)</title><rect x="616.6" y="211.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="619.6" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="616.9" y="195.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="619.9" y="206.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="616.9" y="179.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="619.9" y="190.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (1 samples, 0.02%)</title><rect x="617.2" y="227.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="620.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="617.4" y="243.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (4 samples, 0.10%)</title><rect x="618.0" y="243.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="621.0" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="619.2" y="243.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="622.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="619.4" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="622.4" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.05%)</title><rect x="619.7" y="259.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="622.7" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (3 samples, 0.07%)</title><rect x="620.3" y="259.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="623.3" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.27%)</title><rect x="621.2" y="259.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.2" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="622.3" y="243.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="625.3" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.02%)</title><rect x="622.6" y="243.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.6" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.02%)</title><rect x="622.6" y="227.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="625.6" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.05%)</title><rect x="622.9" y="243.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="625.9" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_pre_routing?[nf_nat] (3 samples, 0.07%)</title><rect x="623.5" y="243.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="626.5" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (3 samples, 0.07%)</title><rect x="623.5" y="227.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="626.5" y="238.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.05%)</title><rect x="623.5" y="211.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.5" y="222.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.02%)</title><rect x="624.0" y="211.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.0" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_pre_routing?[nf_nat] (2 samples, 0.05%)</title><rect x="624.3" y="259.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.3" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="624.9" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="627.9" y="286.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="625.2" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="628.2" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="625.5" y="307.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="628.5" y="318.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (2 samples, 0.05%)</title><rect x="626.0" y="323.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="629.0" y="334.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="626.6" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="629.6" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (51 samples, 1.24%)</title><rect x="626.9" y="419.0" width="14.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="629.9" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (51 samples, 1.24%)</title><rect x="626.9" y="403.0" width="14.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="629.9" y="414.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="630.3" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (29 samples, 0.70%)</title><rect x="630.6" y="387.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="633.6" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="631.7" y="371.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="634.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (21 samples, 0.51%)</title><rect x="632.3" y="371.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="635.3" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="633.2" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="636.2" y="366.0"></text>
</g>
<g>
<title>netif_rx (13 samples, 0.32%)</title><rect x="633.5" y="355.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="636.5" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="633.7" y="339.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="636.7" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.22%)</title><rect x="634.6" y="339.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="637.6" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.19%)</title><rect x="634.9" y="323.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="637.9" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="637.2" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.2" y="366.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.05%)</title><rect x="637.5" y="355.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.5" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="638.0" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="641.0" y="366.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="638.0" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="641.0" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="638.3" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="641.3" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="638.6" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="641.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="638.9" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="641.9" y="398.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.02%)</title><rect x="639.2" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="642.2" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.15%)</title><rect x="639.5" y="387.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="642.5" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.05%)</title><rect x="640.3" y="371.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.3" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="640.6" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="643.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="640.9" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="643.9" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="641.2" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="644.2" y="398.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="641.5" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.5" y="430.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="641.8" y="451.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="644.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="642.0" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="645.0" y="462.0"></text>
</g>
<g>
<title>migrate_disable (2 samples, 0.05%)</title><rect x="642.3" y="451.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="645.3" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.07%)</title><rect x="642.9" y="467.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="645.9" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.27%)</title><rect x="643.8" y="467.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="646.8" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (5 samples, 0.12%)</title><rect x="644.0" y="451.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="647.0" y="462.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (2 samples, 0.05%)</title><rect x="644.6" y="435.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="647.6" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.02%)</title><rect x="644.9" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="647.9" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.02%)</title><rect x="645.2" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="648.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="645.5" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="648.5" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (4 samples, 0.10%)</title><rect x="645.8" y="451.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="648.8" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (4 samples, 0.10%)</title><rect x="645.8" y="435.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="648.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.07%)</title><rect x="645.8" y="419.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="648.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.02%)</title><rect x="646.6" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="649.6" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.02%)</title><rect x="646.9" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="649.9" y="478.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.05%)</title><rect x="647.2" y="483.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="650.2" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.17%)</title><rect x="647.8" y="483.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="650.8" y="494.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (2 samples, 0.05%)</title><rect x="649.8" y="483.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="652.8" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="650.3" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="653.3" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.07%)</title><rect x="650.9" y="515.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="653.9" y="526.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.15%)</title><rect x="651.8" y="531.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.8" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.05%)</title><rect x="651.8" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.8" y="526.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.10%)</title><rect x="652.3" y="515.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="655.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="653.2" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="656.2" y="510.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="653.5" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="656.5" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="653.8" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.8" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="654.1" y="531.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="657.1" y="542.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="654.3" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="657.3" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="654.6" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="657.6" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="654.9" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.9" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="654.9" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.9" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="655.2" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="658.2" y="558.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.07%)</title><rect x="655.5" y="547.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="658.5" y="558.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.05%)</title><rect x="656.3" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="659.3" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="656.9" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="659.9" y="558.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.12%)</title><rect x="657.2" y="547.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="660.2" y="558.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="658.6" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.6" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="658.9" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="661.9" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.07%)</title><rect x="659.2" y="547.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.2" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (20 samples, 0.48%)</title><rect x="660.1" y="547.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="663.1" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="660.3" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="663.3" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="660.6" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="663.6" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="660.9" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="663.9" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (16 samples, 0.39%)</title><rect x="661.2" y="531.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="664.2" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (16 samples, 0.39%)</title><rect x="661.2" y="515.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="664.2" y="526.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.39%)</title><rect x="661.2" y="499.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="664.2" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.32%)</title><rect x="661.8" y="483.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="664.8" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="665.5" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="665.5" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="668.5" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.05%)</title><rect x="665.8" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="668.8" y="558.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="666.3" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="669.3" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="666.6" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="669.6" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.15%)</title><rect x="666.9" y="547.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="669.9" y="558.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="668.4" y="531.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.4" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.05%)</title><rect x="668.6" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.6" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="669.2" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.2" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="669.8" y="595.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.8" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (15 samples, 0.36%)</title><rect x="670.4" y="595.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="673.4" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.10%)</title><rect x="670.6" y="579.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="673.6" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.24%)</title><rect x="671.8" y="579.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.8" y="590.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="674.4" y="563.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.4" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="674.6" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="677.6" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (31 samples, 0.75%)</title><rect x="675.2" y="643.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.2" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (25 samples, 0.61%)</title><rect x="676.9" y="627.0" width="7.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.9" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (25 samples, 0.61%)</title><rect x="676.9" y="611.0" width="7.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="679.9" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (10 samples, 0.24%)</title><rect x="681.2" y="595.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="684.2" y="606.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.02%)</title><rect x="682.9" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="685.9" y="590.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="683.2" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="686.2" y="590.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.05%)</title><rect x="683.5" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="686.5" y="590.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.02%)</title><rect x="683.8" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="686.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="684.1" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="687.1" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.65%)</title><rect x="684.4" y="659.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="687.4" y="670.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.44%)</title><rect x="684.4" y="643.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="687.4" y="654.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.44%)</title><rect x="684.4" y="627.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="687.4" y="638.0"></text>
</g>
<g>
<title>__fget_files (18 samples, 0.44%)</title><rect x="684.4" y="611.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="687.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.22%)</title><rect x="689.5" y="643.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="692.5" y="654.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="692.1" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="695.1" y="686.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="692.4" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="695.4" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="692.7" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="695.7" y="686.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (24 samples, 0.58%)</title><rect x="693.2" y="691.0" width="6.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.2" y="702.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (2 samples, 0.05%)</title><rect x="700.1" y="691.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="703.1" y="702.0"></text>
</g>
<g>
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="700.4" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="703.4" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="700.4" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.4" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="700.4" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="703.4" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="700.4" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="703.4" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.15%)</title><rect x="700.7" y="739.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="703.7" y="750.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.05%)</title><rect x="702.4" y="739.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="705.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (31 samples, 0.75%)</title><rect x="703.0" y="819.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.32%)</title><rect x="707.8" y="803.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.32%)</title><rect x="707.8" y="787.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.trim (1 samples, 0.02%)</title><rect x="711.5" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.5" y="814.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.02%)</title><rect x="711.8" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.increment (1 samples, 0.02%)</title><rect x="711.8" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.02%)</title><rect x="711.8" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="711.8" y="771.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="714.8" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="711.8" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="714.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (32 samples, 0.78%)</title><rect x="712.1" y="835.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="716.4" y="819.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="716.4" y="803.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="716.4" y="787.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.12%)</title><rect x="716.4" y="771.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.4" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="717.8" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="720.8" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.15%)</title><rect x="718.1" y="819.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="721.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.12%)</title><rect x="719.8" y="819.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="720.1" y="803.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="720.1" y="787.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.10%)</title><rect x="720.1" y="771.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.32%)</title><rect x="721.3" y="835.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.32%)</title><rect x="721.3" y="819.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="721.3" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.05%)</title><rect x="721.3" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.05%)</title><rect x="721.3" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.27%)</title><rect x="721.8" y="803.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.8" y="814.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="721.8" y="787.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="724.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.22%)</title><rect x="722.1" y="787.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.12%)</title><rect x="723.3" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="724.7" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.7" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="724.7" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="727.7" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="724.7" y="755.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="727.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="724.7" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="727.7" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="724.7" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="727.7" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="724.7" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="727.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.entity (220 samples, 5.33%)</title><rect x="725.0" y="835.0" width="62.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.0" y="846.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.isBlank (2 samples, 0.05%)</title><rect x="725.3" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (2 samples, 0.05%)</title><rect x="725.3" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (1 samples, 0.02%)</title><rect x="725.6" y="787.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.02%)</title><rect x="725.6" y="771.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.put (217 samples, 5.26%)</title><rect x="725.8" y="819.0" width="62.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.8" y="830.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="726.7" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="726.7" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="726.7" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.7" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="726.7" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.19%)</title><rect x="727.0" y="803.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.19%)</title><rect x="727.0" y="787.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.19%)</title><rect x="727.0" y="771.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.19%)</title><rect x="727.0" y="755.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="728.1" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="729.0" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="729.0" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="729.0" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.0" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="729.3" y="803.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="732.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.10%)</title><rect x="729.8" y="803.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.8" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="730.7" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="733.7" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="730.7" y="771.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="733.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="730.7" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="733.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="730.7" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="733.7" y="750.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.02%)</title><rect x="730.7" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="733.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (19 samples, 0.46%)</title><rect x="731.0" y="803.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.32%)</title><rect x="731.0" y="787.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (7 samples, 0.17%)</title><rect x="732.7" y="771.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.17%)</title><rect x="732.7" y="755.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.17%)</title><rect x="732.7" y="739.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.15%)</title><rect x="733.0" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.07%)</title><rect x="733.8" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (6 samples, 0.15%)</title><rect x="734.7" y="787.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.7" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.15%)</title><rect x="734.7" y="771.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.15%)</title><rect x="734.7" y="755.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.7" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="734.7" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="737.7" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="734.7" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="737.7" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="734.7" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="737.7" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="734.7" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="737.7" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.12%)</title><rect x="735.0" y="739.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="735.0" y="723.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="735.0" y="707.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="735.0" y="691.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="735.3" y="675.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="735.3" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.3" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.10%)</title><rect x="735.3" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.3" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.10%)</title><rect x="735.3" y="627.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="738.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.upsert (180 samples, 4.36%)</title><rect x="736.4" y="803.0" width="51.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.4" y="814.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (180 samples, 4.36%)</title><rect x="736.4" y="787.0" width="51.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.4" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (180 samples, 4.36%)</title><rect x="736.4" y="771.0" width="51.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.4" y="782.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.10%)</title><rect x="738.1" y="755.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (3 samples, 0.07%)</title><rect x="739.3" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (3 samples, 0.07%)</title><rect x="739.3" y="739.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.07%)</title><rect x="740.1" y="755.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.07%)</title><rect x="740.1" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.07%)</title><rect x="740.1" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.07%)</title><rect x="740.1" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.1" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.07%)</title><rect x="740.1" y="691.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="740.1" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.1" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="740.1" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.1" y="670.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.05%)</title><rect x="740.4" y="675.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="743.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (164 samples, 3.97%)</title><rect x="741.0" y="755.0" width="46.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.0" y="766.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (92 samples, 2.23%)</title><rect x="761.6" y="739.0" width="26.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.6" y="750.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (92 samples, 2.23%)</title><rect x="761.6" y="723.0" width="26.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.6" y="734.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (92 samples, 2.23%)</title><rect x="761.6" y="707.0" width="26.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.6" y="718.0">j..</text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.02%)</title><rect x="778.5" y="691.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="781.5" y="702.0"></text>
</g>
<g>
<title>sysvec_reschedule_ipi (1 samples, 0.02%)</title><rect x="778.5" y="675.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="781.5" y="686.0"></text>
</g>
<g>
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="778.5" y="659.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.5" y="670.0"></text>
</g>
<g>
<title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="778.5" y="643.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="781.5" y="654.0"></text>
</g>
<g>
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="778.5" y="627.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.5" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="778.5" y="611.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="781.5" y="622.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="778.5" y="595.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (13 samples, 0.32%)</title><rect x="778.7" y="691.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (13 samples, 0.32%)</title><rect x="778.7" y="675.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.7" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (19 samples, 0.46%)</title><rect x="782.5" y="691.0" width="5.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="785.5" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,325 samples, 32.11%)</title><rect x="787.9" y="931.0" width="378.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.9" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="789.0" y="915.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="792.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="789.0" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="792.0" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="789.0" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="792.0" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="789.3" y="915.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="792.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.05%)</title><rect x="789.6" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.12%)</title><rect x="790.2" y="915.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="793.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.12%)</title><rect x="790.2" y="899.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.12%)</title><rect x="790.2" y="883.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (300 samples, 7.27%)</title><rect x="791.6" y="915.0" width="85.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.6" y="926.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (299 samples, 7.25%)</title><rect x="791.9" y="899.0" width="85.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.9" y="910.0">one/nio/ne..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.12%)</title><rect x="795.0" y="883.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="798.0" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.15%)</title><rect x="796.5" y="883.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="799.5" y="894.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (7 samples, 0.17%)</title><rect x="798.2" y="883.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="801.2" y="894.0"></text>
</g>
<g>
<title>clock_gettime (15 samples, 0.36%)</title><rect x="800.2" y="883.0" width="4.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="803.2" y="894.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.07%)</title><rect x="803.6" y="867.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="806.6" y="878.0"></text>
</g>
<g>
<title>epoll_wait (254 samples, 6.16%)</title><rect x="804.5" y="883.0" width="72.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="807.5" y="894.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (196 samples, 4.75%)</title><rect x="821.1" y="867.0" width="56.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="824.1" y="878.0">entry_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.02%)</title><rect x="821.1" y="851.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="824.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (194 samples, 4.70%)</title><rect x="821.4" y="851.0" width="55.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="824.4" y="862.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (174 samples, 4.22%)</title><rect x="821.4" y="835.0" width="49.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="824.4" y="846.0">__x64..</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="821.4" y="819.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.4" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (173 samples, 4.19%)</title><rect x="821.6" y="819.0" width="49.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.6" y="830.0">do_ep..</text>
</g>
<g>
<title>__fdget (6 samples, 0.15%)</title><rect x="821.6" y="803.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="824.6" y="814.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.15%)</title><rect x="821.6" y="787.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.6" y="798.0"></text>
</g>
<g>
<title>__fget_files (6 samples, 0.15%)</title><rect x="821.6" y="771.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="824.6" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="823.4" y="803.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="826.4" y="814.0"></text>
</g>
<g>
<title>__put_user_nocheck_4 (3 samples, 0.07%)</title><rect x="823.6" y="803.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="826.6" y="814.0"></text>
</g>
<g>
<title>ep_poll (152 samples, 3.68%)</title><rect x="824.5" y="803.0" width="43.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="827.5" y="814.0">ep_p..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="833.9" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="836.9" y="798.0"></text>
</g>
<g>
<title>ep_done_scan (5 samples, 0.12%)</title><rect x="834.2" y="787.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="837.2" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (35 samples, 0.85%)</title><rect x="835.7" y="787.0" width="10.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="838.7" y="798.0"></text>
</g>
<g>
<title>sock_poll (26 samples, 0.63%)</title><rect x="838.2" y="771.0" width="7.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.2" y="782.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.22%)</title><rect x="843.1" y="755.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="846.1" y="766.0"></text>
</g>
<g>
<title>ep_start_scan (4 samples, 0.10%)</title><rect x="845.7" y="787.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="848.7" y="798.0"></text>
</g>
<g>
<title>mutex_lock (17 samples, 0.41%)</title><rect x="846.8" y="787.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="849.8" y="798.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="851.1" y="771.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="854.1" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (47 samples, 1.14%)</title><rect x="851.7" y="787.0" width="13.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="854.7" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="852.2" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (44 samples, 1.07%)</title><rect x="852.5" y="771.0" width="12.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="855.5" y="782.0"></text>
</g>
<g>
<title>schedule (38 samples, 0.92%)</title><rect x="854.2" y="755.0" width="10.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="857.2" y="766.0"></text>
</g>
<g>
<title>__schedule (35 samples, 0.85%)</title><rect x="855.1" y="739.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="858.1" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (30 samples, 0.73%)</title><rect x="856.5" y="723.0" width="8.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.07%)</title><rect x="865.1" y="787.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="868.1" y="798.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.17%)</title><rect x="866.0" y="787.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="869.0" y="798.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="868.0" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.0" y="814.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.10%)</title><rect x="868.3" y="803.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="871.3" y="814.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.10%)</title><rect x="869.4" y="803.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="872.4" y="814.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="870.5" y="803.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.5" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="870.8" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.8" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="871.1" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.1" y="846.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (19 samples, 0.46%)</title><rect x="871.4" y="835.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="874.4" y="846.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="876.8" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="879.8" y="862.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.02%)</title><rect x="877.1" y="883.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="880.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,005 samples, 24.36%)</title><rect x="877.4" y="915.0" width="287.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.4" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (992 samples, 24.04%)</title><rect x="881.1" y="899.0" width="283.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.1" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (552 samples, 13.38%)</title><rect x="881.1" y="883.0" width="157.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.1" y="894.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (340 samples, 8.24%)</title><rect x="884.8" y="867.0" width="97.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.8" y="878.0">one/nio/htt..</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.handleRequest (340 samples, 8.24%)</title><rect x="884.8" y="851.0" width="97.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.8" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.27%)</title><rect x="887.1" y="835.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="890.1" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="887.1" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="890.1" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, Thread*) (10 samples, 0.24%)</title><rect x="887.4" y="819.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="890.4" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.24%)</title><rect x="887.4" y="803.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="890.4" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.0] (10 samples, 0.24%)</title><rect x="887.4" y="787.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="890.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (321 samples, 7.78%)</title><rect x="890.3" y="835.0" width="91.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.3" y="846.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (321 samples, 7.78%)</title><rect x="890.3" y="819.0" width="91.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="893.3" y="830.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (289 samples, 7.00%)</title><rect x="890.3" y="803.0" width="82.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.3" y="814.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15 samples, 0.36%)</title><rect x="890.3" y="787.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (15 samples, 0.36%)</title><rect x="890.3" y="771.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enqueue (15 samples, 0.36%)</title><rect x="890.3" y="755.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="894.6" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.lock (1 samples, 0.02%)</title><rect x="894.6" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="894.6" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="894.6" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="894.6" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="894.6" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="894.6" y="691.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="897.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="894.6" y="675.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="897.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (273 samples, 6.62%)</title><rect x="894.9" y="787.0" width="78.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.9" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (273 samples, 6.62%)</title><rect x="894.9" y="771.0" width="78.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.9" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (273 samples, 6.62%)</title><rect x="894.9" y="755.0" width="78.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.9" y="766.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (273 samples, 6.62%)</title><rect x="894.9" y="739.0" width="78.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.9" y="750.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (251 samples, 6.08%)</title><rect x="901.1" y="723.0" width="71.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.1" y="734.0">jdk/inte..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="902.0" y="707.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="905.0" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="902.3" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="905.3" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="902.6" y="707.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="905.6" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="903.4" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="906.4" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (49 samples, 1.19%)</title><rect x="903.7" y="707.0" width="14.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="906.7" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (4 samples, 0.10%)</title><rect x="906.9" y="691.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="909.9" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="908.0" y="691.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="911.0" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.10%)</title><rect x="908.6" y="691.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="911.6" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.15%)</title><rect x="909.7" y="691.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="912.7" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="911.4" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="914.4" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="912.0" y="691.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="915.0" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="912.9" y="691.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="915.9" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (4 samples, 0.10%)</title><rect x="913.2" y="691.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="916.2" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.07%)</title><rect x="914.3" y="691.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="917.3" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (8 samples, 0.19%)</title><rect x="915.2" y="691.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="918.2" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="917.5" y="691.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="920.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.7" y="707.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="920.7" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="917.7" y="691.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="920.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (188 samples, 4.56%)</title><rect x="918.0" y="707.0" width="53.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="921.0" y="718.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (160 samples, 3.88%)</title><rect x="926.0" y="691.0" width="45.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.0" y="702.0">entr..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="926.0" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="929.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (158 samples, 3.83%)</title><rect x="926.6" y="675.0" width="45.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="929.6" y="686.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (148 samples, 3.59%)</title><rect x="926.6" y="659.0" width="42.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="929.6" y="670.0">__x6..</text>
</g>
<g>
<title>do_futex (142 samples, 3.44%)</title><rect x="928.3" y="643.0" width="40.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.3" y="654.0">do_..</text>
</g>
<g>
<title>futex_wake (136 samples, 3.30%)</title><rect x="928.9" y="627.0" width="38.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="931.9" y="638.0">fut..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="931.7" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="934.7" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.15%)</title><rect x="932.0" y="611.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="935.0" y="622.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="933.5" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.5" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="933.8" y="611.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="936.8" y="622.0"></text>
</g>
<g>
<title>wake_up_q (118 samples, 2.86%)</title><rect x="934.0" y="611.0" width="33.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="937.0" y="622.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (117 samples, 2.84%)</title><rect x="934.3" y="595.0" width="33.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="937.3" y="606.0">tr..</text>
</g>
<g>
<title>__lock_text_start (116 samples, 2.81%)</title><rect x="934.6" y="579.0" width="33.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="937.6" y="590.0">__..</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="967.5" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="970.5" y="574.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="967.5" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="970.5" y="558.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="967.5" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="970.5" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="967.5" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="970.5" y="526.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="967.5" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.5" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="967.5" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="970.5" y="494.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="967.5" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="970.5" y="478.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="967.5" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.5" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="967.5" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.5" y="446.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="967.8" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="970.8" y="638.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.07%)</title><rect x="968.1" y="627.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="971.1" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="968.9" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="971.9" y="670.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (9 samples, 0.22%)</title><rect x="969.2" y="659.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="972.2" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="971.8" y="707.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="974.8" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@plt (1 samples, 0.02%)</title><rect x="972.6" y="707.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="975.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="972.9" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="972.9" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.getAndUnsetStatus (2 samples, 0.05%)</title><rect x="972.9" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndBitwiseAndInt (2 samples, 0.05%)</title><rect x="972.9" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (30 samples, 0.73%)</title><rect x="973.5" y="803.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (30 samples, 0.73%)</title><rect x="973.5" y="787.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (30 samples, 0.73%)</title><rect x="973.5" y="771.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 0.73%)</title><rect x="973.5" y="755.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.5" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="981.2" y="739.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="984.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (61 samples, 1.48%)</title><rect x="982.1" y="867.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.1" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="984.1" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="984.1" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="987.1" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="984.1" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="987.1" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="984.1" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="987.1" y="814.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.02%)</title><rect x="984.1" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="987.1" y="798.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="984.1" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="987.1" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="984.4" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="987.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.27%)</title><rect x="984.7" y="851.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.7" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="984.7" y="835.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="987.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.02%)</title><rect x="984.7" y="819.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="987.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.24%)</title><rect x="984.9" y="835.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="987.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.24%)</title><rect x="984.9" y="819.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.24%)</title><rect x="984.9" y="803.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.19%)</title><rect x="985.5" y="787.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="988.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.41%)</title><rect x="987.8" y="851.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.41%)</title><rect x="987.8" y="835.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="992.4" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="995.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (24 samples, 0.58%)</title><rect x="992.7" y="851.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (16 samples, 0.39%)</title><rect x="999.5" y="867.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.5" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="999.5" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1002.5" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="999.5" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (15 samples, 0.36%)</title><rect x="999.8" y="851.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.8" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (15 samples, 0.36%)</title><rect x="999.8" y="835.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1002.8" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.12%)</title><rect x="1002.1" y="819.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1005.1" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1003.5" y="819.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1006.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (102 samples, 2.47%)</title><rect x="1004.1" y="867.0" width="29.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.1" y="878.0">on..</text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.32%)</title><rect x="1026.1" y="851.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.32%)</title><rect x="1026.1" y="835.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.07%)</title><rect x="1029.8" y="851.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.trim (9 samples, 0.22%)</title><rect x="1030.7" y="851.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.17%)</title><rect x="1031.3" y="835.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1034.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.48%)</title><rect x="1033.3" y="867.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1036.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.48%)</title><rect x="1033.3" y="851.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1036.3" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1037.9" y="835.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1040.9" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1037.9" y="819.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1040.9" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1037.9" y="803.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1040.9" y="814.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWordImpl**, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="1037.9" y="787.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.9" y="798.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.02%)</title><rect x="1037.9" y="771.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1040.9" y="782.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.02%)</title><rect x="1038.1" y="835.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1041.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1038.4" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1038.4" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="1038.4" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.4" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1038.4" y="787.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1041.4" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1038.4" y="771.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.4" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1038.4" y="755.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1041.4" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="1038.4" y="739.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.4" y="750.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="1038.7" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.05%)</title><rect x="1039.0" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1042.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (438 samples, 10.62%)</title><rect x="1039.6" y="883.0" width="125.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.6" y="894.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (429 samples, 10.40%)</title><rect x="1042.1" y="867.0" width="122.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.1" y="878.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (80 samples, 1.94%)</title><rect x="1045.9" y="851.0" width="22.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1048.9" y="862.0">J..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (12 samples, 0.29%)</title><rect x="1049.3" y="835.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1052.3" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (8 samples, 0.19%)</title><rect x="1052.7" y="835.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1055.7" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (8 samples, 0.19%)</title><rect x="1055.0" y="835.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1058.0" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="1057.3" y="835.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1060.3" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="1058.2" y="835.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1061.2" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (31 samples, 0.75%)</title><rect x="1058.4" y="835.0" width="8.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1061.4" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.12%)</title><rect x="1059.9" y="819.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1062.9" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.07%)</title><rect x="1061.3" y="819.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1064.3" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (7 samples, 0.17%)</title><rect x="1062.2" y="819.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1065.2" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (11 samples, 0.27%)</title><rect x="1064.2" y="819.0" width="3.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1067.2" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.17%)</title><rect x="1065.3" y="803.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1068.3" y="814.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.02%)</title><rect x="1067.3" y="835.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1070.3" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.10%)</title><rect x="1067.6" y="835.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1070.6" y="846.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1068.7" y="851.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1071.7" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.10%)</title><rect x="1069.0" y="851.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1072.0" y="862.0"></text>
</g>
<g>
<title>recv (331 samples, 8.02%)</title><rect x="1070.2" y="851.0" width="94.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1073.2" y="862.0">recv</text>
</g>
<g>
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="1092.5" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1095.5" y="846.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1092.5" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1095.5" y="830.0"></text>
</g>
<g>
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="1092.5" y="803.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1095.5" y="814.0"></text>
</g>
<g>
<title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1092.5" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1095.5" y="798.0"></text>
</g>
<g>
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="1092.5" y="771.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (252 samples, 6.11%)</title><rect x="1092.8" y="835.0" width="72.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1095.8" y="846.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.10%)</title><rect x="1092.8" y="819.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1095.8" y="830.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="1093.9" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1096.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (247 samples, 5.99%)</title><rect x="1094.2" y="819.0" width="70.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1097.2" y="830.0">do_sysca..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.02%)</title><rect x="1095.1" y="803.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1098.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (221 samples, 5.36%)</title><rect x="1095.3" y="803.0" width="63.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1098.3" y="814.0">__x64_s..</text>
</g>
<g>
<title>__sys_recvfrom (210 samples, 5.09%)</title><rect x="1095.3" y="787.0" width="60.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1098.3" y="798.0">__sys_..</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="1096.5" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1099.5" y="782.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1096.8" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1099.8" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (190 samples, 4.60%)</title><rect x="1097.1" y="771.0" width="54.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1100.1" y="782.0">sock_..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1097.9" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1100.9" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (143 samples, 3.47%)</title><rect x="1098.2" y="755.0" width="40.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1101.2" y="766.0">ine..</text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="1099.6" y="739.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1102.6" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (134 samples, 3.25%)</title><rect x="1100.5" y="739.0" width="38.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1103.5" y="750.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.12%)</title><rect x="1100.8" y="723.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1103.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.07%)</title><rect x="1102.2" y="723.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1105.2" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1103.1" y="723.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1106.1" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1103.1" y="707.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1106.1" y="718.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.19%)</title><rect x="1103.3" y="723.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1106.3" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1104.8" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1107.8" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.05%)</title><rect x="1105.1" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1108.1" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1105.6" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1108.6" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg_locked (111 samples, 2.69%)</title><rect x="1105.9" y="723.0" width="31.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1108.9" y="734.0">tc..</text>
</g>
<g>
<title>__kfree_skb (35 samples, 0.85%)</title><rect x="1110.8" y="707.0" width="10.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1113.8" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1110.8" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1113.8" y="702.0"></text>
</g>
<g>
<title>skb_release_all (31 samples, 0.75%)</title><rect x="1111.1" y="691.0" width="8.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.1" y="702.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.10%)</title><rect x="1111.1" y="675.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1114.1" y="686.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.10%)</title><rect x="1112.2" y="675.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1115.2" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (14 samples, 0.34%)</title><rect x="1113.4" y="675.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1116.4" y="686.0"></text>
</g>
<g>
<title>dst_release (13 samples, 0.32%)</title><rect x="1113.6" y="659.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1116.6" y="670.0"></text>
</g>
<g>
<title>sock_rfree (9 samples, 0.22%)</title><rect x="1117.4" y="675.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1120.4" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.07%)</title><rect x="1119.9" y="691.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1122.9" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.07%)</title><rect x="1120.8" y="707.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1123.8" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1121.6" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1124.6" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1121.9" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1124.9" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (36 samples, 0.87%)</title><rect x="1122.2" y="707.0" width="10.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1125.2" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (35 samples, 0.85%)</title><rect x="1122.5" y="691.0" width="10.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1125.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1125.9" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.9" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (22 samples, 0.53%)</title><rect x="1126.2" y="675.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1129.2" y="686.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.24%)</title><rect x="1126.2" y="659.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1129.2" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.22%)</title><rect x="1126.5" y="643.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1129.5" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="1129.1" y="659.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1132.1" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.19%)</title><rect x="1129.7" y="659.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.7" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.17%)</title><rect x="1129.9" y="643.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.9" y="654.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="1131.9" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1134.9" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.07%)</title><rect x="1132.5" y="707.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1135.5" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1133.1" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1136.1" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="1133.4" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1136.4" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (14 samples, 0.34%)</title><rect x="1133.7" y="707.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1136.7" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.17%)</title><rect x="1135.7" y="691.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1138.7" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1135.7" y="675.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1138.7" y="686.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.15%)</title><rect x="1135.9" y="675.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1138.9" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.10%)</title><rect x="1137.7" y="723.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1140.7" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg_locked (1 samples, 0.02%)</title><rect x="1138.8" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1141.8" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (43 samples, 1.04%)</title><rect x="1139.1" y="755.0" width="12.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1142.1" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.10%)</title><rect x="1140.2" y="739.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1143.2" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (35 samples, 0.85%)</title><rect x="1141.4" y="739.0" width="10.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1144.4" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.02%)</title><rect x="1141.7" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.7" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (33 samples, 0.80%)</title><rect x="1142.0" y="723.0" width="9.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1145.0" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1147.1" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.1" y="718.0"></text>
</g>
<g>
<title>aa_label_next_confined (3 samples, 0.07%)</title><rect x="1147.4" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1150.4" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (11 samples, 0.27%)</title><rect x="1148.2" y="707.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1151.2" y="718.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.02%)</title><rect x="1148.8" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1151.8" y="702.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.05%)</title><rect x="1149.1" y="691.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.1" y="702.0"></text>
</g>
<g>
<title>aa_profile_af_perm (6 samples, 0.15%)</title><rect x="1149.7" y="691.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.7" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.34%)</title><rect x="1151.4" y="771.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1154.4" y="782.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.10%)</title><rect x="1151.4" y="755.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1154.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="1151.4" y="739.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.4" y="750.0"></text>
</g>
<g>
<title>__fget_files (4 samples, 0.10%)</title><rect x="1151.4" y="723.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.24%)</title><rect x="1152.5" y="755.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1155.5" y="766.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="1155.4" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1158.4" y="798.0"></text>
</g>
<g>
<title>import_single_range (7 samples, 0.17%)</title><rect x="1156.0" y="787.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.0" y="798.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1157.7" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1160.7" y="782.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1157.7" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1160.7" y="766.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1157.7" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.7" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1157.7" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1160.7" y="734.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1157.7" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.7" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1157.7" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.7" y="702.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1157.7" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.7" y="686.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1157.7" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.7" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1157.7" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1160.7" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="1158.0" y="787.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1161.0" y="798.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (22 samples, 0.53%)</title><rect x="1158.5" y="803.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1161.5" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.17%)</title><rect x="1164.8" y="915.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.8" y="926.0"></text>
</g>
<g>
<title>start_thread (81 samples, 1.96%)</title><rect x="1166.8" y="931.0" width="23.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1169.8" y="942.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (81 samples, 1.96%)</title><rect x="1166.8" y="915.0" width="23.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1169.8" y="926.0">t..</text>
</g>
<g>
<title>Thread::call_run() (81 samples, 1.96%)</title><rect x="1166.8" y="899.0" width="23.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.8" y="910.0">T..</text>
</g>
<g>
<title>GangWorker::loop() (78 samples, 1.89%)</title><rect x="1166.8" y="883.0" width="22.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.8" y="894.0">G..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1166.8" y="867.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.8" y="878.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.05%)</title><rect x="1166.8" y="851.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.8" y="862.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWordImpl**) (2 samples, 0.05%)</title><rect x="1166.8" y="835.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.8" y="846.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1166.8" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.8" y="830.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (1 samples, 0.02%)</title><rect x="1167.1" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.1" y="830.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, int, bool) (1 samples, 0.02%)</title><rect x="1167.1" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.1" y="814.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (72 samples, 1.75%)</title><rect x="1167.4" y="867.0" width="20.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.4" y="878.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (50 samples, 1.21%)</title><rect x="1167.4" y="851.0" width="14.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.4" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (50 samples, 1.21%)</title><rect x="1167.4" y="835.0" width="14.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (2 samples, 0.05%)</title><rect x="1167.4" y="819.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.4" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (47 samples, 1.14%)</title><rect x="1168.0" y="819.0" width="13.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (31 samples, 0.75%)</title><rect x="1172.6" y="803.0" width="8.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.6" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (9 samples, 0.22%)</title><rect x="1178.8" y="787.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.8" y="798.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.02%)</title><rect x="1181.4" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.4" y="830.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (22 samples, 0.53%)</title><rect x="1181.7" y="851.0" width="6.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.7" y="862.0"></text>
</g>
<g>
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (21 samples, 0.51%)</title><rect x="1181.7" y="835.0" width="6.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.7" y="846.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (21 samples, 0.51%)</title><rect x="1181.7" y="819.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.7" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (12 samples, 0.29%)</title><rect x="1182.9" y="803.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.9" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (8 samples, 0.19%)</title><rect x="1184.0" y="787.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.0" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1185.7" y="771.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.7" y="782.0"></text>
</g>
<g>
<title>void G1ScanCardClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (5 samples, 0.12%)</title><rect x="1186.3" y="803.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.3" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.7" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.7" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="1187.7" y="803.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="1187.7" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.02%)</title><rect x="1187.7" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*) (1 samples, 0.02%)</title><rect x="1187.7" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>G1NmethodProcessor::do_regular_processing(nmethod*) (1 samples, 0.02%)</title><rect x="1187.7" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.02%)</title><rect x="1187.7" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (1 samples, 0.02%)</title><rect x="1187.7" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1188.0" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.0" y="878.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1188.3" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.3" y="878.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (1 samples, 0.02%)</title><rect x="1188.3" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.3" y="862.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1188.3" y="835.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.3" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1188.3" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="830.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1188.6" y="867.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>void WeakProcessor::Task::work&lt;G1STWIsAliveClosure, G1KeepAliveClosure&gt;(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*) (1 samples, 0.02%)</title><rect x="1188.9" y="867.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.9" y="878.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.05%)</title><rect x="1189.1" y="883.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.1" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.05%)</title><rect x="1189.1" y="867.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.1" y="878.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="1189.1" y="851.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.1" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.05%)</title><rect x="1189.1" y="835.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.1" y="846.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.05%)</title><rect x="1189.1" y="819.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.05%)</title><rect x="1189.1" y="803.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.1" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (2 samples, 0.05%)</title><rect x="1189.1" y="787.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.1" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="1189.1" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.1" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, G1EvacuationInfo&amp;, unsigned long const*) (1 samples, 0.02%)</title><rect x="1189.1" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.1" y="766.0"></text>
</g>
<g>
<title>HeapRegionManager::rebuild_free_list(WorkGang*) (1 samples, 0.02%)</title><rect x="1189.1" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int, bool) (1 samples, 0.02%)</title><rect x="1189.1" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int, bool) (1 samples, 0.02%)</title><rect x="1189.1" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1189.1" y="691.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1189.1" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1189.1" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1189.1" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1192.1" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1189.1" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.1" y="638.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1189.1" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1192.1" y="622.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1189.1" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1192.1" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1189.1" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1192.1" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1189.1" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.1" y="574.0"></text>
</g>
<g>
<title>GCHeapLog::log_heap(CollectedHeap*, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="1189.4" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1189.4" y="755.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.02%)</title><rect x="1189.7" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="878.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.02%)</title><rect x="1189.7" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="862.0"></text>
</g>
</g>
</svg>
