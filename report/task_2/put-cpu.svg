<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (9,539 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.05%)</title><rect x="10.5" y="947.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.5" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.05%)</title><rect x="10.5" y="931.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.05%)</title><rect x="10.5" y="915.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.04%)</title><rect x="10.6" y="899.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="11.1" y="947.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="14.1" y="958.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="11.7" y="931.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.7" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (19 samples, 0.20%)</title><rect x="12.1" y="947.0" width="2.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.1" y="958.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.05%)</title><rect x="12.1" y="931.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="15.1" y="942.0"></text>
</g>
<g>
<title>clock_gettime (14 samples, 0.15%)</title><rect x="12.7" y="931.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="15.7" y="942.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (12 samples, 0.13%)</title><rect x="13.0" y="915.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (430 samples, 4.51%)</title><rect x="14.8" y="947.0" width="53.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.8" y="958.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (430 samples, 4.51%)</title><rect x="14.8" y="931.0" width="53.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.8" y="942.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (430 samples, 4.51%)</title><rect x="14.8" y="915.0" width="53.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.8" y="926.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (430 samples, 4.51%)</title><rect x="14.8" y="899.0" width="53.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.8" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (430 samples, 4.51%)</title><rect x="14.8" y="883.0" width="53.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.8" y="894.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO$$Lambda$91.0x0000000800bea0f0.run (430 samples, 4.51%)</title><rect x="14.8" y="867.0" width="53.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.8" y="878.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.lambda$upsert$0 (430 samples, 4.51%)</title><rect x="14.8" y="851.0" width="53.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.8" y="862.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.flush (430 samples, 4.51%)</title><rect x="14.8" y="835.0" width="53.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.8" y="846.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.clear (4 samples, 0.04%)</title><rect x="14.9" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.write (425 samples, 4.46%)</title><rect x="15.4" y="819.0" width="52.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.4" y="830.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.writeImpl (425 samples, 4.46%)</title><rect x="15.4" y="803.0" width="52.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.4" y="814.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.writeInt (74 samples, 0.78%)</title><rect x="16.1" y="787.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (72 samples, 0.75%)</title><rect x="16.3" y="771.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (67 samples, 0.70%)</title><rect x="16.8" y="755.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (62 samples, 0.65%)</title><rect x="16.8" y="739.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (62 samples, 0.65%)</title><rect x="16.8" y="723.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (62 samples, 0.65%)</title><rect x="16.8" y="707.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.8" y="718.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (3 samples, 0.03%)</title><rect x="16.9" y="691.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="19.9" y="702.0"></text>
</g>
<g>
<title>__libc_write (58 samples, 0.61%)</title><rect x="17.3" y="691.0" width="7.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="20.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.44%)</title><rect x="19.3" y="675.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.43%)</title><rect x="19.4" y="659.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="22.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (34 samples, 0.36%)</title><rect x="19.4" y="643.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="22.4" y="654.0"></text>
</g>
<g>
<title>ksys_write (34 samples, 0.36%)</title><rect x="19.4" y="627.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="22.4" y="638.0"></text>
</g>
<g>
<title>vfs_write (32 samples, 0.34%)</title><rect x="19.6" y="611.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="22.6" y="622.0"></text>
</g>
<g>
<title>new_sync_write (27 samples, 0.28%)</title><rect x="19.9" y="595.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.9" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (27 samples, 0.28%)</title><rect x="19.9" y="579.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="22.9" y="590.0"></text>
</g>
<g>
<title>ext4_buffered_write_iter (27 samples, 0.28%)</title><rect x="19.9" y="563.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.9" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (25 samples, 0.26%)</title><rect x="20.1" y="547.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.1" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (5 samples, 0.05%)</title><rect x="20.1" y="531.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.1" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (18 samples, 0.19%)</title><rect x="20.8" y="531.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.8" y="542.0"></text>
</g>
<g>
<title>generic_write_end (17 samples, 0.18%)</title><rect x="20.9" y="515.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.9" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (16 samples, 0.17%)</title><rect x="20.9" y="499.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="23.9" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (16 samples, 0.17%)</title><rect x="20.9" y="483.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="23.9" y="494.0"></text>
</g>
<g>
<title>__ext4_mark_inode_dirty (14 samples, 0.15%)</title><rect x="21.0" y="467.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.0" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (10 samples, 0.10%)</title><rect x="21.0" y="451.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="24.0" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (9 samples, 0.09%)</title><rect x="21.1" y="435.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.1" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (9 samples, 0.09%)</title><rect x="21.1" y="419.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="24.1" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (8 samples, 0.08%)</title><rect x="21.3" y="403.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.3" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.03%)</title><rect x="21.4" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="24.4" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (4 samples, 0.04%)</title><rect x="21.8" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.8" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.04%)</title><rect x="21.8" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.8" y="382.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.03%)</title><rect x="22.2" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="25.2" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="23.2" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.2" y="606.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="23.2" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="26.2" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.03%)</title><rect x="23.2" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="26.2" y="574.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.03%)</title><rect x="23.2" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="26.2" y="558.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (6 samples, 0.06%)</title><rect x="23.7" y="643.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="26.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.05%)</title><rect x="24.5" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.04%)</title><rect x="24.6" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.writeValueWithSize (318 samples, 3.33%)</title><rect x="25.2" y="787.0" width="39.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.2" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.writeInt (163 samples, 1.71%)</title><rect x="25.2" y="771.0" width="20.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (162 samples, 1.70%)</title><rect x="25.3" y="755.0" width="20.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.03%)</title><rect x="25.8" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.8" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="25.8" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (150 samples, 1.57%)</title><rect x="26.3" y="739.0" width="18.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.3" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (12 samples, 0.13%)</title><rect x="26.5" y="723.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (11 samples, 0.12%)</title><rect x="26.6" y="707.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (8 samples, 0.08%)</title><rect x="26.9" y="691.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (8 samples, 0.08%)</title><rect x="26.9" y="675.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (8 samples, 0.08%)</title><rect x="26.9" y="659.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (4 samples, 0.04%)</title><rect x="27.4" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (128 samples, 1.34%)</title><rect x="27.9" y="723.0" width="15.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (128 samples, 1.34%)</title><rect x="27.9" y="707.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (128 samples, 1.34%)</title><rect x="27.9" y="691.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.9" y="702.0"></text>
</g>
<g>
<title>__libc_write (124 samples, 1.30%)</title><rect x="28.3" y="675.0" width="15.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="31.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (99 samples, 1.04%)</title><rect x="31.4" y="659.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="34.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (97 samples, 1.02%)</title><rect x="31.6" y="643.0" width="12.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_write (85 samples, 0.89%)</title><rect x="31.8" y="627.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.8" y="638.0"></text>
</g>
<g>
<title>ksys_write (85 samples, 0.89%)</title><rect x="31.8" y="611.0" width="10.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="34.8" y="622.0"></text>
</g>
<g>
<title>vfs_write (81 samples, 0.85%)</title><rect x="32.3" y="595.0" width="10.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="35.3" y="606.0"></text>
</g>
<g>
<title>new_sync_write (76 samples, 0.80%)</title><rect x="32.6" y="579.0" width="9.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="35.6" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (76 samples, 0.80%)</title><rect x="32.6" y="563.0" width="9.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="35.6" y="574.0"></text>
</g>
<g>
<title>ext4_buffered_write_iter (75 samples, 0.79%)</title><rect x="32.8" y="547.0" width="9.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.8" y="558.0"></text>
</g>
<g>
<title>ext4_write_checks (4 samples, 0.04%)</title><rect x="33.4" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.4" y="542.0"></text>
</g>
<g>
<title>file_modified (3 samples, 0.03%)</title><rect x="33.5" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="36.5" y="526.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.03%)</title><rect x="33.5" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="36.5" y="510.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.03%)</title><rect x="33.5" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="36.5" y="494.0"></text>
</g>
<g>
<title>generic_perform_write (65 samples, 0.68%)</title><rect x="33.9" y="531.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="36.9" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (10 samples, 0.10%)</title><rect x="34.4" y="515.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="37.4" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.04%)</title><rect x="34.5" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="37.5" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.04%)</title><rect x="34.5" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="37.5" y="494.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.04%)</title><rect x="34.5" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="37.5" y="478.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.04%)</title><rect x="35.0" y="499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="38.0" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.04%)</title><rect x="35.0" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="38.0" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (46 samples, 0.48%)</title><rect x="35.6" y="515.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.6" y="526.0"></text>
</g>
<g>
<title>generic_write_end (43 samples, 0.45%)</title><rect x="35.7" y="499.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="38.7" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (40 samples, 0.42%)</title><rect x="35.9" y="483.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="38.9" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (39 samples, 0.41%)</title><rect x="36.0" y="467.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="39.0" y="478.0"></text>
</g>
<g>
<title>__ext4_mark_inode_dirty (35 samples, 0.37%)</title><rect x="36.2" y="451.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="39.2" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (24 samples, 0.25%)</title><rect x="36.3" y="435.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="39.3" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (21 samples, 0.22%)</title><rect x="36.6" y="419.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="39.6" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (19 samples, 0.20%)</title><rect x="36.8" y="403.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="39.8" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (17 samples, 0.18%)</title><rect x="37.1" y="387.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="40.1" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (7 samples, 0.07%)</title><rect x="37.2" y="371.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="40.2" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (9 samples, 0.09%)</title><rect x="38.1" y="371.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="41.1" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (8 samples, 0.08%)</title><rect x="38.2" y="355.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="41.2" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (10 samples, 0.10%)</title><rect x="39.3" y="435.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="42.3" y="446.0"></text>
</g>
<g>
<title>ext4_get_inode_loc (9 samples, 0.09%)</title><rect x="39.4" y="419.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="42.4" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (8 samples, 0.08%)</title><rect x="39.4" y="403.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="42.4" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (4 samples, 0.04%)</title><rect x="39.8" y="387.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="42.8" y="398.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.04%)</title><rect x="39.8" y="371.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="42.8" y="382.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.03%)</title><rect x="39.9" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="42.9" y="366.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (3 samples, 0.03%)</title><rect x="41.4" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="44.4" y="526.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (10 samples, 0.10%)</title><rect x="42.4" y="627.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="45.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.07%)</title><rect x="43.8" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.05%)</title><rect x="43.8" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.03%)</title><rect x="44.0" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.04%)</title><rect x="44.9" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (155 samples, 1.62%)</title><rect x="45.4" y="771.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (143 samples, 1.50%)</title><rect x="46.2" y="755.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (141 samples, 1.48%)</title><rect x="46.4" y="739.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (141 samples, 1.48%)</title><rect x="46.4" y="723.0" width="17.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (141 samples, 1.48%)</title><rect x="46.4" y="707.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.4" y="718.0"></text>
</g>
<g>
<title>__libc_write (132 samples, 1.38%)</title><rect x="46.9" y="691.0" width="16.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="49.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (111 samples, 1.16%)</title><rect x="49.5" y="675.0" width="13.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="52.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (111 samples, 1.16%)</title><rect x="49.5" y="659.0" width="13.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (98 samples, 1.03%)</title><rect x="49.5" y="643.0" width="12.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="52.5" y="654.0"></text>
</g>
<g>
<title>ksys_write (97 samples, 1.02%)</title><rect x="49.6" y="627.0" width="12.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="52.6" y="638.0"></text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.05%)</title><rect x="49.6" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="52.6" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.04%)</title><rect x="49.6" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="52.6" y="606.0"></text>
</g>
<g>
<title>__fget_files (4 samples, 0.04%)</title><rect x="49.6" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.6" y="590.0"></text>
</g>
<g>
<title>vfs_write (88 samples, 0.92%)</title><rect x="50.7" y="611.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="53.7" y="622.0"></text>
</g>
<g>
<title>new_sync_write (81 samples, 0.85%)</title><rect x="51.1" y="595.0" width="10.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="54.1" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (81 samples, 0.85%)</title><rect x="51.1" y="579.0" width="10.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="54.1" y="590.0"></text>
</g>
<g>
<title>ext4_buffered_write_iter (81 samples, 0.85%)</title><rect x="51.1" y="563.0" width="10.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="54.1" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (75 samples, 0.79%)</title><rect x="51.8" y="547.0" width="9.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.8" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (20 samples, 0.21%)</title><rect x="51.8" y="531.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="54.8" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (7 samples, 0.07%)</title><rect x="52.2" y="515.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="55.2" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (7 samples, 0.07%)</title><rect x="52.2" y="499.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="55.2" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.04%)</title><rect x="52.2" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="55.2" y="494.0"></text>
</g>
<g>
<title>start_this_handle (3 samples, 0.03%)</title><rect x="52.7" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.7" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (10 samples, 0.10%)</title><rect x="53.0" y="515.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="56.0" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.10%)</title><rect x="53.0" y="499.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="56.0" y="510.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.06%)</title><rect x="53.4" y="483.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="56.4" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (52 samples, 0.55%)</title><rect x="54.3" y="531.0" width="6.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.3" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.05%)</title><rect x="54.4" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="57.4" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.05%)</title><rect x="54.4" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.4" y="510.0"></text>
</g>
<g>
<title>generic_write_end (46 samples, 0.48%)</title><rect x="55.0" y="515.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.0" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (44 samples, 0.46%)</title><rect x="55.2" y="499.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.2" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (43 samples, 0.45%)</title><rect x="55.3" y="483.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.3" y="494.0"></text>
</g>
<g>
<title>__ext4_mark_inode_dirty (42 samples, 0.44%)</title><rect x="55.4" y="467.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.4" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (29 samples, 0.30%)</title><rect x="55.5" y="451.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="58.5" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (26 samples, 0.27%)</title><rect x="55.8" y="435.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="58.8" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (21 samples, 0.22%)</title><rect x="56.1" y="419.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="59.1" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (18 samples, 0.19%)</title><rect x="56.5" y="403.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.5" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (11 samples, 0.12%)</title><rect x="56.9" y="387.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.9" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (4 samples, 0.04%)</title><rect x="58.2" y="387.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="61.2" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.04%)</title><rect x="58.2" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="61.2" y="382.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (11 samples, 0.12%)</title><rect x="59.1" y="451.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.1" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (4 samples, 0.04%)</title><rect x="59.1" y="435.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="62.1" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (4 samples, 0.04%)</title><rect x="59.1" y="419.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="62.1" y="430.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.0 (3 samples, 0.03%)</title><rect x="59.2" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="62.2" y="414.0"></text>
</g>
<g>
<title>ext4_get_inode_loc (7 samples, 0.07%)</title><rect x="59.6" y="435.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.6" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (7 samples, 0.07%)</title><rect x="59.6" y="419.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="62.6" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.04%)</title><rect x="61.1" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="64.1" y="606.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="61.2" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.2" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.03%)</title><rect x="61.2" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.2" y="574.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.03%)</title><rect x="61.2" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="64.2" y="558.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (12 samples, 0.13%)</title><rect x="61.7" y="643.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.7" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.05%)</title><rect x="63.2" y="691.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="66.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.05%)</title><rect x="63.9" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.03%)</title><rect x="64.2" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.position (27 samples, 0.28%)</title><rect x="64.7" y="787.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.03%)</title><rect x="64.7" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.7" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="64.7" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.seek (23 samples, 0.24%)</title><rect x="65.0" y="771.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.seek0 (23 samples, 0.24%)</title><rect x="65.0" y="755.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.0" y="766.0"></text>
</g>
<g>
<title>__libc_lseek (23 samples, 0.24%)</title><rect x="65.0" y="739.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="68.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="67.3" y="723.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="70.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="67.3" y="707.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="70.3" y="718.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (3 samples, 0.03%)</title><rect x="67.5" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.5" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,818 samples, 92.44%)</title><rect x="68.0" y="947.0" width="1090.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.0" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (24 samples, 0.25%)</title><rect x="71.6" y="931.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (23 samples, 0.24%)</title><rect x="71.7" y="915.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (3 samples, 0.03%)</title><rect x="74.6" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,191 samples, 12.49%)</title><rect x="74.9" y="931.0" width="147.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.9" y="942.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (24 samples, 0.25%)</title><rect x="77.9" y="915.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (14 samples, 0.15%)</title><rect x="78.2" y="899.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (8 samples, 0.08%)</title><rect x="79.9" y="899.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1,143 samples, 11.98%)</title><rect x="80.9" y="915.0" width="141.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.9" y="926.0">one/nio/net/Native..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (22 samples, 0.23%)</title><rect x="86.8" y="899.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="89.8" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (22 samples, 0.23%)</title><rect x="89.5" y="899.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="92.5" y="910.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (23 samples, 0.24%)</title><rect x="92.3" y="899.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="95.3" y="910.0"></text>
</g>
<g>
<title>clock_gettime (60 samples, 0.63%)</title><rect x="95.1" y="899.0" width="7.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="98.1" y="910.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (17 samples, 0.18%)</title><rect x="100.4" y="883.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="103.4" y="894.0"></text>
</g>
<g>
<title>clock_gettime@plt (3 samples, 0.03%)</title><rect x="102.5" y="899.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="105.5" y="910.0"></text>
</g>
<g>
<title>epoll_wait (965 samples, 10.12%)</title><rect x="102.9" y="899.0" width="119.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="105.9" y="910.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (755 samples, 7.91%)</title><rect x="128.9" y="883.0" width="93.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="131.9" y="894.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.05%)</title><rect x="128.9" y="867.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (747 samples, 7.83%)</title><rect x="129.5" y="867.0" width="92.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.5" y="878.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (700 samples, 7.34%)</title><rect x="130.2" y="851.0" width="86.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="133.2" y="862.0">__x64_sys_..</text>
</g>
<g>
<title>do_epoll_wait (695 samples, 7.29%)</title><rect x="130.6" y="835.0" width="86.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="133.6" y="846.0">do_epoll_w..</text>
</g>
<g>
<title>__fdget (20 samples, 0.21%)</title><rect x="131.7" y="819.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="134.7" y="830.0"></text>
</g>
<g>
<title>__fget_light (20 samples, 0.21%)</title><rect x="131.7" y="803.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.7" y="814.0"></text>
</g>
<g>
<title>__fget_files (20 samples, 0.21%)</title><rect x="131.7" y="787.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="134.7" y="798.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.05%)</title><rect x="134.2" y="819.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="137.2" y="830.0"></text>
</g>
<g>
<title>__put_user_nocheck_4 (29 samples, 0.30%)</title><rect x="134.8" y="819.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.8" y="830.0"></text>
</g>
<g>
<title>ep_poll (592 samples, 6.21%)</title><rect x="138.9" y="819.0" width="73.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="141.9" y="830.0">ep_poll</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.05%)</title><rect x="149.0" y="803.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="152.0" y="814.0"></text>
</g>
<g>
<title>_raw_write_lock_irq (6 samples, 0.06%)</title><rect x="149.7" y="803.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.7" y="814.0"></text>
</g>
<g>
<title>ep_done_scan (27 samples, 0.28%)</title><rect x="150.4" y="803.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="153.4" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (105 samples, 1.10%)</title><rect x="153.7" y="803.0" width="13.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="156.7" y="814.0"></text>
</g>
<g>
<title>sock_poll (72 samples, 0.75%)</title><rect x="157.2" y="787.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="160.2" y="798.0"></text>
</g>
<g>
<title>tcp_poll (34 samples, 0.36%)</title><rect x="161.8" y="771.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.8" y="782.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.04%)</title><rect x="165.5" y="755.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.5" y="766.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.05%)</title><rect x="166.1" y="787.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="169.1" y="798.0"></text>
</g>
<g>
<title>ep_start_scan (16 samples, 0.17%)</title><rect x="166.7" y="803.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="169.7" y="814.0"></text>
</g>
<g>
<title>mutex_lock (55 samples, 0.58%)</title><rect x="168.7" y="803.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="171.7" y="814.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.05%)</title><rect x="174.9" y="787.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="177.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (270 samples, 2.83%)</title><rect x="175.5" y="803.0" width="33.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="178.5" y="814.0">sc..</text>
</g>
<g>
<title>schedule (5 samples, 0.05%)</title><rect x="175.9" y="787.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="178.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (262 samples, 2.75%)</title><rect x="176.5" y="787.0" width="32.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.5" y="798.0">sc..</text>
</g>
<g>
<title>schedule (234 samples, 2.45%)</title><rect x="180.0" y="771.0" width="28.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="183.0" y="782.0">sc..</text>
</g>
<g>
<title>__sched_text_start (214 samples, 2.24%)</title><rect x="182.4" y="755.0" width="26.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="185.4" y="766.0">_..</text>
</g>
<g>
<title>finish_task_switch (197 samples, 2.07%)</title><rect x="184.5" y="739.0" width="24.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="187.5" y="750.0">f..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.12%)</title><rect x="208.9" y="803.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="211.9" y="814.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.16%)</title><rect x="210.3" y="803.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="213.3" y="814.0"></text>
</g>
<g>
<title>fput_many (14 samples, 0.15%)</title><rect x="212.4" y="819.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="215.4" y="830.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.05%)</title><rect x="214.1" y="819.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.1" y="830.0"></text>
</g>
<g>
<title>mutex_unlock (9 samples, 0.09%)</title><rect x="214.7" y="819.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="217.7" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.06%)</title><rect x="215.8" y="819.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="218.8" y="830.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (39 samples, 0.41%)</title><rect x="217.1" y="851.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="220.1" y="862.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (3 samples, 0.03%)</title><rect x="221.9" y="867.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="224.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7,571 samples, 79.37%)</title><rect x="222.3" y="931.0" width="936.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.3" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7,547 samples, 79.12%)</title><rect x="224.9" y="915.0" width="933.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.9" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,875 samples, 61.59%)</title><rect x="226.5" y="899.0" width="726.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.5" y="910.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,296 samples, 55.52%)</title><rect x="230.3" y="883.0" width="655.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="233.3" y="894.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,296 samples, 55.52%)</title><rect x="230.3" y="867.0" width="655.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.3" y="878.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,176 samples, 54.26%)</title><rect x="230.3" y="851.0" width="640.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.3" y="862.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4,386 samples, 45.98%)</title><rect x="234.9" y="835.0" width="542.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.9" y="846.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (32 samples, 0.34%)</title><rect x="234.9" y="819.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.9" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (23 samples, 0.24%)</title><rect x="236.0" y="803.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="239.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,278 samples, 44.85%)</title><rect x="238.8" y="819.0" width="529.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.8" y="830.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (123 samples, 1.29%)</title><rect x="239.0" y="803.0" width="15.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (105 samples, 1.10%)</title><rect x="241.2" y="787.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (64 samples, 0.67%)</title><rect x="241.2" y="771.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.2" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.13%)</title><rect x="247.6" y="755.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="250.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (41 samples, 0.43%)</title><rect x="249.1" y="771.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (41 samples, 0.43%)</title><rect x="249.1" y="755.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (41 samples, 0.43%)</title><rect x="249.1" y="739.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4,154 samples, 43.55%)</title><rect x="254.2" y="803.0" width="513.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.2" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (4,154 samples, 43.55%)</title><rect x="254.2" y="787.0" width="513.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.2" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.12%)</title><rect x="255.9" y="771.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9 samples, 0.09%)</title><rect x="257.3" y="771.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4,120 samples, 43.19%)</title><rect x="258.4" y="771.0" width="509.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.4" y="782.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4,118 samples, 43.17%)</title><rect x="258.6" y="755.0" width="509.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.6" y="766.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (49 samples, 0.51%)</title><rect x="261.7" y="739.0" width="6.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="264.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.06%)</title><rect x="263.8" y="723.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="266.8" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.04%)</title><rect x="264.8" y="723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="267.8" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.03%)</title><rect x="265.3" y="723.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="268.3" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (16 samples, 0.17%)</title><rect x="265.7" y="723.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="268.7" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.03%)</title><rect x="266.2" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="269.2" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.04%)</title><rect x="266.6" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="269.6" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.05%)</title><rect x="267.1" y="707.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="270.1" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (12 samples, 0.13%)</title><rect x="267.8" y="739.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="270.8" y="750.0"></text>
</g>
<g>
<title>__send (4,018 samples, 42.12%)</title><rect x="269.5" y="739.0" width="497.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="272.5" y="750.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3,862 samples, 40.49%)</title><rect x="288.8" y="723.0" width="477.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="291.8" y="734.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (6 samples, 0.06%)</title><rect x="288.8" y="707.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="291.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3,855 samples, 40.41%)</title><rect x="289.6" y="707.0" width="476.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="292.6" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (8 samples, 0.08%)</title><rect x="290.1" y="691.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="293.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_sendto (3,796 samples, 39.79%)</title><rect x="291.1" y="691.0" width="469.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="294.1" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (3,781 samples, 39.64%)</title><rect x="291.3" y="675.0" width="467.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="294.3" y="686.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="292.4" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="295.4" y="670.0"></text>
</g>
<g>
<title>fput_many (8 samples, 0.08%)</title><rect x="292.9" y="659.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="295.9" y="670.0"></text>
</g>
<g>
<title>inet6_sendmsg (4 samples, 0.04%)</title><rect x="293.9" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="296.9" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (3,729 samples, 39.09%)</title><rect x="294.6" y="659.0" width="461.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.6" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (12 samples, 0.13%)</title><rect x="296.0" y="643.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="299.0" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (3,624 samples, 37.99%)</title><rect x="297.5" y="643.0" width="448.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="300.5" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (12 samples, 0.13%)</title><rect x="299.1" y="627.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="302.1" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (3,599 samples, 37.73%)</title><rect x="300.6" y="627.0" width="445.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="303.6" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.03%)</title><rect x="301.4" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="304.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (12 samples, 0.13%)</title><rect x="302.2" y="611.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.2" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.04%)</title><rect x="303.8" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="306.8" y="622.0"></text>
</g>
<g>
<title>release_sock (11 samples, 0.12%)</title><rect x="304.3" y="611.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="307.3" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.04%)</title><rect x="305.2" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="308.2" y="606.0"></text>
</g>
<g>
<title>sock_zerocopy_put (6 samples, 0.06%)</title><rect x="306.4" y="611.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="309.4" y="622.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 0.06%)</title><rect x="307.1" y="611.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="310.1" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.03%)</title><rect x="308.0" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.0" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3,526 samples, 36.96%)</title><rect x="308.6" y="611.0" width="436.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="311.6" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (10 samples, 0.10%)</title><rect x="317.9" y="595.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.06%)</title><rect x="318.4" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.4" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="319.1" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="322.1" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (14 samples, 0.15%)</title><rect x="319.8" y="595.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="322.8" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.09%)</title><rect x="320.0" y="579.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="323.0" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.03%)</title><rect x="321.1" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="324.1" y="590.0"></text>
</g>
<g>
<title>copyin (10 samples, 0.10%)</title><rect x="321.7" y="595.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="324.7" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (17 samples, 0.18%)</title><rect x="323.5" y="595.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="326.5" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (17 samples, 0.18%)</title><rect x="323.5" y="579.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.5" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (196 samples, 2.05%)</title><rect x="325.6" y="595.0" width="24.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="328.6" y="606.0">s..</text>
</g>
<g>
<title>__alloc_skb (180 samples, 1.89%)</title><rect x="327.2" y="579.0" width="22.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="330.2" y="590.0">_..</text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.06%)</title><rect x="329.0" y="563.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (65 samples, 0.68%)</title><rect x="329.8" y="563.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (40 samples, 0.42%)</title><rect x="330.3" y="547.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="333.3" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.04%)</title><rect x="333.7" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.7" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (8 samples, 0.08%)</title><rect x="334.2" y="531.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="337.2" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (7 samples, 0.07%)</title><rect x="335.3" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="338.3" y="558.0"></text>
</g>
<g>
<title>memset_erms (12 samples, 0.13%)</title><rect x="336.2" y="547.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.2" y="558.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.06%)</title><rect x="337.8" y="563.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="340.8" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (47 samples, 0.49%)</title><rect x="338.8" y="563.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="341.8" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.03%)</title><rect x="344.2" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="347.2" y="558.0"></text>
</g>
<g>
<title>ksize (35 samples, 0.37%)</title><rect x="344.6" y="563.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="347.6" y="574.0"></text>
</g>
<g>
<title>__ksize (35 samples, 0.37%)</title><rect x="344.6" y="547.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.6" y="558.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.04%)</title><rect x="348.9" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="351.9" y="574.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.03%)</title><rect x="349.4" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="352.4" y="590.0"></text>
</g>
<g>
<title>skb_entail (11 samples, 0.12%)</title><rect x="349.8" y="595.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="352.8" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.04%)</title><rect x="351.2" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="354.2" y="606.0"></text>
</g>
<g>
<title>tcp_chrono_start (3 samples, 0.03%)</title><rect x="351.7" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.7" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.04%)</title><rect x="352.0" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.0" y="606.0"></text>
</g>
<g>
<title>tcp_push (3,098 samples, 32.48%)</title><rect x="352.5" y="595.0" width="383.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="355.5" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (3,096 samples, 32.46%)</title><rect x="352.5" y="579.0" width="383.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="355.5" y="590.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.06%)</title><rect x="353.3" y="563.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="356.3" y="574.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="354.0" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="357.0" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_stop (4 samples, 0.04%)</title><rect x="354.4" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="357.4" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.07%)</title><rect x="354.9" y="563.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="357.9" y="574.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (3 samples, 0.03%)</title><rect x="355.9" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="358.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (3,066 samples, 32.14%)</title><rect x="356.2" y="563.0" width="379.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.2" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (2,861 samples, 29.99%)</title><rect x="363.9" y="547.0" width="353.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="366.9" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.04%)</title><rect x="376.0" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="379.0" y="542.0"></text>
</g>
<g>
<title>__skb_clone (8 samples, 0.08%)</title><rect x="376.5" y="531.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="379.5" y="542.0"></text>
</g>
<g>
<title>__tcp_select_window (6 samples, 0.06%)</title><rect x="377.5" y="531.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.5" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.03%)</title><rect x="378.3" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="381.3" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (2,705 samples, 28.36%)</title><rect x="379.0" y="531.0" width="334.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.0" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (2,694 samples, 28.24%)</title><rect x="379.4" y="515.0" width="333.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="382.4" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="383.1" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="386.1" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (14 samples, 0.15%)</title><rect x="383.5" y="499.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="386.5" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (11 samples, 0.12%)</title><rect x="383.8" y="483.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.8" y="494.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (4 samples, 0.04%)</title><rect x="385.2" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.2" y="510.0"></text>
</g>
<g>
<title>ip_local_out (2,630 samples, 27.57%)</title><rect x="385.7" y="499.0" width="325.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="388.7" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (515 samples, 5.40%)</title><rect x="386.4" y="483.0" width="63.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="389.4" y="494.0">__ip_lo..</text>
</g>
<g>
<title>__x86_retpoline_rax (3 samples, 0.03%)</title><rect x="386.8" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="389.8" y="478.0"></text>
</g>
<g>
<title>ip_send_check (5 samples, 0.05%)</title><rect x="387.2" y="467.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="390.2" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (14 samples, 0.15%)</title><rect x="387.8" y="467.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.8" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (24 samples, 0.25%)</title><rect x="389.5" y="467.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="392.5" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (23 samples, 0.24%)</title><rect x="392.5" y="467.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="395.5" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (433 samples, 4.54%)</title><rect x="395.3" y="467.0" width="53.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.3" y="478.0">nf_ho..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (12 samples, 0.13%)</title><rect x="396.7" y="451.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.7" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (65 samples, 0.68%)</title><rect x="398.2" y="451.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.2" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (65 samples, 0.68%)</title><rect x="398.2" y="435.0" width="8.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="401.2" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (8 samples, 0.08%)</title><rect x="406.2" y="451.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.2" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (284 samples, 2.98%)</title><rect x="407.2" y="451.0" width="35.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="410.2" y="462.0">ipv..</text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.04%)</title><rect x="407.8" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.8" y="446.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (8 samples, 0.08%)</title><rect x="408.3" y="435.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.3" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (3 samples, 0.03%)</title><rect x="409.3" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="412.3" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (254 samples, 2.66%)</title><rect x="409.7" y="435.0" width="31.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="412.7" y="446.0">nf..</text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (54 samples, 0.57%)</title><rect x="413.9" y="419.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="416.9" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (11 samples, 0.12%)</title><rect x="420.6" y="419.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.04%)</title><rect x="421.9" y="419.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="424.9" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (7 samples, 0.07%)</title><rect x="422.7" y="419.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="425.7" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (16 samples, 0.17%)</title><rect x="423.5" y="419.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="426.5" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (99 samples, 1.04%)</title><rect x="425.5" y="419.0" width="12.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="428.5" y="430.0"></text>
</g>
<g>
<title>nf_ct_acct_add?[nf_conntrack] (3 samples, 0.03%)</title><rect x="431.3" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="434.3" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (9 samples, 0.09%)</title><rect x="431.7" y="403.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="434.7" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (40 samples, 0.42%)</title><rect x="432.8" y="403.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="435.8" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (12 samples, 0.13%)</title><rect x="436.3" y="387.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="439.3" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (25 samples, 0.26%)</title><rect x="437.8" y="419.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (6 samples, 0.06%)</title><rect x="441.1" y="435.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="444.1" y="446.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.04%)</title><rect x="441.8" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="444.8" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (13 samples, 0.14%)</title><rect x="442.3" y="451.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="445.3" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="443.9" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="446.9" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (37 samples, 0.39%)</title><rect x="444.3" y="451.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.3" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (12 samples, 0.13%)</title><rect x="444.8" y="435.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (21 samples, 0.22%)</title><rect x="446.3" y="435.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="449.3" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (8 samples, 0.08%)</title><rect x="446.4" y="419.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (12 samples, 0.13%)</title><rect x="447.4" y="419.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="450.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (10 samples, 0.10%)</title><rect x="448.9" y="467.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="451.9" y="478.0"></text>
</g>
<g>
<title>ip_output (2,088 samples, 21.89%)</title><rect x="450.4" y="483.0" width="258.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.4" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.03%)</title><rect x="452.0" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="455.0" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.03%)</title><rect x="452.4" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="455.4" y="478.0"></text>
</g>
<g>
<title>apparmor_ipv4_postroute (6 samples, 0.06%)</title><rect x="452.9" y="467.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.9" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (1,998 samples, 20.95%)</title><rect x="453.6" y="467.0" width="247.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.6" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (28 samples, 0.29%)</title><rect x="455.0" y="451.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="458.0" y="462.0"></text>
</g>
<g>
<title>migrate_enable (5 samples, 0.05%)</title><rect x="457.8" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="460.8" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (1,947 samples, 20.41%)</title><rect x="458.4" y="451.0" width="240.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="461.4" y="462.0">__ip_finish_output</text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="460.8" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,920 samples, 20.13%)</title><rect x="461.3" y="435.0" width="237.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.3" y="446.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (1,628 samples, 17.07%)</title><rect x="470.2" y="419.0" width="201.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="473.2" y="430.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq (1,622 samples, 17.00%)</title><rect x="470.9" y="403.0" width="200.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="473.9" y="414.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (1,593 samples, 16.70%)</title><rect x="474.5" y="387.0" width="197.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.5" y="398.0">do_softirq_own_stack</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1,593 samples, 16.70%)</title><rect x="474.5" y="371.0" width="197.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="477.5" y="382.0">asm_call_sysvec_on_stack</text>
</g>
<g>
<title>__softirqentry_text_start (1,587 samples, 16.64%)</title><rect x="474.5" y="355.0" width="196.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="477.5" y="366.0">__softirqentry_text_start</text>
</g>
<g>
<title>__kfree_skb_flush (5 samples, 0.05%)</title><rect x="481.6" y="339.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="484.6" y="350.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (4 samples, 0.04%)</title><rect x="482.3" y="339.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1,512 samples, 15.85%)</title><rect x="482.8" y="339.0" width="187.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.8" y="350.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (7 samples, 0.07%)</title><rect x="486.9" y="323.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="489.9" y="334.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (4 samples, 0.04%)</title><rect x="488.0" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="491.0" y="334.0"></text>
</g>
<g>
<title>process_backlog (1,463 samples, 15.34%)</title><rect x="488.5" y="323.0" width="181.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.5" y="334.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (1,441 samples, 15.11%)</title><rect x="490.8" y="307.0" width="178.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="493.8" y="318.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1,433 samples, 15.02%)</title><rect x="491.6" y="291.0" width="177.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.6" y="302.0">__netif_receive_skb_one..</text>
</g>
<g>
<title>__netif_receive_skb_core (34 samples, 0.36%)</title><rect x="492.7" y="275.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1,377 samples, 14.44%)</title><rect x="496.9" y="275.0" width="170.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="499.9" y="286.0">ip_rcv</text>
</g>
<g>
<title>__x86_retpoline_rax (3 samples, 0.03%)</title><rect x="498.3" y="259.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="501.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 0.06%)</title><rect x="498.6" y="259.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="501.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (12 samples, 0.13%)</title><rect x="499.4" y="259.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="502.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (1,289 samples, 13.51%)</title><rect x="500.9" y="259.0" width="159.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="503.9" y="270.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (1,262 samples, 13.23%)</title><rect x="501.7" y="243.0" width="156.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.7" y="254.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (1,179 samples, 12.36%)</title><rect x="503.7" y="227.0" width="145.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="506.7" y="238.0">ip_local_deliver_f..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1,172 samples, 12.29%)</title><rect x="503.9" y="211.0" width="145.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="506.9" y="222.0">ip_protocol_delive..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.04%)</title><rect x="505.9" y="195.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="508.9" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (10 samples, 0.10%)</title><rect x="506.7" y="195.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="509.7" y="206.0"></text>
</g>
<g>
<title>sock_put (4 samples, 0.04%)</title><rect x="508.2" y="195.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="511.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (7 samples, 0.07%)</title><rect x="508.6" y="195.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="511.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1,127 samples, 11.81%)</title><rect x="509.5" y="195.0" width="139.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="512.5" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.04%)</title><rect x="515.1" y="179.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.1" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (61 samples, 0.64%)</title><rect x="515.6" y="179.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.6" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.04%)</title><rect x="522.6" y="163.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="525.6" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.04%)</title><rect x="523.6" y="179.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.6" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (29 samples, 0.30%)</title><rect x="524.1" y="179.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="527.1" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (11 samples, 0.12%)</title><rect x="524.4" y="163.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="527.4" y="174.0"></text>
</g>
<g>
<title>migrate_enable (3 samples, 0.03%)</title><rect x="525.3" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="528.3" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (7 samples, 0.07%)</title><rect x="525.7" y="163.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="528.7" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.07%)</title><rect x="526.8" y="163.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="529.8" y="174.0"></text>
</g>
<g>
<title>sock_put (5 samples, 0.05%)</title><rect x="527.7" y="179.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.05%)</title><rect x="528.4" y="179.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (963 samples, 10.10%)</title><rect x="529.1" y="179.0" width="119.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="532.1" y="190.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_ack (6 samples, 0.06%)</title><rect x="529.8" y="163.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="532.8" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (26 samples, 0.27%)</title><rect x="530.5" y="163.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="533.5" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (8 samples, 0.08%)</title><rect x="533.8" y="163.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.8" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.05%)</title><rect x="534.7" y="163.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="537.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (912 samples, 9.56%)</title><rect x="535.4" y="163.0" width="112.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="538.4" y="174.0">tcp_rcv_establ..</text>
</g>
<g>
<title>__tcp_ack_snd_check (58 samples, 0.61%)</title><rect x="540.3" y="147.0" width="7.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="543.3" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.04%)</title><rect x="540.8" y="131.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="543.8" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (50 samples, 0.52%)</title><rect x="541.3" y="131.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="544.3" y="142.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="542.2" y="115.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="545.2" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (40 samples, 0.42%)</title><rect x="542.5" y="115.0" width="5.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="545.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (36 samples, 0.38%)</title><rect x="543.0" y="99.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="546.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (28 samples, 0.29%)</title><rect x="543.5" y="83.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="546.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (4 samples, 0.04%)</title><rect x="547.0" y="83.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="550.0" y="94.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (6 samples, 0.06%)</title><rect x="547.5" y="147.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="550.5" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.07%)</title><rect x="548.2" y="147.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="551.2" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.03%)</title><rect x="549.2" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="552.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.03%)</title><rect x="549.6" y="147.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="552.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack (339 samples, 3.55%)</title><rect x="550.0" y="147.0" width="41.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="553.0" y="158.0">tcp..</text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.06%)</title><rect x="556.3" y="131.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="559.3" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.07%)</title><rect x="557.0" y="131.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.0" y="142.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.03%)</title><rect x="557.9" y="131.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="560.9" y="142.0"></text>
</g>
<g>
<title>rb_first (6 samples, 0.06%)</title><rect x="558.3" y="131.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="561.3" y="142.0"></text>
</g>
<g>
<title>rb_next (8 samples, 0.08%)</title><rect x="559.0" y="131.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="562.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack_tstamp (6 samples, 0.06%)</title><rect x="560.0" y="131.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.05%)</title><rect x="560.7" y="131.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.7" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (216 samples, 2.26%)</title><rect x="561.5" y="131.0" width="26.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.5" y="142.0">t..</text>
</g>
<g>
<title>__kfree_skb (127 samples, 1.33%)</title><rect x="567.9" y="115.0" width="15.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="570.9" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (37 samples, 0.39%)</title><rect x="568.0" y="99.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (32 samples, 0.34%)</title><rect x="568.6" y="83.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.6" y="94.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.07%)</title><rect x="571.7" y="67.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="574.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (84 samples, 0.88%)</title><rect x="572.7" y="99.0" width="10.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (81 samples, 0.85%)</title><rect x="572.8" y="83.0" width="10.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (43 samples, 0.45%)</title><rect x="577.5" y="67.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="580.5" y="78.0"></text>
</g>
<g>
<title>kfree (42 samples, 0.44%)</title><rect x="577.7" y="51.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="580.7" y="62.0"></text>
</g>
<g>
<title>__slab_free (10 samples, 0.10%)</title><rect x="581.6" y="35.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="584.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.04%)</title><rect x="583.1" y="99.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="586.1" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (7 samples, 0.07%)</title><rect x="583.9" y="115.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.9" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (17 samples, 0.18%)</title><rect x="585.1" y="115.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.1" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (5 samples, 0.05%)</title><rect x="587.6" y="115.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.6" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (5 samples, 0.05%)</title><rect x="588.2" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="591.2" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (8 samples, 0.08%)</title><rect x="589.2" y="131.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="592.2" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.03%)</title><rect x="590.2" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="593.2" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="590.8" y="131.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="593.8" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (6 samples, 0.06%)</title><rect x="591.2" y="131.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="594.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (379 samples, 3.97%)</title><rect x="592.0" y="147.0" width="46.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.0" y="158.0">tcp_..</text>
</g>
<g>
<title>rcu_read_unlock_strict (3 samples, 0.03%)</title><rect x="592.1" y="131.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.1" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (375 samples, 3.93%)</title><rect x="592.5" y="131.0" width="46.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="595.5" y="142.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (364 samples, 3.82%)</title><rect x="593.9" y="115.0" width="45.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="596.9" y="126.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (363 samples, 3.81%)</title><rect x="593.9" y="99.0" width="44.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="596.9" y="110.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (360 samples, 3.77%)</title><rect x="594.2" y="83.0" width="44.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="597.2" y="94.0">__lo..</text>
</g>
<g>
<title>tcp_event_data_recv (11 samples, 0.12%)</title><rect x="638.9" y="147.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="641.9" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (13 samples, 0.14%)</title><rect x="640.3" y="147.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="643.3" y="158.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.04%)</title><rect x="640.5" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="643.5" y="142.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.07%)</title><rect x="641.0" y="131.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="644.0" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (23 samples, 0.24%)</title><rect x="642.1" y="147.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="645.1" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (10 samples, 0.10%)</title><rect x="645.3" y="147.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="648.3" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.07%)</title><rect x="646.6" y="147.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="649.6" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.03%)</title><rect x="647.4" y="147.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="650.4" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.03%)</title><rect x="647.8" y="147.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="650.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (4 samples, 0.04%)</title><rect x="648.2" y="179.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="651.2" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.05%)</title><rect x="648.9" y="211.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="651.9" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.05%)</title><rect x="649.8" y="227.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="652.8" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (6 samples, 0.06%)</title><rect x="650.4" y="227.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="653.4" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (44 samples, 0.46%)</title><rect x="651.2" y="227.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.2" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (22 samples, 0.23%)</title><rect x="652.1" y="211.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="655.1" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (21 samples, 0.22%)</title><rect x="652.3" y="195.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="655.3" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (7 samples, 0.07%)</title><rect x="654.9" y="211.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="657.9" y="222.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (6 samples, 0.06%)</title><rect x="655.0" y="195.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="658.0" y="206.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (4 samples, 0.04%)</title><rect x="655.2" y="179.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="658.2" y="190.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (6 samples, 0.06%)</title><rect x="655.9" y="211.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.9" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="656.2" y="195.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="659.2" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (5 samples, 0.05%)</title><rect x="656.6" y="227.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="659.6" y="238.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (5 samples, 0.05%)</title><rect x="657.2" y="227.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="660.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 0.06%)</title><rect x="657.8" y="243.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="660.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (8 samples, 0.08%)</title><rect x="658.6" y="243.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="661.6" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.05%)</title><rect x="659.6" y="243.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="662.6" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (10 samples, 0.10%)</title><rect x="660.4" y="259.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="663.4" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (6 samples, 0.06%)</title><rect x="661.7" y="259.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="664.7" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (6 samples, 0.06%)</title><rect x="662.4" y="259.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="665.4" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (25 samples, 0.26%)</title><rect x="663.2" y="259.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="666.2" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.03%)</title><rect x="664.5" y="243.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="667.5" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_pre_routing?[nf_nat] (9 samples, 0.09%)</title><rect x="665.1" y="243.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="668.1" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="665.9" y="227.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="668.9" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_pre_routing?[nf_nat] (8 samples, 0.08%)</title><rect x="666.2" y="259.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="669.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.07%)</title><rect x="667.2" y="275.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="670.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.03%)</title><rect x="668.1" y="275.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.03%)</title><rect x="669.1" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.1" y="318.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (3 samples, 0.03%)</title><rect x="669.5" y="323.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="672.5" y="334.0"></text>
</g>
<g>
<title>process_backlog (8 samples, 0.08%)</title><rect x="669.8" y="339.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.05%)</title><rect x="670.9" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.9" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (219 samples, 2.30%)</title><rect x="671.6" y="419.0" width="27.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="674.6" y="430.0">d..</text>
</g>
<g>
<title>__dev_queue_xmit (212 samples, 2.22%)</title><rect x="671.6" y="403.0" width="26.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="674.6" y="414.0">_..</text>
</g>
<g>
<title>dev_hard_start_xmit (110 samples, 1.15%)</title><rect x="675.9" y="387.0" width="13.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="678.9" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.04%)</title><rect x="678.1" y="371.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="681.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (74 samples, 0.78%)</title><rect x="678.6" y="371.0" width="9.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.6" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (15 samples, 0.16%)</title><rect x="680.2" y="355.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="683.2" y="366.0"></text>
</g>
<g>
<title>netif_rx (31 samples, 0.32%)</title><rect x="682.1" y="355.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.1" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (27 samples, 0.28%)</title><rect x="682.6" y="339.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="685.6" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (26 samples, 0.27%)</title><rect x="682.7" y="323.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="685.7" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (5 samples, 0.05%)</title><rect x="686.3" y="355.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="689.3" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (7 samples, 0.07%)</title><rect x="686.9" y="355.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.9" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (6 samples, 0.06%)</title><rect x="687.8" y="371.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="690.8" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (8 samples, 0.08%)</title><rect x="688.5" y="371.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="691.5" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.10%)</title><rect x="689.5" y="387.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="692.5" y="398.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (8 samples, 0.08%)</title><rect x="690.7" y="387.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="693.7" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.03%)</title><rect x="691.7" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="694.7" y="398.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (3 samples, 0.03%)</title><rect x="692.1" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="695.1" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (35 samples, 0.37%)</title><rect x="692.5" y="387.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="695.5" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (12 samples, 0.13%)</title><rect x="694.8" y="371.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="697.8" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (3 samples, 0.03%)</title><rect x="695.9" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="698.9" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (3 samples, 0.03%)</title><rect x="696.4" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="699.4" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (8 samples, 0.08%)</title><rect x="696.8" y="387.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="699.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.05%)</title><rect x="698.0" y="403.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="701.0" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.04%)</title><rect x="698.8" y="435.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.8" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.04%)</title><rect x="699.6" y="451.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="702.6" y="462.0"></text>
</g>
<g>
<title>migrate_disable (4 samples, 0.04%)</title><rect x="700.1" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="703.1" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (8 samples, 0.08%)</title><rect x="700.8" y="467.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="703.8" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (52 samples, 0.55%)</title><rect x="701.7" y="467.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="704.7" y="478.0"></text>
</g>
<g>
<title>apparmor_ip_postroute.isra.0 (3 samples, 0.03%)</title><rect x="702.7" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="705.7" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (25 samples, 0.26%)</title><rect x="703.1" y="451.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="706.1" y="462.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (14 samples, 0.15%)</title><rect x="703.4" y="435.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.4" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (8 samples, 0.08%)</title><rect x="704.1" y="419.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="707.1" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (9 samples, 0.09%)</title><rect x="705.1" y="435.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.1" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (14 samples, 0.15%)</title><rect x="706.4" y="451.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="709.4" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (5 samples, 0.05%)</title><rect x="707.6" y="435.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.04%)</title><rect x="707.7" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="710.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (4 samples, 0.04%)</title><rect x="708.2" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="711.2" y="478.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.04%)</title><rect x="708.7" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="711.7" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.16%)</title><rect x="709.2" y="483.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="712.2" y="494.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.04%)</title><rect x="711.0" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.0" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (9 samples, 0.09%)</title><rect x="711.5" y="499.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="714.5" y="510.0"></text>
</g>
<g>
<title>skb_clone (21 samples, 0.22%)</title><rect x="713.6" y="531.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.6" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.05%)</title><rect x="713.9" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="716.9" y="526.0"></text>
</g>
<g>
<title>__skb_clone (14 samples, 0.15%)</title><rect x="714.5" y="515.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="717.5" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (6 samples, 0.06%)</title><rect x="715.5" y="499.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="718.5" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (4 samples, 0.04%)</title><rect x="716.7" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="719.7" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.03%)</title><rect x="717.5" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="720.5" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.03%)</title><rect x="717.5" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="720.5" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (10 samples, 0.10%)</title><rect x="718.2" y="547.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="721.2" y="558.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.04%)</title><rect x="719.8" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="722.8" y="558.0"></text>
</g>
<g>
<title>rb_first (8 samples, 0.08%)</title><rect x="720.3" y="547.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="723.3" y="558.0"></text>
</g>
<g>
<title>read_tsc (10 samples, 0.10%)</title><rect x="721.3" y="547.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="724.3" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (58 samples, 0.61%)</title><rect x="723.3" y="547.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.3" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (10 samples, 0.10%)</title><rect x="725.1" y="531.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.1" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (32 samples, 0.34%)</title><rect x="726.5" y="531.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="729.5" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (30 samples, 0.31%)</title><rect x="726.7" y="515.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.7" y="526.0"></text>
</g>
<g>
<title>mod_timer (28 samples, 0.29%)</title><rect x="727.0" y="499.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="730.0" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.18%)</title><rect x="728.1" y="483.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="731.1" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (9 samples, 0.09%)</title><rect x="730.4" y="547.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="733.4" y="558.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (3 samples, 0.03%)</title><rect x="731.6" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="734.6" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.05%)</title><rect x="731.9" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="734.9" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (9 samples, 0.09%)</title><rect x="732.5" y="547.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.5" y="558.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (4 samples, 0.04%)</title><rect x="733.2" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="736.2" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (6 samples, 0.06%)</title><rect x="733.8" y="547.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="736.8" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (8 samples, 0.08%)</title><rect x="734.5" y="547.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.5" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.05%)</title><rect x="735.8" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="738.8" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (62 samples, 0.65%)</title><rect x="736.4" y="595.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.4" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (14 samples, 0.15%)</title><rect x="736.5" y="579.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="739.5" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (45 samples, 0.47%)</title><rect x="738.2" y="579.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="741.2" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (19 samples, 0.20%)</title><rect x="741.2" y="563.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="744.2" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.04%)</title><rect x="744.1" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="747.1" y="606.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (6 samples, 0.06%)</title><rect x="745.0" y="611.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="748.0" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (75 samples, 0.79%)</title><rect x="746.0" y="643.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="749.0" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (59 samples, 0.62%)</title><rect x="748.0" y="627.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="751.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (58 samples, 0.61%)</title><rect x="748.1" y="611.0" width="7.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="751.1" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (40 samples, 0.42%)</title><rect x="750.4" y="595.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="753.4" y="606.0"></text>
</g>
<g>
<title>aa_label_next_confined (5 samples, 0.05%)</title><rect x="752.8" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.8" y="590.0"></text>
</g>
<g>
<title>aa_profile_af_perm (15 samples, 0.16%)</title><rect x="753.5" y="579.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.5" y="590.0"></text>
</g>
<g>
<title>aa_check_perms (3 samples, 0.03%)</title><rect x="754.9" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="757.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 0.05%)</title><rect x="755.3" y="643.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="758.3" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (25 samples, 0.26%)</title><rect x="755.9" y="659.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="758.9" y="670.0"></text>
</g>
<g>
<title>__fdget (19 samples, 0.20%)</title><rect x="756.2" y="643.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="759.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.20%)</title><rect x="756.2" y="627.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="759.2" y="638.0"></text>
</g>
<g>
<title>__fget_files (19 samples, 0.20%)</title><rect x="756.2" y="611.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="759.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.04%)</title><rect x="758.5" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="761.5" y="654.0"></text>
</g>
<g>
<title>fput (4 samples, 0.04%)</title><rect x="759.0" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="762.0" y="686.0"></text>
</g>
<g>
<title>import_single_range (7 samples, 0.07%)</title><rect x="759.5" y="675.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="762.5" y="686.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (43 samples, 0.45%)</title><rect x="760.6" y="691.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.6" y="702.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (4 samples, 0.04%)</title><rect x="765.9" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="768.9" y="702.0"></text>
</g>
<g>
<title>exit_to_user_mode_prepare (3 samples, 0.03%)</title><rect x="766.1" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="769.1" y="686.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.03%)</title><rect x="766.1" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="769.1" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.03%)</title><rect x="766.1" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.1" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.03%)</title><rect x="766.1" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="769.1" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.13%)</title><rect x="766.6" y="739.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="769.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (75 samples, 0.79%)</title><rect x="768.1" y="819.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (55 samples, 0.58%)</title><rect x="770.5" y="803.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (43 samples, 0.45%)</title><rect x="772.0" y="787.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (75 samples, 0.79%)</title><rect x="777.5" y="835.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (71 samples, 0.74%)</title><rect x="777.9" y="819.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.06%)</title><rect x="779.8" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.06%)</title><rect x="779.8" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.30%)</title><rect x="780.5" y="803.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.30%)</title><rect x="780.5" y="787.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.30%)</title><rect x="780.5" y="771.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (19 samples, 0.20%)</title><rect x="781.8" y="755.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.8" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.03%)</title><rect x="784.1" y="803.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="787.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (17 samples, 0.18%)</title><rect x="784.6" y="803.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.12%)</title><rect x="785.4" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.12%)</title><rect x="785.4" y="771.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="788.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.12%)</title><rect x="785.4" y="755.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="788.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.entity (678 samples, 7.11%)</title><rect x="786.7" y="835.0" width="83.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.7" y="846.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.isBlank (6 samples, 0.06%)</title><rect x="788.3" y="819.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (6 samples, 0.06%)</title><rect x="788.3" y="803.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (6 samples, 0.06%)</title><rect x="788.3" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.3" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.isWhitespace (4 samples, 0.04%)</title><rect x="788.6" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.put (659 samples, 6.91%)</title><rect x="789.1" y="819.0" width="81.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.1" y="830.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.06%)</title><rect x="789.2" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.06%)</title><rect x="789.2" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.03%)</title><rect x="789.6" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.6" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="789.6" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.42%)</title><rect x="789.9" y="803.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.42%)</title><rect x="789.9" y="787.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.9" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (35 samples, 0.37%)</title><rect x="790.6" y="771.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.32%)</title><rect x="791.1" y="755.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.1" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (31 samples, 0.32%)</title><rect x="791.1" y="739.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (11 samples, 0.12%)</title><rect x="791.1" y="723.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.1" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (11 samples, 0.12%)</title><rect x="791.1" y="707.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="794.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (20 samples, 0.21%)</title><rect x="792.4" y="723.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.upsert (10 samples, 0.10%)</title><rect x="793.7" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (20 samples, 0.21%)</title><rect x="794.9" y="803.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (18 samples, 0.19%)</title><rect x="795.1" y="787.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (18 samples, 0.19%)</title><rect x="795.1" y="771.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (18 samples, 0.19%)</title><rect x="795.1" y="755.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.1" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="795.1" y="739.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="798.1" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="795.1" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="798.1" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="795.1" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="798.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (15 samples, 0.16%)</title><rect x="795.5" y="739.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="795.5" y="723.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="795.5" y="707.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.13%)</title><rect x="795.9" y="691.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="796.3" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="796.4" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.4" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.05%)</title><rect x="796.7" y="675.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="799.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.upsert (592 samples, 6.21%)</title><rect x="797.4" y="803.0" width="73.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.4" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.&lt;init&gt; (10 samples, 0.10%)</title><rect x="799.5" y="787.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.buildFromSorted (10 samples, 0.10%)</title><rect x="799.5" y="771.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntryIterator.next (3 samples, 0.03%)</title><rect x="799.6" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.06%)</title><rect x="800.0" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (563 samples, 5.90%)</title><rect x="800.7" y="787.0" width="69.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.7" y="798.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (552 samples, 5.79%)</title><rect x="801.7" y="771.0" width="68.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.7" y="782.0">java/ut..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (233 samples, 2.44%)</title><rect x="809.4" y="755.0" width="28.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.4" y="766.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (225 samples, 2.36%)</title><rect x="810.4" y="739.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.4" y="750.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.10%)</title><rect x="836.7" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (5 samples, 0.05%)</title><rect x="838.2" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.03%)</title><rect x="838.8" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (63 samples, 0.66%)</title><rect x="839.3" y="755.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (51 samples, 0.53%)</title><rect x="840.0" y="739.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.06%)</title><rect x="846.4" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.06%)</title><rect x="846.4" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.06%)</title><rect x="846.4" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.4" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.05%)</title><rect x="846.4" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (184 samples, 1.93%)</title><rect x="847.1" y="755.0" width="22.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.1" y="766.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (179 samples, 1.88%)</title><rect x="847.7" y="739.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.7" y="750.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (177 samples, 1.86%)</title><rect x="848.0" y="723.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.0" y="734.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.05%)</title><rect x="852.2" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.2" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (129 samples, 1.35%)</title><rect x="852.8" y="707.0" width="15.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (51 samples, 0.53%)</title><rect x="856.7" y="691.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (16 samples, 0.17%)</title><rect x="860.5" y="675.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="863.5" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkSegment (5 samples, 0.05%)</title><rect x="862.4" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="865.4" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (46 samples, 0.48%)</title><rect x="863.1" y="691.0" width="5.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="866.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.09%)</title><rect x="868.7" y="707.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.7" y="718.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="870.0" y="771.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="873.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (30 samples, 0.31%)</title><rect x="870.6" y="851.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.13%)</title><rect x="872.5" y="835.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (74 samples, 0.78%)</title><rect x="874.3" y="851.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (69 samples, 0.72%)</title><rect x="874.9" y="835.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (69 samples, 0.72%)</title><rect x="874.9" y="819.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.15%)</title><rect x="879.0" y="803.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (22 samples, 0.23%)</title><rect x="880.7" y="803.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (22 samples, 0.23%)</title><rect x="880.7" y="787.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (22 samples, 0.23%)</title><rect x="880.7" y="771.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.12%)</title><rect x="882.1" y="755.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 0.17%)</title><rect x="883.5" y="851.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.14%)</title><rect x="883.6" y="835.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.14%)</title><rect x="883.6" y="819.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (187 samples, 1.96%)</title><rect x="885.4" y="883.0" width="23.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.4" y="894.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21 samples, 0.22%)</title><rect x="885.9" y="867.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.05%)</title><rect x="887.2" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.05%)</title><rect x="887.2" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.05%)</title><rect x="887.2" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.06%)</title><rect x="887.8" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (92 samples, 0.96%)</title><rect x="888.5" y="867.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 0.93%)</title><rect x="888.9" y="851.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (70 samples, 0.73%)</title><rect x="899.9" y="867.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.06%)</title><rect x="908.6" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (76 samples, 0.80%)</title><rect x="909.3" y="883.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (66 samples, 0.69%)</title><rect x="910.6" y="867.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (21 samples, 0.22%)</title><rect x="911.8" y="851.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.8" y="862.0"></text>
</g>
<g>
<title>jbyte_arraycopy (23 samples, 0.24%)</title><rect x="914.4" y="851.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="917.4" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.13%)</title><rect x="917.2" y="851.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="920.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (69 samples, 0.72%)</title><rect x="918.7" y="883.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="921.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (33 samples, 0.35%)</title><rect x="920.6" y="867.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (33 samples, 0.35%)</title><rect x="920.6" y="851.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.trim (13 samples, 0.14%)</title><rect x="924.7" y="867.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.08%)</title><rect x="926.3" y="867.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (210 samples, 2.20%)</title><rect x="927.3" y="883.0" width="25.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.3" y="894.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (68 samples, 0.71%)</title><rect x="944.8" y="867.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1,659 samples, 17.39%)</title><rect x="953.2" y="899.0" width="205.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.2" y="910.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,651 samples, 17.31%)</title><rect x="953.5" y="883.0" width="204.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.5" y="894.0">one/nio/net/NativeSocket.read</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (273 samples, 2.86%)</title><rect x="959.7" y="867.0" width="33.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="962.7" y="878.0">Ja..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (44 samples, 0.46%)</title><rect x="962.6" y="851.0" width="5.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="965.6" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (39 samples, 0.41%)</title><rect x="968.1" y="851.0" width="4.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="971.1" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (14 samples, 0.15%)</title><rect x="972.9" y="851.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="975.9" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (12 samples, 0.13%)</title><rect x="974.6" y="851.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="977.6" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (12 samples, 0.13%)</title><rect x="976.1" y="851.0" width="1.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="979.1" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (112 samples, 1.17%)</title><rect x="977.6" y="851.0" width="13.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="980.6" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (25 samples, 0.26%)</title><rect x="980.1" y="835.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="983.1" y="846.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (6 samples, 0.06%)</title><rect x="983.2" y="835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="986.2" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (21 samples, 0.22%)</title><rect x="983.9" y="835.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="986.9" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (40 samples, 0.42%)</title><rect x="986.5" y="835.0" width="5.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="989.5" y="846.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (25 samples, 0.26%)</title><rect x="988.4" y="819.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="991.4" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (14 samples, 0.15%)</title><rect x="991.7" y="851.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="994.7" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.10%)</title><rect x="993.4" y="867.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="996.4" y="878.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.06%)</title><rect x="994.7" y="867.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="997.7" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (44 samples, 0.46%)</title><rect x="995.4" y="867.0" width="5.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="998.4" y="878.0"></text>
</g>
<g>
<title>recv (1,268 samples, 13.29%)</title><rect x="1000.9" y="867.0" width="156.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1003.9" y="878.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,031 samples, 10.81%)</title><rect x="1030.2" y="851.0" width="127.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1033.2" y="862.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 0.19%)</title><rect x="1030.2" y="835.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1033.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1,012 samples, 10.61%)</title><rect x="1032.4" y="835.0" width="125.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1035.4" y="846.0">do_syscall_64</text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 0.06%)</title><rect x="1033.5" y="819.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1036.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (935 samples, 9.80%)</title><rect x="1034.3" y="819.0" width="115.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.3" y="830.0">__x64_sys_recv..</text>
</g>
<g>
<title>__sys_recvfrom (907 samples, 9.51%)</title><rect x="1034.4" y="803.0" width="112.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1037.4" y="814.0">__sys_recvfrom</text>
</g>
<g>
<title>fput_many (6 samples, 0.06%)</title><rect x="1036.0" y="787.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1039.0" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (817 samples, 8.56%)</title><rect x="1037.0" y="787.0" width="101.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1040.0" y="798.0">sock_recvmsg</text>
</g>
<g>
<title>apparmor_socket_recvmsg (9 samples, 0.09%)</title><rect x="1038.3" y="771.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1041.3" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (602 samples, 6.31%)</title><rect x="1039.5" y="771.0" width="74.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1042.5" y="782.0">inet6_re..</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.03%)</title><rect x="1040.8" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.8" y="766.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.06%)</title><rect x="1041.2" y="755.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1044.2" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (573 samples, 6.01%)</title><rect x="1041.9" y="755.0" width="70.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1044.9" y="766.0">tcp_recv..</text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.05%)</title><rect x="1043.9" y="739.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1046.9" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (18 samples, 0.19%)</title><rect x="1044.6" y="739.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1047.6" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.08%)</title><rect x="1047.1" y="739.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1050.1" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 0.07%)</title><rect x="1047.2" y="723.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.2" y="734.0"></text>
</g>
<g>
<title>release_sock (22 samples, 0.23%)</title><rect x="1048.1" y="739.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1051.1" y="750.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.03%)</title><rect x="1050.5" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1053.5" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.07%)</title><rect x="1050.8" y="739.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1053.8" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.04%)</title><rect x="1051.8" y="739.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1054.8" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg_locked (473 samples, 4.96%)</title><rect x="1052.3" y="739.0" width="58.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1055.3" y="750.0">tcp_re..</text>
</g>
<g>
<title>__kfree_skb (107 samples, 1.12%)</title><rect x="1064.8" y="723.0" width="13.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.8" y="734.0"></text>
</g>
<g>
<title>kfree_skbmem (14 samples, 0.15%)</title><rect x="1065.1" y="707.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1068.1" y="718.0"></text>
</g>
<g>
<title>skb_release_all (87 samples, 0.91%)</title><rect x="1066.8" y="707.0" width="10.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1069.8" y="718.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.06%)</title><rect x="1067.2" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1070.2" y="702.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.15%)</title><rect x="1067.9" y="691.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1070.9" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (38 samples, 0.40%)</title><rect x="1069.6" y="691.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1072.6" y="702.0"></text>
</g>
<g>
<title>dst_release (34 samples, 0.36%)</title><rect x="1070.1" y="675.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1073.1" y="686.0"></text>
</g>
<g>
<title>sock_rfree (26 samples, 0.27%)</title><rect x="1074.3" y="691.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1077.3" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.04%)</title><rect x="1077.6" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1080.6" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.03%)</title><rect x="1078.0" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1081.0" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (171 samples, 1.79%)</title><rect x="1078.5" y="723.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1081.5" y="734.0">s..</text>
</g>
<g>
<title>__skb_datagram_iter (166 samples, 1.74%)</title><rect x="1079.2" y="707.0" width="20.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1082.2" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (112 samples, 1.17%)</title><rect x="1085.8" y="691.0" width="13.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1088.8" y="702.0"></text>
</g>
<g>
<title>__check_object_size (58 samples, 0.61%)</title><rect x="1086.1" y="675.0" width="7.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1089.1" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (45 samples, 0.47%)</title><rect x="1087.7" y="659.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1090.7" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.08%)</title><rect x="1093.3" y="675.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.3" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (39 samples, 0.41%)</title><rect x="1094.3" y="675.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1097.3" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (28 samples, 0.29%)</title><rect x="1095.6" y="659.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1098.6" y="670.0"></text>
</g>
<g>
<title>check_stack_object (5 samples, 0.05%)</title><rect x="1099.1" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.1" y="686.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.07%)</title><rect x="1099.7" y="723.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1102.7" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (37 samples, 0.39%)</title><rect x="1100.6" y="723.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1103.6" y="734.0"></text>
</g>
<g>
<title>__tcp_select_window (7 samples, 0.07%)</title><rect x="1104.3" y="707.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1107.3" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.04%)</title><rect x="1105.1" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1108.1" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (42 samples, 0.44%)</title><rect x="1105.6" y="723.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1108.6" y="734.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.07%)</title><rect x="1107.0" y="707.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1110.0" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (24 samples, 0.25%)</title><rect x="1107.9" y="707.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1110.9" y="718.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.06%)</title><rect x="1108.2" y="691.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1111.2" y="702.0"></text>
</g>
<g>
<title>read_tsc (15 samples, 0.16%)</title><rect x="1109.0" y="691.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1112.0" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (16 samples, 0.17%)</title><rect x="1110.8" y="739.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.8" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg_locked (9 samples, 0.09%)</title><rect x="1112.8" y="755.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1115.8" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (193 samples, 2.02%)</title><rect x="1113.9" y="771.0" width="23.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1116.9" y="782.0">s..</text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.12%)</title><rect x="1117.0" y="755.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1120.0" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (157 samples, 1.65%)</title><rect x="1118.4" y="755.0" width="19.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1121.4" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (155 samples, 1.62%)</title><rect x="1118.6" y="739.0" width="19.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1121.6" y="750.0"></text>
</g>
<g>
<title>aa_label_next_confined (11 samples, 0.12%)</title><rect x="1129.3" y="723.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1132.3" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (57 samples, 0.60%)</title><rect x="1130.6" y="723.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1133.6" y="734.0"></text>
</g>
<g>
<title>aa_label_next_confined (8 samples, 0.08%)</title><rect x="1132.5" y="707.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1135.5" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (34 samples, 0.36%)</title><rect x="1133.5" y="707.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1136.5" y="718.0"></text>
</g>
<g>
<title>aa_check_perms (3 samples, 0.03%)</title><rect x="1137.3" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1140.3" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (69 samples, 0.72%)</title><rect x="1138.0" y="787.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1141.0" y="798.0"></text>
</g>
<g>
<title>__fdget (43 samples, 0.45%)</title><rect x="1138.4" y="771.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1141.4" y="782.0"></text>
</g>
<g>
<title>__fget_light (42 samples, 0.44%)</title><rect x="1138.5" y="755.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1141.5" y="766.0"></text>
</g>
<g>
<title>__fget_files (42 samples, 0.44%)</title><rect x="1138.5" y="739.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1141.5" y="750.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.24%)</title><rect x="1143.7" y="771.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1146.7" y="782.0"></text>
</g>
<g>
<title>fput (7 samples, 0.07%)</title><rect x="1146.6" y="803.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1149.6" y="814.0"></text>
</g>
<g>
<title>import_single_range (8 samples, 0.08%)</title><rect x="1147.4" y="803.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.4" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.04%)</title><rect x="1148.4" y="803.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1151.4" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.08%)</title><rect x="1148.9" y="803.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1151.9" y="814.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (59 samples, 0.62%)</title><rect x="1149.9" y="819.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1152.9" y="830.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (3 samples, 0.03%)</title><rect x="1157.2" y="819.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (6 samples, 0.06%)</title><rect x="1157.7" y="883.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.7" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="1158.5" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.5" y="926.0"></text>
</g>
<g>
<title>start_thread (252 samples, 2.64%)</title><rect x="1158.8" y="947.0" width="31.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1161.8" y="958.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (252 samples, 2.64%)</title><rect x="1158.8" y="931.0" width="31.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1161.8" y="942.0">th..</text>
</g>
<g>
<title>Thread::call_run() (252 samples, 2.64%)</title><rect x="1158.8" y="915.0" width="31.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.8" y="926.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (168 samples, 1.76%)</title><rect x="1158.8" y="899.0" width="20.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.8" y="910.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (164 samples, 1.72%)</title><rect x="1159.1" y="883.0" width="20.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.1" y="894.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (144 samples, 1.51%)</title><rect x="1159.1" y="867.0" width="17.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.1" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (144 samples, 1.51%)</title><rect x="1159.1" y="851.0" width="17.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.1" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (4 samples, 0.04%)</title><rect x="1159.1" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.1" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (139 samples, 1.46%)</title><rect x="1159.6" y="835.0" width="17.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.6" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (91 samples, 0.95%)</title><rect x="1165.1" y="819.0" width="11.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.1" y="830.0"></text>
</g>
<g>
<title>asm_exc_page_fault (4 samples, 0.04%)</title><rect x="1173.4" y="803.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1176.4" y="814.0"></text>
</g>
<g>
<title>exc_page_fault (4 samples, 0.04%)</title><rect x="1173.4" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.4" y="798.0"></text>
</g>
<g>
<title>do_user_addr_fault (4 samples, 0.04%)</title><rect x="1173.4" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1176.4" y="782.0"></text>
</g>
<g>
<title>handle_mm_fault (4 samples, 0.04%)</title><rect x="1173.4" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1176.4" y="766.0"></text>
</g>
<g>
<title>__handle_mm_fault (4 samples, 0.04%)</title><rect x="1173.4" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1176.4" y="750.0"></text>
</g>
<g>
<title>do_anonymous_page (3 samples, 0.03%)</title><rect x="1173.5" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1176.5" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (20 samples, 0.21%)</title><rect x="1173.9" y="803.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.9" y="814.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (19 samples, 0.20%)</title><rect x="1176.9" y="867.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.9" y="878.0"></text>
</g>
<g>
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (17 samples, 0.18%)</title><rect x="1176.9" y="851.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.9" y="862.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (17 samples, 0.18%)</title><rect x="1176.9" y="835.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.9" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (13 samples, 0.14%)</title><rect x="1177.0" y="819.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (11 samples, 0.12%)</title><rect x="1177.3" y="803.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.3" y="814.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (80 samples, 0.84%)</title><rect x="1179.6" y="899.0" width="9.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.6" y="910.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (80 samples, 0.84%)</title><rect x="1179.6" y="883.0" width="9.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.6" y="894.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (80 samples, 0.84%)</title><rect x="1179.6" y="867.0" width="9.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.6" y="878.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (72 samples, 0.75%)</title><rect x="1179.6" y="851.0" width="8.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.6" y="862.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (72 samples, 0.75%)</title><rect x="1179.6" y="835.0" width="8.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.6" y="846.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (37 samples, 0.39%)</title><rect x="1179.7" y="819.0" width="4.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.7" y="830.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 0.05%)</title><rect x="1179.7" y="803.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.7" y="814.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.03%)</title><rect x="1180.0" y="787.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.0" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 0.04%)</title><rect x="1180.6" y="803.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.6" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 0.04%)</title><rect x="1180.6" y="787.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.6" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (22 samples, 0.23%)</title><rect x="1181.1" y="803.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.1" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.05%)</title><rect x="1181.8" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (4 samples, 0.04%)</title><rect x="1182.6" y="787.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.6" y="798.0"></text>
</g>
<g>
<title>PhaseOutput::Output() (3 samples, 0.03%)</title><rect x="1183.8" y="803.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="814.0"></text>
</g>
<g>
<title>Compile::Optimize() (24 samples, 0.25%)</title><rect x="1184.3" y="819.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (4 samples, 0.04%)</title><rect x="1185.1" y="803.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (7 samples, 0.07%)</title><rect x="1185.5" y="803.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (7 samples, 0.07%)</title><rect x="1185.5" y="787.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.5" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.06%)</title><rect x="1185.7" y="771.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.7" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post_work(Node*, bool) (6 samples, 0.06%)</title><rect x="1185.7" y="755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (5 samples, 0.05%)</title><rect x="1185.8" y="739.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.8" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (4 samples, 0.04%)</title><rect x="1185.9" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.05%)</title><rect x="1186.5" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.05%)</title><rect x="1186.5" y="787.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.10%)</title><rect x="1187.3" y="819.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.10%)</title><rect x="1187.3" y="803.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.10%)</title><rect x="1187.3" y="787.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.10%)</title><rect x="1187.3" y="771.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.10%)</title><rect x="1187.3" y="755.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.10%)</title><rect x="1187.3" y="739.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.3" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.08%)</title><rect x="1187.4" y="723.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.08%)</title><rect x="1187.4" y="707.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.08%)</title><rect x="1187.4" y="691.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.08%)</title><rect x="1187.4" y="675.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.08%)</title><rect x="1187.4" y="659.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.08%)</title><rect x="1187.4" y="643.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.05%)</title><rect x="1187.6" y="627.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.6" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.05%)</title><rect x="1187.6" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.05%)</title><rect x="1187.6" y="595.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.05%)</title><rect x="1187.6" y="579.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.05%)</title><rect x="1187.6" y="563.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.04%)</title><rect x="1187.6" y="547.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.6" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.04%)</title><rect x="1187.6" y="531.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.6" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.04%)</title><rect x="1187.6" y="515.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="1187.6" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.6" y="510.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.08%)</title><rect x="1188.5" y="851.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (8 samples, 0.08%)</title><rect x="1188.5" y="835.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>Compilation::compile_method() (8 samples, 0.08%)</title><rect x="1188.5" y="819.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (6 samples, 0.06%)</title><rect x="1188.5" y="803.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.0] (3 samples, 0.03%)</title><rect x="1188.5" y="787.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.5" y="798.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.03%)</title><rect x="1189.5" y="899.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.03%)</title><rect x="1189.5" y="883.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
</g>
</svg>
