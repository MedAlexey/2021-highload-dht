<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (11,849 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.04%)</title><rect x="10.0" y="931.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="10.1" y="915.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.07%)</title><rect x="10.5" y="931.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.5" y="942.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (4 samples, 0.03%)</title><rect x="10.8" y="915.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.8" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (17 samples, 0.14%)</title><rect x="11.3" y="931.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="14.3" y="942.0"></text>
</g>
<g>
<title>clock_gettime (15 samples, 0.13%)</title><rect x="11.5" y="915.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="14.5" y="926.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (9 samples, 0.08%)</title><rect x="12.1" y="899.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="15.1" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10,851 samples, 91.58%)</title><rect x="13.1" y="931.0" width="1080.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.1" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,851 samples, 91.58%)</title><rect x="13.1" y="915.0" width="1080.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.1" y="926.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,851 samples, 91.58%)</title><rect x="13.1" y="899.0" width="1080.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.1" y="910.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (11 samples, 0.09%)</title><rect x="13.6" y="883.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.09%)</title><rect x="13.6" y="867.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (11 samples, 0.09%)</title><rect x="13.6" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.getAndUnsetStatus (11 samples, 0.09%)</title><rect x="13.6" y="835.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndBitwiseAndInt (11 samples, 0.09%)</title><rect x="13.6" y="819.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl$$Lambda$89.0x0000000800bbe7d0.run (6 samples, 0.05%)</title><rect x="14.1" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (329 samples, 2.78%)</title><rect x="14.7" y="883.0" width="32.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.7" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (324 samples, 2.73%)</title><rect x="15.2" y="867.0" width="32.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.2" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (228 samples, 1.92%)</title><rect x="15.7" y="851.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.7" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (207 samples, 1.75%)</title><rect x="16.4" y="835.0" width="20.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionNode.block (207 samples, 1.75%)</title><rect x="16.4" y="819.0" width="20.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionNode.isReleasable (3 samples, 0.03%)</title><rect x="16.4" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (204 samples, 1.72%)</title><rect x="16.7" y="803.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (204 samples, 1.72%)</title><rect x="16.7" y="787.0" width="20.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.7" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (79 samples, 0.67%)</title><rect x="17.4" y="771.0" width="7.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="20.4" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.03%)</title><rect x="18.2" y="755.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.2" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (26 samples, 0.22%)</title><rect x="18.6" y="755.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="21.6" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.03%)</title><rect x="19.8" y="739.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="22.8" y="750.0"></text>
</g>
<g>
<title>Mutex::lock_without_safepoint_check() (3 samples, 0.03%)</title><rect x="20.1" y="739.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.1" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.03%)</title><rect x="20.1" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="23.1" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.04%)</title><rect x="20.4" y="739.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="23.4" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (35 samples, 0.30%)</title><rect x="21.5" y="755.0" width="3.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="24.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.15%)</title><rect x="23.1" y="739.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.15%)</title><rect x="23.1" y="723.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="26.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.10%)</title><rect x="23.2" y="707.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="26.2" y="718.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.09%)</title><rect x="23.2" y="691.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.03%)</title><rect x="23.5" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="26.5" y="686.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.03%)</title><rect x="23.9" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.9" y="686.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (5 samples, 0.04%)</title><rect x="24.4" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="27.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 0.96%)</title><rect x="25.2" y="771.0" width="11.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="28.2" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (8 samples, 0.07%)</title><rect x="25.2" y="755.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="28.2" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.03%)</title><rect x="26.0" y="755.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="29.0" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (95 samples, 0.80%)</title><rect x="26.3" y="755.0" width="9.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="29.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.47%)</title><rect x="30.2" y="739.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 0.45%)</title><rect x="30.3" y="723.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="33.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (47 samples, 0.40%)</title><rect x="30.5" y="707.0" width="4.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="33.5" y="718.0"></text>
</g>
<g>
<title>do_futex (44 samples, 0.37%)</title><rect x="30.6" y="691.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="33.6" y="702.0"></text>
</g>
<g>
<title>futex_wait (37 samples, 0.31%)</title><rect x="31.3" y="675.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.3" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.14%)</title><rect x="32.5" y="659.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.5" y="670.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.11%)</title><rect x="32.9" y="643.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="35.9" y="654.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.08%)</title><rect x="33.2" y="627.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="36.2" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.06%)</title><rect x="33.5" y="611.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="36.5" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.03%)</title><rect x="34.2" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="37.2" y="670.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.03%)</title><rect x="34.3" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.3" y="654.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (4 samples, 0.03%)</title><rect x="35.2" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.2" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.03%)</title><rect x="35.8" y="755.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="38.8" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.03%)</title><rect x="36.6" y="771.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="39.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.enableWait (9 samples, 0.08%)</title><rect x="37.0" y="835.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.08%)</title><rect x="37.0" y="819.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (4 samples, 0.03%)</title><rect x="37.5" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.03%)</title><rect x="37.5" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.04%)</title><rect x="37.9" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.03%)</title><rect x="38.4" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.03%)</title><rect x="38.4" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enqueue (4 samples, 0.03%)</title><rect x="38.4" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (85 samples, 0.72%)</title><rect x="39.0" y="851.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (85 samples, 0.72%)</title><rect x="39.0" y="835.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (85 samples, 0.72%)</title><rect x="39.0" y="819.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (85 samples, 0.72%)</title><rect x="39.0" y="803.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (72 samples, 0.61%)</title><rect x="40.3" y="787.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.3" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.06%)</title><rect x="40.5" y="771.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="43.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (63 samples, 0.53%)</title><rect x="41.2" y="771.0" width="6.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="44.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 0.46%)</title><rect x="42.1" y="755.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="45.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (52 samples, 0.44%)</title><rect x="42.3" y="739.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (51 samples, 0.43%)</title><rect x="42.3" y="723.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="45.3" y="734.0"></text>
</g>
<g>
<title>do_futex (51 samples, 0.43%)</title><rect x="42.3" y="707.0" width="5.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="45.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (50 samples, 0.42%)</title><rect x="42.4" y="691.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="45.4" y="702.0"></text>
</g>
<g>
<title>wake_up_q (47 samples, 0.40%)</title><rect x="42.7" y="675.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="45.7" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (46 samples, 0.39%)</title><rect x="42.8" y="659.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="45.8" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (43 samples, 0.36%)</title><rect x="43.1" y="643.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl$$Lambda$89.0x0000000800bbe7d0.run (10,506 samples, 88.67%)</title><rect x="47.4" y="883.0" width="1046.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.4" y="894.0">ru/mail/polis/service/medalexey/ServiceImpl$$Lambda$89.0x0000000800bbe7d0.run</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.handleRequestTask (4 samples, 0.03%)</title><rect x="47.5" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.lambda$handleRequest$0 (10,501 samples, 88.62%)</title><rect x="47.9" y="867.0" width="1045.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.9" y="878.0">ru/mail/polis/service/medalexey/ServiceImpl.lambda$handleRequest$0</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.handleRequestTask (10,501 samples, 88.62%)</title><rect x="47.9" y="851.0" width="1045.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.9" y="862.0">ru/mail/polis/service/medalexey/ServiceImpl.handleRequestTask</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,183 samples, 9.98%)</title><rect x="47.9" y="835.0" width="117.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.9" y="846.0">one/nio/http/H..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.08%)</title><rect x="47.9" y="819.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.9" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.04%)</title><rect x="48.4" y="803.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="51.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,156 samples, 9.76%)</title><rect x="48.9" y="819.0" width="115.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.9" y="830.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26 samples, 0.22%)</title><rect x="49.0" y="803.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.18%)</title><rect x="49.5" y="787.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (10 samples, 0.08%)</title><rect x="49.5" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.5" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="50.1" y="755.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="53.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.09%)</title><rect x="50.5" y="771.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.09%)</title><rect x="50.5" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.09%)</title><rect x="50.5" y="739.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,129 samples, 9.53%)</title><rect x="51.6" y="803.0" width="112.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.6" y="814.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,129 samples, 9.53%)</title><rect x="51.6" y="787.0" width="112.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.6" y="798.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.03%)</title><rect x="51.8" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,123 samples, 9.48%)</title><rect x="52.2" y="771.0" width="111.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.2" y="782.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,122 samples, 9.47%)</title><rect x="52.3" y="755.0" width="111.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.3" y="766.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (50 samples, 0.42%)</title><rect x="53.7" y="739.0" width="5.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="56.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.07%)</title><rect x="55.0" y="723.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="58.0" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (4 samples, 0.03%)</title><rect x="55.8" y="723.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="58.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (20 samples, 0.17%)</title><rect x="56.4" y="723.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="59.4" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.03%)</title><rect x="56.7" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="59.7" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.03%)</title><rect x="57.2" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="60.2" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.07%)</title><rect x="57.6" y="707.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="60.6" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.03%)</title><rect x="58.0" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="61.0" y="702.0"></text>
</g>
<g>
<title>__send (1,050 samples, 8.86%)</title><rect x="58.8" y="739.0" width="104.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="61.8" y="750.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (999 samples, 8.43%)</title><rect x="63.9" y="723.0" width="99.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="66.9" y="734.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (998 samples, 8.42%)</title><rect x="64.0" y="707.0" width="99.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="67.0" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (973 samples, 8.21%)</title><rect x="64.3" y="691.0" width="96.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="67.3" y="702.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (968 samples, 8.17%)</title><rect x="64.3" y="675.0" width="96.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="67.3" y="686.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (947 samples, 7.99%)</title><rect x="65.3" y="659.0" width="94.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="68.3" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.05%)</title><rect x="65.8" y="643.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.8" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (911 samples, 7.69%)</title><rect x="66.4" y="643.0" width="90.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.4" y="654.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (909 samples, 7.67%)</title><rect x="66.6" y="627.0" width="90.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="69.6" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.04%)</title><rect x="66.9" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.03%)</title><rect x="67.4" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="70.4" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (886 samples, 7.48%)</title><rect x="68.5" y="611.0" width="88.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="71.5" y="622.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.03%)</title><rect x="70.2" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="73.2" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.03%)</title><rect x="70.2" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="73.2" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (14 samples, 0.12%)</title><rect x="70.9" y="595.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="73.9" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.11%)</title><rect x="71.0" y="579.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.0" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7 samples, 0.06%)</title><rect x="72.4" y="595.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="75.4" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6 samples, 0.05%)</title><rect x="72.5" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="75.5" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (46 samples, 0.39%)</title><rect x="73.1" y="595.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="76.1" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (40 samples, 0.34%)</title><rect x="73.5" y="579.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="76.5" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (20 samples, 0.17%)</title><rect x="73.9" y="563.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (13 samples, 0.11%)</title><rect x="73.9" y="547.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.9" y="558.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.03%)</title><rect x="75.4" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="78.4" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.07%)</title><rect x="75.9" y="563.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="78.9" y="574.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.05%)</title><rect x="76.7" y="563.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.7" y="574.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.05%)</title><rect x="76.7" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="79.7" y="558.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.03%)</title><rect x="77.7" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="80.7" y="606.0"></text>
</g>
<g>
<title>tcp_push (771 samples, 6.51%)</title><rect x="78.5" y="595.0" width="76.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.5" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (769 samples, 6.49%)</title><rect x="78.6" y="579.0" width="76.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.6" y="590.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (762 samples, 6.43%)</title><rect x="79.3" y="563.0" width="75.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="82.3" y="574.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (707 samples, 5.97%)</title><rect x="80.6" y="547.0" width="70.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.6" y="558.0">__tcp_tr..</text>
</g>
<g>
<title>__skb_clone (4 samples, 0.03%)</title><rect x="82.5" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="85.5" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (673 samples, 5.68%)</title><rect x="83.4" y="531.0" width="67.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="86.4" y="542.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (668 samples, 5.64%)</title><rect x="83.5" y="515.0" width="66.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="86.5" y="526.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (661 samples, 5.58%)</title><rect x="84.1" y="499.0" width="65.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="87.1" y="510.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (135 samples, 1.14%)</title><rect x="84.3" y="483.0" width="13.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="87.3" y="494.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.03%)</title><rect x="84.4" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="87.4" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.06%)</title><rect x="84.8" y="467.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="87.8" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (7 samples, 0.06%)</title><rect x="85.5" y="467.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="88.5" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (6 samples, 0.05%)</title><rect x="86.2" y="467.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.2" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (110 samples, 0.93%)</title><rect x="86.8" y="467.0" width="10.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.8" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (22 samples, 0.19%)</title><rect x="87.3" y="451.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.3" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (22 samples, 0.19%)</title><rect x="87.3" y="435.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="90.3" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (71 samples, 0.60%)</title><rect x="89.6" y="451.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="92.6" y="462.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.03%)</title><rect x="89.8" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="92.8" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (64 samples, 0.54%)</title><rect x="90.1" y="435.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="93.1" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (13 samples, 0.11%)</title><rect x="90.8" y="419.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="93.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (37 samples, 0.31%)</title><rect x="92.5" y="419.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.5" y="430.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.03%)</title><rect x="94.8" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="97.8" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (10 samples, 0.08%)</title><rect x="95.1" y="403.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="98.1" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.03%)</title><rect x="95.7" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.7" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (3 samples, 0.03%)</title><rect x="96.1" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (9 samples, 0.08%)</title><rect x="96.8" y="451.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.8" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (7 samples, 0.06%)</title><rect x="97.0" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.0" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="97.3" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="100.3" y="430.0"></text>
</g>
<g>
<title>ip_output (523 samples, 4.41%)</title><rect x="97.8" y="483.0" width="52.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="100.8" y="494.0">ip_ou..</text>
</g>
<g>
<title>__x86_retpoline_rax (3 samples, 0.03%)</title><rect x="98.1" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="101.1" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (506 samples, 4.27%)</title><rect x="98.4" y="467.0" width="50.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="101.4" y="478.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (9 samples, 0.08%)</title><rect x="98.7" y="451.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="101.7" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (487 samples, 4.11%)</title><rect x="99.6" y="451.0" width="48.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="102.6" y="462.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (486 samples, 4.10%)</title><rect x="99.6" y="435.0" width="48.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="102.6" y="446.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (421 samples, 3.55%)</title><rect x="100.5" y="419.0" width="41.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.5" y="430.0">__l..</text>
</g>
<g>
<title>do_softirq (420 samples, 3.54%)</title><rect x="100.6" y="403.0" width="41.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.6" y="414.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (416 samples, 3.51%)</title><rect x="101.0" y="387.0" width="41.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="104.0" y="398.0">do_..</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (416 samples, 3.51%)</title><rect x="101.0" y="371.0" width="41.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="104.0" y="382.0">asm..</text>
</g>
<g>
<title>__softirqentry_text_start (416 samples, 3.51%)</title><rect x="101.0" y="355.0" width="41.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="104.0" y="366.0">__s..</text>
</g>
<g>
<title>net_rx_action (394 samples, 3.33%)</title><rect x="103.0" y="339.0" width="39.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="106.0" y="350.0">net..</text>
</g>
<g>
<title>process_backlog (389 samples, 3.28%)</title><rect x="103.4" y="323.0" width="38.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.4" y="334.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (382 samples, 3.22%)</title><rect x="104.1" y="307.0" width="38.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="107.1" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (381 samples, 3.22%)</title><rect x="104.2" y="291.0" width="38.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="107.2" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.08%)</title><rect x="104.3" y="275.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="107.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (367 samples, 3.10%)</title><rect x="105.2" y="275.0" width="36.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="108.2" y="286.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (346 samples, 2.92%)</title><rect x="105.7" y="259.0" width="34.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="108.7" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (343 samples, 2.89%)</title><rect x="106.0" y="243.0" width="34.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="109.0" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (328 samples, 2.77%)</title><rect x="106.1" y="227.0" width="32.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.1" y="238.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (326 samples, 2.75%)</title><rect x="106.2" y="211.0" width="32.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.2" y="222.0">ip..</text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.03%)</title><rect x="107.0" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (315 samples, 2.66%)</title><rect x="107.3" y="195.0" width="31.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="110.3" y="206.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (17 samples, 0.14%)</title><rect x="107.7" y="179.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.7" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.05%)</title><rect x="109.7" y="179.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (283 samples, 2.39%)</title><rect x="110.4" y="179.0" width="28.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="113.4" y="190.0">tc..</text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.03%)</title><rect x="110.6" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (276 samples, 2.33%)</title><rect x="111.1" y="163.0" width="27.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.1" y="174.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (19 samples, 0.16%)</title><rect x="111.8" y="147.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="114.8" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (18 samples, 0.15%)</title><rect x="111.9" y="131.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.9" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.14%)</title><rect x="112.0" y="115.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="115.0" y="126.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.13%)</title><rect x="112.2" y="99.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="115.2" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.11%)</title><rect x="112.2" y="83.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="115.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.04%)</title><rect x="114.0" y="147.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (93 samples, 0.78%)</title><rect x="114.5" y="147.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.5" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (63 samples, 0.53%)</title><rect x="116.7" y="131.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.7" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (37 samples, 0.31%)</title><rect x="117.7" y="115.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="120.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (12 samples, 0.10%)</title><rect x="117.7" y="99.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="120.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.08%)</title><rect x="117.9" y="83.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.9" y="94.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="118.5" y="67.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="121.5" y="78.0"></text>
</g>
<g>
<title>skb_release_all (23 samples, 0.19%)</title><rect x="118.9" y="99.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (20 samples, 0.17%)</title><rect x="118.9" y="83.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="121.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.07%)</title><rect x="120.1" y="67.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="123.1" y="78.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.07%)</title><rect x="120.1" y="51.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="123.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="120.6" y="35.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="123.6" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.03%)</title><rect x="120.9" y="83.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="123.9" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (10 samples, 0.08%)</title><rect x="121.6" y="115.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="124.6" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (3 samples, 0.03%)</title><rect x="122.6" y="115.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="125.6" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (130 samples, 1.10%)</title><rect x="123.8" y="147.0" width="13.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="126.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (128 samples, 1.08%)</title><rect x="124.0" y="131.0" width="12.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (126 samples, 1.06%)</title><rect x="124.2" y="115.0" width="12.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="127.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (126 samples, 1.06%)</title><rect x="124.2" y="99.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="127.2" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (125 samples, 1.05%)</title><rect x="124.3" y="83.0" width="12.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.3" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.03%)</title><rect x="136.8" y="147.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="139.8" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.03%)</title><rect x="137.2" y="147.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.2" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="138.2" y="147.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="141.2" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.08%)</title><rect x="139.0" y="227.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="142.0" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.04%)</title><rect x="139.0" y="211.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="142.0" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.04%)</title><rect x="139.0" y="195.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="142.0" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (4 samples, 0.03%)</title><rect x="139.6" y="211.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.6" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (4 samples, 0.03%)</title><rect x="139.6" y="195.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="142.6" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (6 samples, 0.05%)</title><rect x="140.3" y="259.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="143.3" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.04%)</title><rect x="141.2" y="259.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="144.2" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="141.9" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="144.9" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (56 samples, 0.47%)</title><rect x="142.4" y="419.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="145.4" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (55 samples, 0.46%)</title><rect x="142.4" y="403.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="145.4" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (32 samples, 0.27%)</title><rect x="143.6" y="387.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="146.6" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (27 samples, 0.23%)</title><rect x="143.8" y="371.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.8" y="382.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.08%)</title><rect x="144.7" y="355.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="147.7" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.07%)</title><rect x="144.8" y="339.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="147.8" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.07%)</title><rect x="144.8" y="323.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="147.8" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.03%)</title><rect x="145.6" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="148.6" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.04%)</title><rect x="146.0" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="149.0" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.04%)</title><rect x="147.3" y="387.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="150.3" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="148.2" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="151.2" y="462.0"></text>
</g>
<g>
<title>migrate_disable (3 samples, 0.03%)</title><rect x="148.5" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.5" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.03%)</title><rect x="148.8" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="151.8" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.05%)</title><rect x="149.1" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.1" y="478.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.03%)</title><rect x="150.4" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.4" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.03%)</title><rect x="151.1" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.1" y="558.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.04%)</title><rect x="151.7" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.7" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (15 samples, 0.13%)</title><rect x="152.6" y="547.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="155.6" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.09%)</title><rect x="153.0" y="531.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="156.0" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.08%)</title><rect x="153.2" y="515.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.2" y="526.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.08%)</title><rect x="153.2" y="499.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="156.2" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.06%)</title><rect x="153.4" y="483.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.4" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="154.4" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="157.4" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="154.7" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.7" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.11%)</title><rect x="155.3" y="595.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="158.3" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.10%)</title><rect x="155.4" y="579.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="158.4" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="156.2" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="159.2" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.03%)</title><rect x="156.7" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="159.7" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (23 samples, 0.19%)</title><rect x="157.3" y="643.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.3" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (22 samples, 0.19%)</title><rect x="157.4" y="627.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.4" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (22 samples, 0.19%)</title><rect x="157.4" y="611.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="160.4" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (10 samples, 0.08%)</title><rect x="158.6" y="595.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="161.6" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (5 samples, 0.04%)</title><rect x="159.1" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.1" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.09%)</title><rect x="159.6" y="659.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.6" y="670.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.04%)</title><rect x="159.6" y="643.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="162.6" y="654.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.04%)</title><rect x="159.6" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.6" y="638.0"></text>
</g>
<g>
<title>__fget_files (5 samples, 0.04%)</title><rect x="159.6" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.6" y="622.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.05%)</title><rect x="160.1" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="163.1" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.03%)</title><rect x="160.9" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="163.9" y="686.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (22 samples, 0.19%)</title><rect x="161.2" y="691.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.2" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.03%)</title><rect x="163.4" y="739.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="166.4" y="750.0"></text>
</g>
<g>
<title>send@plt (3 samples, 0.03%)</title><rect x="163.8" y="739.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="166.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.14%)</title><rect x="164.1" y="819.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.08%)</title><rect x="164.7" y="803.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.08%)</title><rect x="164.7" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.18%)</title><rect x="165.8" y="835.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="166.5" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="166.5" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="166.5" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.03%)</title><rect x="166.5" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.5" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="166.9" y="819.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="169.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.04%)</title><rect x="167.3" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.03%)</title><rect x="167.4" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.03%)</title><rect x="167.4" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.03%)</title><rect x="167.4" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.03%)</title><rect x="167.8" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="167.8" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.03%)</title><rect x="167.8" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.03%)</title><rect x="167.8" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.entity (9,293 samples, 78.43%)</title><rect x="168.2" y="835.0" width="925.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.2" y="846.0">ru/mail/polis/service/medalexey/ServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.isBlank (14 samples, 0.12%)</title><rect x="168.2" y="819.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (14 samples, 0.12%)</title><rect x="168.2" y="803.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (7 samples, 0.06%)</title><rect x="168.3" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges (6 samples, 0.05%)</title><rect x="169.0" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.get (9,230 samples, 77.90%)</title><rect x="169.6" y="819.0" width="919.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.6" y="830.0">ru/mail/polis/service/medalexey/ServiceImpl.get</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.09%)</title><rect x="169.7" y="803.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getValue (6 samples, 0.05%)</title><rect x="171.0" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO$1.hasNext (316 samples, 2.67%)</title><rect x="171.6" y="803.0" width="31.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.6" y="814.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (313 samples, 2.64%)</title><rect x="171.9" y="787.0" width="31.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.9" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (15 samples, 0.13%)</title><rect x="171.9" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.13%)</title><rect x="171.9" y="755.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (15 samples, 0.13%)</title><rect x="171.9" y="739.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.13%)</title><rect x="171.9" y="723.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (12 samples, 0.10%)</title><rect x="172.2" y="707.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (12 samples, 0.10%)</title><rect x="172.2" y="691.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (11 samples, 0.09%)</title><rect x="172.3" y="675.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (11 samples, 0.09%)</title><rect x="172.3" y="659.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (11 samples, 0.09%)</title><rect x="172.3" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (11 samples, 0.09%)</title><rect x="172.3" y="627.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (11 samples, 0.09%)</title><rect x="172.3" y="611.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (9 samples, 0.08%)</title><rect x="172.5" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (9 samples, 0.08%)</title><rect x="172.5" y="579.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (9 samples, 0.08%)</title><rect x="172.5" y="563.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (5 samples, 0.04%)</title><rect x="172.9" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (298 samples, 2.51%)</title><rect x="173.4" y="771.0" width="29.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.4" y="782.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (298 samples, 2.51%)</title><rect x="173.4" y="755.0" width="29.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.4" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="173.4" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="173.4" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="173.4" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="173.4" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="173.4" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="173.4" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="173.4" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="173.4" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="173.5" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="173.6" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="173.6" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="173.7" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="173.8" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="173.8" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="173.8" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (13 samples, 0.11%)</title><rect x="174.1" y="739.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (13 samples, 0.11%)</title><rect x="174.1" y="723.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (13 samples, 0.11%)</title><rect x="174.1" y="707.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.1" y="718.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="174.2" y="691.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="177.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.hasNext (3 samples, 0.03%)</title><rect x="174.6" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="174.9" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="174.9" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="175.0" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="175.0" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="175.0" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="175.0" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="175.0" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="175.0" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="175.1" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (278 samples, 2.35%)</title><rect x="175.4" y="739.0" width="27.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.4" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (8 samples, 0.07%)</title><rect x="175.4" y="723.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (8 samples, 0.07%)</title><rect x="175.4" y="707.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (8 samples, 0.07%)</title><rect x="175.4" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="175.5" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="175.5" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="175.7" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="175.7" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="175.7" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="175.7" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="175.7" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="175.7" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="175.7" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="175.7" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="175.8" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (270 samples, 2.28%)</title><rect x="176.2" y="723.0" width="26.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.2" y="734.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="176.5" y="707.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="176.5" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="176.6" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="176.6" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="176.7" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="176.7" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="176.7" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="176.7" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (262 samples, 2.21%)</title><rect x="177.0" y="707.0" width="26.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.0" y="718.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (262 samples, 2.21%)</title><rect x="177.0" y="691.0" width="26.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.0" y="702.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="177.1" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="177.2" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="177.2" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="177.2" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="177.3" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="177.3" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="177.3" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="177.3" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="177.5" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="177.5" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="177.5" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="177.5" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (68 samples, 0.57%)</title><rect x="177.8" y="675.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (67 samples, 0.57%)</title><rect x="177.9" y="659.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (67 samples, 0.57%)</title><rect x="177.9" y="643.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (64 samples, 0.54%)</title><rect x="178.2" y="627.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (64 samples, 0.54%)</title><rect x="178.2" y="611.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.2" y="622.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="178.2" y="595.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="181.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (60 samples, 0.51%)</title><rect x="178.6" y="595.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (60 samples, 0.51%)</title><rect x="178.6" y="579.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.6" y="590.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="178.9" y="563.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="181.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (54 samples, 0.46%)</title><rect x="179.2" y="563.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (51 samples, 0.43%)</title><rect x="179.5" y="547.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.5" y="558.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.06%)</title><rect x="179.8" y="531.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="182.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (40 samples, 0.34%)</title><rect x="180.5" y="531.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (37 samples, 0.31%)</title><rect x="180.8" y="515.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.8" y="526.0"></text>
</g>
<g>
<title>itable stub (16 samples, 0.14%)</title><rect x="181.2" y="499.0" width="1.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="184.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="182.8" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="183.0" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.0" y="494.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="183.0" y="467.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="186.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (10 samples, 0.08%)</title><rect x="183.5" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (186 samples, 1.57%)</title><rect x="184.6" y="675.0" width="18.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.6" y="686.0"></text>
</g>
<g>
<title>itable stub (13 samples, 0.11%)</title><rect x="184.8" y="659.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="187.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="186.1" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (11 samples, 0.09%)</title><rect x="186.7" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (10 samples, 0.08%)</title><rect x="186.8" y="643.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (10 samples, 0.08%)</title><rect x="186.8" y="627.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (9 samples, 0.08%)</title><rect x="186.9" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (9 samples, 0.08%)</title><rect x="186.9" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (9 samples, 0.08%)</title><rect x="186.9" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (9 samples, 0.08%)</title><rect x="186.9" y="563.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (9 samples, 0.08%)</title><rect x="186.9" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (9 samples, 0.08%)</title><rect x="186.9" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="187.0" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="187.0" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.0" y="510.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="187.0" y="483.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="190.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (4 samples, 0.03%)</title><rect x="187.3" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (154 samples, 1.30%)</title><rect x="187.8" y="659.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="187.8" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="187.8" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="187.9" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="187.9" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="187.9" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="187.9" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="187.9" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="187.9" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="187.9" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="187.9" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (4 samples, 0.03%)</title><rect x="188.1" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (147 samples, 1.24%)</title><rect x="188.5" y="643.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (147 samples, 1.24%)</title><rect x="188.5" y="627.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (9 samples, 0.08%)</title><rect x="188.6" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (9 samples, 0.08%)</title><rect x="188.6" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="188.8" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="188.8" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="188.8" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="188.8" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.06%)</title><rect x="188.8" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.06%)</title><rect x="188.8" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.8" y="510.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="188.8" y="483.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="191.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="189.1" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="189.2" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (32 samples, 0.27%)</title><rect x="189.5" y="611.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (32 samples, 0.27%)</title><rect x="189.5" y="595.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (32 samples, 0.27%)</title><rect x="189.5" y="579.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (29 samples, 0.24%)</title><rect x="189.8" y="563.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (28 samples, 0.24%)</title><rect x="189.9" y="547.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (26 samples, 0.22%)</title><rect x="190.1" y="531.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (21 samples, 0.18%)</title><rect x="190.6" y="515.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.6" y="526.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="190.6" y="499.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="193.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (17 samples, 0.14%)</title><rect x="190.9" y="499.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.13%)</title><rect x="191.1" y="483.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.1" y="494.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.07%)</title><rect x="191.2" y="467.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="194.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="192.0" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="192.3" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (105 samples, 0.89%)</title><rect x="192.6" y="611.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="192.6" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="192.6" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="192.6" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="192.6" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="192.6" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="192.6" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="192.7" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (101 samples, 0.85%)</title><rect x="193.0" y="595.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (9 samples, 0.08%)</title><rect x="193.0" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="193.3" y="563.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="193.3" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="193.3" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.05%)</title><rect x="193.3" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.05%)</title><rect x="193.3" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="193.5" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="193.5" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (92 samples, 0.78%)</title><rect x="193.9" y="579.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (92 samples, 0.78%)</title><rect x="193.9" y="563.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (19 samples, 0.16%)</title><rect x="194.2" y="547.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (19 samples, 0.16%)</title><rect x="194.2" y="531.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (19 samples, 0.16%)</title><rect x="194.2" y="515.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (17 samples, 0.14%)</title><rect x="194.4" y="499.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (16 samples, 0.14%)</title><rect x="194.5" y="483.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.5" y="494.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="194.6" y="467.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="197.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (12 samples, 0.10%)</title><rect x="194.9" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (12 samples, 0.10%)</title><rect x="194.9" y="451.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.9" y="462.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="195.0" y="435.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="198.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="195.4" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="195.4" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.4" y="430.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="195.6" y="403.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="198.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (70 samples, 0.59%)</title><rect x="196.1" y="547.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="196.5" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="196.5" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="196.5" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (62 samples, 0.52%)</title><rect x="196.9" y="531.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="197.0" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="197.0" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="197.0" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="197.0" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.0" y="478.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="197.0" y="451.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="200.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (56 samples, 0.47%)</title><rect x="197.5" y="515.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (56 samples, 0.47%)</title><rect x="197.5" y="499.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (8 samples, 0.07%)</title><rect x="197.5" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (8 samples, 0.07%)</title><rect x="197.5" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (8 samples, 0.07%)</title><rect x="197.5" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.5" y="462.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="197.5" y="435.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="200.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="197.8" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="197.9" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (48 samples, 0.41%)</title><rect x="198.3" y="483.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="198.3" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.04%)</title><rect x="198.3" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.04%)</title><rect x="198.3" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="198.3" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="198.3" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.3" y="414.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="198.4" y="387.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="201.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (43 samples, 0.36%)</title><rect x="198.8" y="467.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="199.0" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="199.0" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="199.0" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="199.0" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.0" y="414.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="199.0" y="387.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="202.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (38 samples, 0.32%)</title><rect x="199.3" y="451.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (38 samples, 0.32%)</title><rect x="199.3" y="435.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.3" y="446.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="199.4" y="419.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="202.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.03%)</title><rect x="199.8" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="199.9" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="199.9" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="199.9" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (27 samples, 0.23%)</title><rect x="200.4" y="419.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (26 samples, 0.22%)</title><rect x="200.5" y="403.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (26 samples, 0.22%)</title><rect x="200.5" y="387.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (26 samples, 0.22%)</title><rect x="200.5" y="371.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (26 samples, 0.22%)</title><rect x="200.5" y="355.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (26 samples, 0.22%)</title><rect x="200.5" y="339.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13 samples, 0.11%)</title><rect x="200.6" y="323.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (12 samples, 0.10%)</title><rect x="200.7" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (9 samples, 0.08%)</title><rect x="200.9" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.03%)</title><rect x="201.3" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (12 samples, 0.10%)</title><rect x="201.9" y="323.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (12 samples, 0.10%)</title><rect x="201.9" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.03%)</title><rect x="201.9" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.03%)</title><rect x="201.9" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (7 samples, 0.06%)</title><rect x="202.4" y="291.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (7 samples, 0.06%)</title><rect x="202.4" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.06%)</title><rect x="202.4" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="202.5" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.5" y="254.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="202.8" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="202.8" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="202.8" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.8" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="202.8" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.range (8,882 samples, 74.96%)</title><rect x="203.3" y="803.0" width="884.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.3" y="814.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.range</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (199 samples, 1.68%)</title><rect x="203.8" y="787.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (197 samples, 1.66%)</title><rect x="204.0" y="771.0" width="19.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (194 samples, 1.64%)</title><rect x="204.2" y="755.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (10 samples, 0.08%)</title><rect x="204.4" y="739.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooHigh (5 samples, 0.04%)</title><rect x="204.5" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.03%)</title><rect x="204.6" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="204.7" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="204.7" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (3 samples, 0.03%)</title><rect x="205.0" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="205.0" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (182 samples, 1.54%)</title><rect x="205.4" y="739.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (182 samples, 1.54%)</title><rect x="205.4" y="723.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.06%)</title><rect x="206.9" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.04%)</title><rect x="207.1" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.04%)</title><rect x="207.1" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.1" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.03%)</title><rect x="207.2" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (160 samples, 1.35%)</title><rect x="207.6" y="707.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (70 samples, 0.59%)</title><rect x="216.5" y="691.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (50 samples, 0.42%)</title><rect x="218.5" y="675.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (50 samples, 0.42%)</title><rect x="218.5" y="659.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.5" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (37 samples, 0.31%)</title><rect x="219.4" y="643.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (13 samples, 0.11%)</title><rect x="221.0" y="627.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.0" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (8 samples, 0.07%)</title><rect x="221.5" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.03%)</title><rect x="222.3" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.3" y="638.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.03%)</title><rect x="222.7" y="627.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="225.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.03%)</title><rect x="223.1" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.map (31 samples, 0.26%)</title><rect x="223.7" y="787.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (31 samples, 0.26%)</title><rect x="223.7" y="771.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (31 samples, 0.26%)</title><rect x="223.7" y="755.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (31 samples, 0.26%)</title><rect x="223.7" y="739.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (30 samples, 0.25%)</title><rect x="223.8" y="723.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (29 samples, 0.24%)</title><rect x="223.9" y="707.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.16%)</title><rect x="224.9" y="691.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.16%)</title><rect x="224.9" y="675.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.9" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (19 samples, 0.16%)</title><rect x="224.9" y="659.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (5 samples, 0.04%)</title><rect x="225.1" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.1" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.05%)</title><rect x="225.6" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.6" y="654.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.03%)</title><rect x="226.4" y="643.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="229.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges (8,644 samples, 72.95%)</title><rect x="226.9" y="787.0" width="860.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.9" y="798.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges</text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.37%)</title><rect x="228.6" y="771.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.6" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.14%)</title><rect x="230.2" y="755.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.range (11 samples, 0.09%)</title><rect x="231.9" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.next (25 samples, 0.21%)</title><rect x="233.0" y="771.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.advance (25 samples, 0.21%)</title><rect x="233.0" y="755.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Itr.nextNode (7 samples, 0.06%)</title><rect x="234.7" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.succ (7 samples, 0.06%)</title><rect x="234.7" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.iterator (4 samples, 0.03%)</title><rect x="235.5" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Itr.&lt;init&gt; (4 samples, 0.03%)</title><rect x="235.5" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.&lt;init&gt; (4 samples, 0.03%)</title><rect x="235.5" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.advance (4 samples, 0.03%)</title><rect x="235.5" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Itr.nextNode (3 samples, 0.03%)</title><rect x="235.5" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.succ (3 samples, 0.03%)</title><rect x="235.5" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.size (42 samples, 0.35%)</title><rect x="235.9" y="771.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (7 samples, 0.06%)</title><rect x="239.3" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (195 samples, 1.65%)</title><rect x="240.0" y="771.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.0" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (4 samples, 0.03%)</title><rect x="241.4" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (173 samples, 1.46%)</title><rect x="242.0" y="755.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.0" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (3 samples, 0.03%)</title><rect x="242.4" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.4" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.&lt;init&gt; (3 samples, 0.03%)</title><rect x="242.4" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (163 samples, 1.38%)</title><rect x="242.7" y="739.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (4 samples, 0.03%)</title><rect x="243.2" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (149 samples, 1.26%)</title><rect x="243.8" y="723.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (4 samples, 0.03%)</title><rect x="244.3" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.3" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (3 samples, 0.03%)</title><rect x="244.9" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (130 samples, 1.10%)</title><rect x="245.5" y="707.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.5" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (13 samples, 0.11%)</title><rect x="248.5" y="691.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.5" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.checkIndex (6 samples, 0.05%)</title><rect x="249.2" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.size (5 samples, 0.04%)</title><rect x="249.8" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.checkForComodification (5 samples, 0.04%)</title><rect x="249.8" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.8" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (3 samples, 0.03%)</title><rect x="250.3" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (52 samples, 0.44%)</title><rect x="250.8" y="691.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.8" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (3 samples, 0.03%)</title><rect x="252.1" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (9 samples, 0.08%)</title><rect x="252.4" y="675.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (3 samples, 0.03%)</title><rect x="253.4" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (11 samples, 0.09%)</title><rect x="253.7" y="675.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.size (5 samples, 0.04%)</title><rect x="254.1" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (5 samples, 0.04%)</title><rect x="254.8" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.&lt;init&gt; (7 samples, 0.06%)</title><rect x="255.3" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.03%)</title><rect x="255.6" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (4 samples, 0.03%)</title><rect x="256.0" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.&lt;init&gt; (4 samples, 0.03%)</title><rect x="256.0" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.03%)</title><rect x="256.0" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.&lt;init&gt; (21 samples, 0.18%)</title><rect x="256.4" y="691.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="258.7" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.range (8,317 samples, 70.19%)</title><rect x="259.5" y="771.0" width="828.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.5" y="782.0">ru/mail/polis/lsm/artemdrozdov/SSTable.range</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,220 samples, 44.05%)</title><rect x="264.5" y="755.0" width="519.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.5" y="766.0">java/nio/DirectByteBufferR.asReadOnlyBuffer</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,218 samples, 44.04%)</title><rect x="264.7" y="739.0" width="519.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.7" y="750.0">java/nio/DirectByteBufferR.duplicate</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.05%)</title><rect x="265.1" y="723.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="268.1" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.05%)</title><rect x="265.1" y="707.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="268.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.05%)</title><rect x="265.1" y="691.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="268.1" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5,208 samples, 43.95%)</title><rect x="265.7" y="723.0" width="518.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.7" y="734.0">java/nio/DirectByteBufferR.&lt;init&gt;</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5,208 samples, 43.95%)</title><rect x="265.7" y="707.0" width="518.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.7" y="718.0">java/nio/DirectByteBuffer.&lt;init&gt;</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2,167 samples, 18.29%)</title><rect x="568.6" y="691.0" width="215.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.6" y="702.0">java/nio/MappedByteBuffer.&lt;i..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2,159 samples, 18.22%)</title><rect x="569.4" y="675.0" width="215.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.4" y="686.0">java/nio/ByteBuffer.&lt;init&gt;</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2,146 samples, 18.11%)</title><rect x="570.7" y="659.0" width="213.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.7" y="670.0">java/nio/ByteBuffer.&lt;init&gt;</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2,100 samples, 17.72%)</title><rect x="575.3" y="643.0" width="209.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.3" y="654.0">java/nio/Buffer.&lt;init&gt;</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (32 samples, 0.27%)</title><rect x="651.8" y="627.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.mismatch (126 samples, 1.06%)</title><rect x="655.0" y="627.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.0" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (739 samples, 6.24%)</title><rect x="667.6" y="627.0" width="73.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.6" y="638.0">java/nio..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (697 samples, 5.88%)</title><rect x="671.8" y="611.0" width="69.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.8" y="622.0">java/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (590 samples, 4.98%)</title><rect x="682.4" y="595.0" width="58.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.4" y="606.0">java/n..</text>
</g>
<g>
<title>java/nio/Buffer.limit (471 samples, 3.98%)</title><rect x="694.3" y="579.0" width="46.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.3" y="590.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.mismatch (107 samples, 0.90%)</title><rect x="730.5" y="563.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.5" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (434 samples, 3.66%)</title><rect x="741.2" y="627.0" width="43.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.2" y="638.0">java..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (353 samples, 2.98%)</title><rect x="749.2" y="611.0" width="35.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.2" y="622.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (308 samples, 2.60%)</title><rect x="753.7" y="595.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.7" y="606.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.position (239 samples, 2.02%)</title><rect x="760.6" y="579.0" width="23.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.6" y="590.0">j..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.offset (3,046 samples, 25.71%)</title><rect x="784.4" y="755.0" width="303.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.4" y="766.0">ru/mail/polis/lsm/artemdrozdov/SSTable.of..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.03%)</title><rect x="797.0" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.mismatch (2,771 samples, 23.39%)</title><rect x="797.4" y="739.0" width="276.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.4" y="750.0">java/nio/ByteBuffer.mismatch</text>
</g>
<g>
<title>java/nio/Buffer.position (169 samples, 1.43%)</title><rect x="818.3" y="723.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.3" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2,392 samples, 20.19%)</title><rect x="835.2" y="723.0" width="238.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.2" y="734.0">java/nio/BufferMismatch.mismatch</text>
</g>
<g>
<title>java/nio/ByteBuffer.base (5 samples, 0.04%)</title><rect x="925.2" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.2" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (195 samples, 1.65%)</title><rect x="925.7" y="707.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (41 samples, 0.35%)</title><rect x="925.7" y="691.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkSegment (41 samples, 0.35%)</title><rect x="929.8" y="691.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.8" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (50 samples, 0.42%)</title><rect x="933.9" y="691.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="936.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (63 samples, 0.53%)</title><rect x="938.8" y="691.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="941.8" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (302 samples, 2.55%)</title><rect x="945.1" y="707.0" width="30.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="948.1" y="718.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (84 samples, 0.71%)</title><rect x="965.9" y="691.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkSegment (4 samples, 0.03%)</title><rect x="974.3" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="977.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (5 samples, 0.04%)</title><rect x="974.7" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.7" y="702.0"></text>
</g>
<g>
<title>vectorizedMismatch (986 samples, 8.32%)</title><rect x="975.2" y="707.0" width="98.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="978.2" y="718.0">vectorizedMi..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (125 samples, 1.05%)</title><rect x="1073.4" y="739.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.03%)</title><rect x="1079.7" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (12 samples, 0.10%)</title><rect x="1080.1" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1083.1" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (46 samples, 0.39%)</title><rect x="1081.3" y="723.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (18 samples, 0.15%)</title><rect x="1082.0" y="707.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (19 samples, 0.16%)</title><rect x="1083.9" y="707.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (3 samples, 0.03%)</title><rect x="1085.5" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.5" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.16%)</title><rect x="1085.8" y="739.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.8" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.16%)</title><rect x="1085.8" y="723.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1088.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.extractBytes (10 samples, 0.08%)</title><rect x="1087.8" y="803.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (9 samples, 0.08%)</title><rect x="1087.9" y="787.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.9" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.07%)</title><rect x="1088.0" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (7 samples, 0.06%)</title><rect x="1088.1" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.1" y="766.0"></text>
</g>
<g>
<title>unsafe_arraycopy (3 samples, 0.03%)</title><rect x="1088.5" y="739.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1091.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.put (49 samples, 0.41%)</title><rect x="1088.8" y="819.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.23%)</title><rect x="1088.9" y="803.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.23%)</title><rect x="1088.9" y="787.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.9" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.23%)</title><rect x="1088.9" y="771.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.23%)</title><rect x="1088.9" y="755.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1091.9" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.17%)</title><rect x="1089.0" y="739.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.08%)</title><rect x="1089.5" y="723.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.08%)</title><rect x="1089.5" y="707.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.06%)</title><rect x="1089.8" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO$1.hasNext (3 samples, 0.03%)</title><rect x="1090.1" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.04%)</title><rect x="1090.5" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.04%)</title><rect x="1090.5" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.5" y="718.0"></text>
</g>
<g>
<title>unsafe_arraycopy (3 samples, 0.03%)</title><rect x="1091.3" y="739.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1094.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (20 samples, 0.17%)</title><rect x="1091.6" y="803.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="1091.6" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.6" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1091.6" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.6" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1091.6" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1091.6" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.6" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1091.6" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.extractBytes (3 samples, 0.03%)</title><rect x="1091.7" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1092.0" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (13 samples, 0.11%)</title><rect x="1092.3" y="787.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (13 samples, 0.11%)</title><rect x="1092.3" y="771.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.11%)</title><rect x="1092.3" y="755.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.3" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.07%)</title><rect x="1092.3" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="1092.3" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="1092.3" y="707.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="1092.3" y="691.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (5 samples, 0.04%)</title><rect x="1092.5" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.5" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.04%)</title><rect x="1093.1" y="739.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1096.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (941 samples, 7.94%)</title><rect x="1093.7" y="931.0" width="93.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.7" y="942.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (10 samples, 0.08%)</title><rect x="1094.6" y="915.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (10 samples, 0.08%)</title><rect x="1094.6" y="899.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (10 samples, 0.08%)</title><rect x="1094.6" y="883.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (283 samples, 2.39%)</title><rect x="1095.6" y="915.0" width="28.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.6" y="926.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (280 samples, 2.36%)</title><rect x="1095.9" y="899.0" width="27.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.9" y="910.0">o..</text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.03%)</title><rect x="1097.4" y="883.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1100.4" y="894.0"></text>
</g>
<g>
<title>clock_gettime (12 samples, 0.10%)</title><rect x="1097.8" y="883.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1100.8" y="894.0"></text>
</g>
<g>
<title>epoll_wait (248 samples, 2.09%)</title><rect x="1099.1" y="883.0" width="24.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1102.1" y="894.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (189 samples, 1.60%)</title><rect x="1105.0" y="867.0" width="18.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1108.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.03%)</title><rect x="1105.0" y="851.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1108.0" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (185 samples, 1.56%)</title><rect x="1105.4" y="851.0" width="18.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1108.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (171 samples, 1.44%)</title><rect x="1105.4" y="835.0" width="17.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1108.4" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (169 samples, 1.43%)</title><rect x="1105.5" y="819.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.5" y="830.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.04%)</title><rect x="1105.8" y="803.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1108.8" y="814.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.04%)</title><rect x="1105.8" y="787.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1108.8" y="798.0"></text>
</g>
<g>
<title>__fget_files (5 samples, 0.04%)</title><rect x="1105.8" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.8" y="782.0"></text>
</g>
<g>
<title>__put_user_nocheck_4 (11 samples, 0.09%)</title><rect x="1106.4" y="803.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1109.4" y="814.0"></text>
</g>
<g>
<title>ep_poll (136 samples, 1.15%)</title><rect x="1107.5" y="803.0" width="13.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1110.5" y="814.0"></text>
</g>
<g>
<title>ep_done_scan (6 samples, 0.05%)</title><rect x="1109.8" y="787.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1112.8" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (56 samples, 0.47%)</title><rect x="1110.4" y="787.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1113.4" y="798.0"></text>
</g>
<g>
<title>sock_poll (41 samples, 0.35%)</title><rect x="1111.8" y="771.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1114.8" y="782.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.09%)</title><rect x="1114.7" y="755.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.7" y="766.0"></text>
</g>
<g>
<title>ep_start_scan (13 samples, 0.11%)</title><rect x="1116.0" y="787.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1119.0" y="798.0"></text>
</g>
<g>
<title>mutex_lock (12 samples, 0.10%)</title><rect x="1117.3" y="787.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1120.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (17 samples, 0.14%)</title><rect x="1118.5" y="787.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1121.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (15 samples, 0.13%)</title><rect x="1118.7" y="771.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1121.7" y="782.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.08%)</title><rect x="1119.3" y="755.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1122.3" y="766.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.06%)</title><rect x="1119.5" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1122.5" y="750.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.07%)</title><rect x="1120.3" y="787.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1123.3" y="798.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.03%)</title><rect x="1121.1" y="803.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1124.1" y="814.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.04%)</title><rect x="1121.5" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1124.5" y="814.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (14 samples, 0.12%)</title><rect x="1122.4" y="835.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (635 samples, 5.36%)</title><rect x="1123.8" y="915.0" width="63.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.8" y="926.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (631 samples, 5.33%)</title><rect x="1124.2" y="899.0" width="62.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.2" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (376 samples, 3.17%)</title><rect x="1124.3" y="883.0" width="37.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.3" y="894.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (150 samples, 1.27%)</title><rect x="1125.5" y="867.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.handleRequest (150 samples, 1.27%)</title><rect x="1125.5" y="851.0" width="14.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1128.5" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="1125.8" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.8" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, Thread*) (3 samples, 0.03%)</title><rect x="1125.8" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.8" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="1125.8" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1128.8" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.0] (3 samples, 0.03%)</title><rect x="1125.8" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1128.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (142 samples, 1.20%)</title><rect x="1126.3" y="835.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (142 samples, 1.20%)</title><rect x="1126.3" y="819.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (115 samples, 0.97%)</title><rect x="1126.4" y="803.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.03%)</title><rect x="1126.4" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.03%)</title><rect x="1126.4" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enqueue (3 samples, 0.03%)</title><rect x="1126.4" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (112 samples, 0.95%)</title><rect x="1126.7" y="787.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (112 samples, 0.95%)</title><rect x="1126.7" y="771.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (112 samples, 0.95%)</title><rect x="1126.7" y="755.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (112 samples, 0.95%)</title><rect x="1126.7" y="739.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (103 samples, 0.87%)</title><rect x="1127.6" y="723.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.18%)</title><rect x="1127.9" y="707.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1130.9" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.03%)</title><rect x="1128.3" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1131.3" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.05%)</title><rect x="1128.6" y="691.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.6" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="1129.3" y="691.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1132.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.04%)</title><rect x="1129.9" y="707.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1132.9" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (5 samples, 0.04%)</title><rect x="1129.9" y="691.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1132.9" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (72 samples, 0.61%)</title><rect x="1130.4" y="707.0" width="7.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1133.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.49%)</title><rect x="1131.8" y="691.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1134.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.47%)</title><rect x="1132.0" y="675.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1135.0" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (52 samples, 0.44%)</title><rect x="1132.0" y="659.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1135.0" y="670.0"></text>
</g>
<g>
<title>do_futex (49 samples, 0.41%)</title><rect x="1132.2" y="643.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1135.2" y="654.0"></text>
</g>
<g>
<title>futex_wake (47 samples, 0.40%)</title><rect x="1132.4" y="627.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1135.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (39 samples, 0.33%)</title><rect x="1133.2" y="611.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1136.2" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (38 samples, 0.32%)</title><rect x="1133.3" y="595.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1136.3" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (38 samples, 0.32%)</title><rect x="1133.3" y="579.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1136.3" y="590.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (3 samples, 0.03%)</title><rect x="1137.3" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1140.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (25 samples, 0.21%)</title><rect x="1137.9" y="803.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (25 samples, 0.21%)</title><rect x="1137.9" y="787.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (25 samples, 0.21%)</title><rect x="1137.9" y="771.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 0.21%)</title><rect x="1137.9" y="755.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 0.54%)</title><rect x="1140.4" y="867.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.4" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.03%)</title><rect x="1140.5" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1143.5" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.03%)</title><rect x="1140.5" y="835.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.5" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="1140.5" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1143.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.14%)</title><rect x="1140.9" y="851.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.9" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="1140.9" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.9" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.03%)</title><rect x="1141.0" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.08%)</title><rect x="1141.5" y="835.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.08%)</title><rect x="1141.5" y="819.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.08%)</title><rect x="1141.5" y="803.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="1142.1" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.25%)</title><rect x="1142.5" y="851.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 0.23%)</title><rect x="1142.8" y="835.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="1144.5" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1147.5" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.03%)</title><rect x="1144.5" y="803.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1145.0" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1145.0" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.03%)</title><rect x="1145.0" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.0" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="1145.0" y="771.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.0" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.03%)</title><rect x="1145.0" y="755.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="1145.0" y="739.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.0" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="1145.0" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (13 samples, 0.11%)</title><rect x="1145.5" y="851.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (16 samples, 0.14%)</title><rect x="1146.8" y="867.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.8" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="1146.8" y="851.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.8" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.03%)</title><rect x="1146.8" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.8" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="1146.9" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.10%)</title><rect x="1147.2" y="851.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.2" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.10%)</title><rect x="1147.2" y="835.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.2" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.03%)</title><rect x="1147.6" y="819.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1150.6" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.04%)</title><rect x="1147.9" y="819.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1150.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (103 samples, 0.87%)</title><rect x="1148.4" y="867.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.14%)</title><rect x="1155.9" y="851.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1158.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (17 samples, 0.14%)</title><rect x="1155.9" y="835.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.trim (10 samples, 0.08%)</title><rect x="1157.6" y="851.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.04%)</title><rect x="1158.0" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.26%)</title><rect x="1158.6" y="867.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.26%)</title><rect x="1158.6" y="851.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.6" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.08%)</title><rect x="1160.3" y="835.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.3" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.08%)</title><rect x="1160.3" y="819.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.3" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.06%)</title><rect x="1160.4" y="803.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.4" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="1160.7" y="787.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (254 samples, 2.14%)</title><rect x="1161.7" y="883.0" width="25.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.7" y="894.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (249 samples, 2.10%)</title><rect x="1162.2" y="867.0" width="24.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.2" y="878.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (45 samples, 0.38%)</title><rect x="1163.3" y="851.0" width="4.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1166.3" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.05%)</title><rect x="1163.6" y="835.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1166.6" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (4 samples, 0.03%)</title><rect x="1164.2" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.2" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.03%)</title><rect x="1164.6" y="835.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.03%)</title><rect x="1165.0" y="835.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.0" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (22 samples, 0.19%)</title><rect x="1165.5" y="835.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1168.5" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.03%)</title><rect x="1166.3" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.3" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.06%)</title><rect x="1167.0" y="819.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1170.0" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.04%)</title><rect x="1167.2" y="803.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.2" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.05%)</title><rect x="1168.0" y="851.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1171.0" y="862.0"></text>
</g>
<g>
<title>recv (185 samples, 1.56%)</title><rect x="1168.6" y="851.0" width="18.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1171.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (137 samples, 1.16%)</title><rect x="1173.4" y="835.0" width="13.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1176.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (137 samples, 1.16%)</title><rect x="1173.4" y="819.0" width="13.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1176.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (119 samples, 1.00%)</title><rect x="1173.8" y="803.0" width="11.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1176.8" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (115 samples, 0.97%)</title><rect x="1173.8" y="787.0" width="11.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1176.8" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (102 samples, 0.86%)</title><rect x="1174.1" y="771.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1177.1" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (73 samples, 0.62%)</title><rect x="1174.5" y="755.0" width="7.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1177.5" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (70 samples, 0.59%)</title><rect x="1174.8" y="739.0" width="6.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.03%)</title><rect x="1175.2" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1178.2" y="734.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="1175.6" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.6" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg_locked (57 samples, 0.48%)</title><rect x="1176.0" y="723.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1179.0" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.16%)</title><rect x="1177.2" y="707.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.2" y="718.0"></text>
</g>
<g>
<title>skb_release_all (16 samples, 0.14%)</title><rect x="1177.5" y="691.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.5" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (11 samples, 0.09%)</title><rect x="1177.9" y="675.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.9" y="686.0"></text>
</g>
<g>
<title>dst_release (10 samples, 0.08%)</title><rect x="1178.0" y="659.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1181.0" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (18 samples, 0.15%)</title><rect x="1179.1" y="707.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1182.1" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (17 samples, 0.14%)</title><rect x="1179.2" y="691.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.2" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (13 samples, 0.11%)</title><rect x="1179.6" y="675.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.6" y="686.0"></text>
</g>
<g>
<title>__check_object_size (9 samples, 0.08%)</title><rect x="1179.6" y="659.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.6" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.05%)</title><rect x="1179.9" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1182.9" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.03%)</title><rect x="1180.5" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.5" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.03%)</title><rect x="1180.5" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.5" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.04%)</title><rect x="1181.1" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1184.1" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.03%)</title><rect x="1181.2" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="1181.3" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (25 samples, 0.21%)</title><rect x="1181.7" y="755.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1184.7" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (19 samples, 0.16%)</title><rect x="1182.3" y="739.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.3" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (19 samples, 0.16%)</title><rect x="1182.3" y="723.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1185.3" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (12 samples, 0.10%)</title><rect x="1182.9" y="707.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1185.9" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (8 samples, 0.07%)</title><rect x="1183.3" y="691.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1186.3" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.08%)</title><rect x="1184.2" y="771.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1187.2" y="782.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="1184.3" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="1184.3" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.03%)</title><rect x="1184.3" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.05%)</title><rect x="1184.6" y="755.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1187.6" y="766.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (14 samples, 0.12%)</title><rect x="1185.6" y="803.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1188.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.03%)</title><rect x="1187.0" y="915.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.0" y="926.0"></text>
</g>
<g>
<title>start_thread (26 samples, 0.22%)</title><rect x="1187.4" y="931.0" width="2.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1190.4" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (26 samples, 0.22%)</title><rect x="1187.4" y="915.0" width="2.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (26 samples, 0.22%)</title><rect x="1187.4" y="899.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.4" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 0.09%)</title><rect x="1187.4" y="883.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="894.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (8 samples, 0.07%)</title><rect x="1187.4" y="867.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="878.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (5 samples, 0.04%)</title><rect x="1187.4" y="851.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.4" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.04%)</title><rect x="1187.4" y="835.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="846.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1187.9" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1187.9" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.03%)</title><rect x="1187.9" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1187.9" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (9 samples, 0.08%)</title><rect x="1188.5" y="883.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.5" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (9 samples, 0.08%)</title><rect x="1188.5" y="867.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.5" y="878.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (9 samples, 0.08%)</title><rect x="1188.5" y="851.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (9 samples, 0.08%)</title><rect x="1188.5" y="835.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (9 samples, 0.08%)</title><rect x="1188.5" y="819.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (4 samples, 0.03%)</title><rect x="1188.5" y="803.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.03%)</title><rect x="1188.9" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.04%)</title><rect x="1189.4" y="883.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.04%)</title><rect x="1189.4" y="867.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (3 samples, 0.03%)</title><rect x="1189.5" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.03%)</title><rect x="1189.5" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.03%)</title><rect x="1189.5" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.03%)</title><rect x="1189.5" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (3 samples, 0.03%)</title><rect x="1189.5" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
</g>
</svg>
