<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (110,275 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (36,728 samples, 33.31%)</title><rect x="10.0" y="803.0" width="393.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (36,728 samples, 33.31%)</title><rect x="10.0" y="787.0" width="393.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (36,728 samples, 33.31%)</title><rect x="10.0" y="771.0" width="393.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (53 samples, 0.05%)</title><rect x="10.0" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (53 samples, 0.05%)</title><rect x="10.0" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (50 samples, 0.05%)</title><rect x="10.0" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode (50 samples, 0.05%)</title><rect x="10.0" y="707.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl$$Lambda$89.0x0000000800bbe7d0.run (36,675 samples, 33.26%)</title><rect x="10.6" y="755.0" width="392.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.6" y="766.0">ru/mail/polis/service/medalexey/ServiceImpl$$Lambda$89..</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.lambda$handleRequest$0 (36,675 samples, 33.26%)</title><rect x="10.6" y="739.0" width="392.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.6" y="750.0">ru/mail/polis/service/medalexey/ServiceImpl.lambda$han..</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.handleRequestTask (36,675 samples, 33.26%)</title><rect x="10.6" y="723.0" width="392.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.6" y="734.0">ru/mail/polis/service/medalexey/ServiceImpl.handleRequ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (348 samples, 0.32%)</title><rect x="10.6" y="707.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (348 samples, 0.32%)</title><rect x="10.6" y="691.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (243 samples, 0.22%)</title><rect x="10.6" y="675.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (243 samples, 0.22%)</title><rect x="10.6" y="659.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.6" y="670.0"></text>
</g>
<g>
<title>byte[] (243 samples, 0.22%)</title><rect x="10.6" y="643.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (105 samples, 0.10%)</title><rect x="13.2" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.2" y="686.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (105 samples, 0.10%)</title><rect x="13.2" y="659.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="16.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (125 samples, 0.11%)</title><rect x="14.3" y="707.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (125 samples, 0.11%)</title><rect x="14.3" y="691.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (125 samples, 0.11%)</title><rect x="14.3" y="675.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (125 samples, 0.11%)</title><rect x="14.3" y="659.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.05%)</title><rect x="14.3" y="643.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="17.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.06%)</title><rect x="14.9" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.9" y="654.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.06%)</title><rect x="14.9" y="627.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="17.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (375 samples, 0.34%)</title><rect x="15.6" y="707.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (375 samples, 0.34%)</title><rect x="15.6" y="691.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (375 samples, 0.34%)</title><rect x="15.6" y="675.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String (305 samples, 0.28%)</title><rect x="15.6" y="659.0" width="3.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="18.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (70 samples, 0.06%)</title><rect x="18.9" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="670.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.06%)</title><rect x="18.9" y="643.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="21.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.entity (35,827 samples, 32.49%)</title><rect x="19.6" y="707.0" width="383.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.6" y="718.0">ru/mail/polis/service/medalexey/ServiceImpl.entity</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.get (35,827 samples, 32.49%)</title><rect x="19.6" y="691.0" width="383.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.6" y="702.0">ru/mail/polis/service/medalexey/ServiceImpl.get</text>
</g>
<g>
<title>java/lang/String.getBytes (89 samples, 0.08%)</title><rect x="19.6" y="675.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (89 samples, 0.08%)</title><rect x="19.6" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (89 samples, 0.08%)</title><rect x="19.6" y="643.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.6" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.08%)</title><rect x="19.6" y="627.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.6" y="638.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.08%)</title><rect x="19.6" y="611.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (154 samples, 0.14%)</title><rect x="20.6" y="675.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (154 samples, 0.14%)</title><rect x="20.6" y="659.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.6" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (154 samples, 0.14%)</title><rect x="20.6" y="643.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="23.6" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (62 samples, 0.06%)</title><rect x="22.2" y="675.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (242 samples, 0.22%)</title><rect x="22.9" y="675.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.9" y="686.0"></text>
</g>
<g>
<title>byte[] (115 samples, 0.10%)</title><rect x="22.9" y="659.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="25.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (79 samples, 0.07%)</title><rect x="24.1" y="659.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="27.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.04%)</title><rect x="25.0" y="659.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="28.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/DAO.nextKey (215 samples, 0.19%)</title><rect x="25.5" y="675.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (215 samples, 0.19%)</title><rect x="25.5" y="659.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.5" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (140 samples, 0.13%)</title><rect x="25.5" y="643.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="28.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (75 samples, 0.07%)</title><rect x="27.0" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.0" y="654.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.07%)</title><rect x="27.0" y="627.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="30.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getValue (158 samples, 0.14%)</title><rect x="27.8" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.8" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (158 samples, 0.14%)</title><rect x="27.8" y="659.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.8" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (158 samples, 0.14%)</title><rect x="27.8" y="643.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.8" y="654.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (158 samples, 0.14%)</title><rect x="27.8" y="627.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="30.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO$1.hasNext (1,008 samples, 0.91%)</title><rect x="29.5" y="675.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (1,008 samples, 0.91%)</title><rect x="29.5" y="659.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="643.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="627.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="611.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (1,008 samples, 0.91%)</title><rect x="29.5" y="595.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="579.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="563.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="547.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (1,008 samples, 0.91%)</title><rect x="29.5" y="531.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="515.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="499.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="483.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (1,008 samples, 0.91%)</title><rect x="29.5" y="467.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="451.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="435.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="419.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (1,008 samples, 0.91%)</title><rect x="29.5" y="403.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="387.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="371.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="355.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (1,008 samples, 0.91%)</title><rect x="29.5" y="339.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="323.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="307.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="291.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (1,008 samples, 0.91%)</title><rect x="29.5" y="275.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="259.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="243.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (1,008 samples, 0.91%)</title><rect x="29.5" y="227.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (1,008 samples, 0.91%)</title><rect x="29.5" y="211.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (284 samples, 0.26%)</title><rect x="29.5" y="195.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (284 samples, 0.26%)</title><rect x="29.5" y="179.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (284 samples, 0.26%)</title><rect x="29.5" y="163.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (284 samples, 0.26%)</title><rect x="29.5" y="147.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (284 samples, 0.26%)</title><rect x="29.5" y="131.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (284 samples, 0.26%)</title><rect x="29.5" y="115.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (204 samples, 0.18%)</title><rect x="29.5" y="99.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (106 samples, 0.10%)</title><rect x="29.5" y="83.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (106 samples, 0.10%)</title><rect x="29.5" y="67.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (106 samples, 0.10%)</title><rect x="29.5" y="51.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="32.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (83 samples, 0.08%)</title><rect x="30.8" y="83.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (83 samples, 0.08%)</title><rect x="30.8" y="67.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (83 samples, 0.08%)</title><rect x="30.8" y="51.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (83 samples, 0.08%)</title><rect x="30.8" y="35.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="33.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (80 samples, 0.07%)</title><rect x="31.7" y="99.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (80 samples, 0.07%)</title><rect x="31.7" y="83.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (80 samples, 0.07%)</title><rect x="31.7" y="67.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="34.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (724 samples, 0.66%)</title><rect x="32.5" y="195.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (724 samples, 0.66%)</title><rect x="32.5" y="179.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (463 samples, 0.42%)</title><rect x="32.5" y="163.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (211 samples, 0.19%)</title><rect x="32.5" y="147.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (211 samples, 0.19%)</title><rect x="32.5" y="131.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (211 samples, 0.19%)</title><rect x="32.5" y="115.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="35.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.Record (45 samples, 0.04%)</title><rect x="34.8" y="147.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="37.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (207 samples, 0.19%)</title><rect x="35.3" y="147.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (207 samples, 0.19%)</title><rect x="35.3" y="131.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (207 samples, 0.19%)</title><rect x="35.3" y="115.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.3" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (207 samples, 0.19%)</title><rect x="35.3" y="99.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="38.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (261 samples, 0.24%)</title><rect x="37.5" y="163.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (261 samples, 0.24%)</title><rect x="37.5" y="147.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (261 samples, 0.24%)</title><rect x="37.5" y="131.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="40.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.range (33,817 samples, 30.67%)</title><rect x="40.3" y="675.0" width="361.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="686.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.range</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (73 samples, 0.07%)</title><rect x="40.3" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (73 samples, 0.07%)</title><rect x="40.3" y="643.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="43.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (152 samples, 0.14%)</title><rect x="41.1" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (152 samples, 0.14%)</title><rect x="41.1" y="643.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="44.1" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (247 samples, 0.22%)</title><rect x="42.7" y="659.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="45.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.filterTombstones (100 samples, 0.09%)</title><rect x="45.3" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.LsmDAO$1 (39 samples, 0.04%)</title><rect x="45.3" y="643.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.3" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (61 samples, 0.06%)</title><rect x="45.7" y="643.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="48.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.map (243 samples, 0.22%)</title><rect x="46.4" y="659.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (243 samples, 0.22%)</title><rect x="46.4" y="643.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (243 samples, 0.22%)</title><rect x="46.4" y="627.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (243 samples, 0.22%)</title><rect x="46.4" y="611.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (243 samples, 0.22%)</title><rect x="46.4" y="595.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="49.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (107 samples, 0.10%)</title><rect x="49.0" y="659.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.0" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (107 samples, 0.10%)</title><rect x="49.0" y="643.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="52.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges (32,895 samples, 29.83%)</title><rect x="50.1" y="659.0" width="352.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.1" y="670.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRan..</text>
</g>
<g>
<title>java.util.ArrayList (55 samples, 0.05%)</title><rect x="50.1" y="643.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="53.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (697 samples, 0.63%)</title><rect x="50.7" y="643.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (697 samples, 0.63%)</title><rect x="50.7" y="627.0" width="7.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="53.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (17,397 samples, 15.78%)</title><rect x="58.2" y="643.0" width="186.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.2" y="654.0">ru/mail/polis/lsm/artemd..</text>
</g>
<g>
<title>java/util/ArrayList.subList (149 samples, 0.14%)</title><rect x="58.2" y="627.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.2" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (149 samples, 0.14%)</title><rect x="58.2" y="611.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="61.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (112 samples, 0.10%)</title><rect x="59.8" y="627.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="62.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (17,086 samples, 15.49%)</title><rect x="61.0" y="627.0" width="182.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.0" y="638.0">ru/mail/polis/lsm/artemd..</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (305 samples, 0.28%)</title><rect x="61.0" y="611.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.0" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (305 samples, 0.28%)</title><rect x="61.0" y="595.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="64.0" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (220 samples, 0.20%)</title><rect x="64.2" y="611.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="67.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (16,433 samples, 14.90%)</title><rect x="66.6" y="611.0" width="175.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.6" y="622.0">ru/mail/polis/lsm/artem..</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (617 samples, 0.56%)</title><rect x="66.6" y="595.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.6" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (617 samples, 0.56%)</title><rect x="66.6" y="579.0" width="6.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.6" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (469 samples, 0.43%)</title><rect x="73.2" y="595.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="76.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (15,134 samples, 13.72%)</title><rect x="78.2" y="595.0" width="162.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.2" y="606.0">ru/mail/polis/lsm/art..</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (1,243 samples, 1.13%)</title><rect x="78.2" y="579.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.2" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (1,243 samples, 1.13%)</title><rect x="78.2" y="563.0" width="13.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="81.2" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (927 samples, 0.84%)</title><rect x="91.5" y="579.0" width="9.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="94.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (12,428 samples, 11.27%)</title><rect x="101.4" y="579.0" width="133.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.4" y="590.0">ru/mail/polis/ls..</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (2,500 samples, 2.27%)</title><rect x="101.4" y="563.0" width="26.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.4" y="574.0">j..</text>
</g>
<g>
<title>java.util.ArrayList$SubList (2,500 samples, 2.27%)</title><rect x="101.4" y="547.0" width="26.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="104.4" y="558.0">j..</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (1,893 samples, 1.72%)</title><rect x="128.2" y="563.0" width="20.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="131.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (7,072 samples, 6.41%)</title><rect x="148.4" y="563.0" width="75.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.4" y="574.0">ru/mail/..</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (625 samples, 0.57%)</title><rect x="148.4" y="547.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (625 samples, 0.57%)</title><rect x="148.4" y="531.0" width="6.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="151.4" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (3,772 samples, 3.42%)</title><rect x="155.1" y="547.0" width="40.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="158.1" y="558.0">ru...</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (692 samples, 0.63%)</title><rect x="195.5" y="547.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.5" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (467 samples, 0.42%)</title><rect x="195.5" y="531.0" width="5.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="198.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (225 samples, 0.20%)</title><rect x="200.5" y="531.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.5" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (225 samples, 0.20%)</title><rect x="200.5" y="515.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="203.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (1,983 samples, 1.80%)</title><rect x="202.9" y="547.0" width="21.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.9" y="558.0">r..</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (1,983 samples, 1.80%)</title><rect x="202.9" y="531.0" width="21.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="205.9" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (963 samples, 0.87%)</title><rect x="224.1" y="563.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.1" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (963 samples, 0.87%)</title><rect x="224.1" y="547.0" width="10.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="227.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (536 samples, 0.49%)</title><rect x="234.4" y="579.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.4" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (536 samples, 0.49%)</title><rect x="234.4" y="563.0" width="5.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="237.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (213 samples, 0.19%)</title><rect x="240.2" y="595.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.2" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (213 samples, 0.19%)</title><rect x="240.2" y="579.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="243.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (128 samples, 0.12%)</title><rect x="242.4" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (128 samples, 0.12%)</title><rect x="242.4" y="595.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="245.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (50 samples, 0.05%)</title><rect x="243.8" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.8" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (50 samples, 0.05%)</title><rect x="243.8" y="611.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="246.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.range (14,746 samples, 13.37%)</title><rect x="244.3" y="643.0" width="157.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.3" y="654.0">ru/mail/polis/lsm/ar..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10,338 samples, 9.37%)</title><rect x="244.3" y="627.0" width="110.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.3" y="638.0">java/nio/Dire..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10,338 samples, 9.37%)</title><rect x="244.3" y="611.0" width="110.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.3" y="622.0">java/nio/Dire..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (10,338 samples, 9.37%)</title><rect x="244.3" y="595.0" width="110.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="247.3" y="606.0">java.nio.Dire..</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.RangeIterator (4,408 samples, 4.00%)</title><rect x="355.0" y="627.0" width="47.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="358.0" y="638.0">ru.m..</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.extractBytes (82 samples, 0.07%)</title><rect x="402.1" y="675.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.1" y="686.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.07%)</title><rect x="402.1" y="659.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="405.1" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (73,547 samples, 66.69%)</title><rect x="403.0" y="803.0" width="787.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.0" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,411 samples, 2.19%)</title><rect x="403.0" y="787.0" width="25.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.0" y="798.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,411 samples, 2.19%)</title><rect x="403.0" y="771.0" width="25.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="406.0" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (71,136 samples, 64.51%)</title><rect x="428.8" y="787.0" width="761.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.8" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (71,136 samples, 64.51%)</title><rect x="428.8" y="771.0" width="761.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.8" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (71,136 samples, 64.51%)</title><rect x="428.8" y="755.0" width="761.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.8" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,341 samples, 4.84%)</title><rect x="428.8" y="739.0" width="57.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="431.8" y="750.0">one/ni..</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.handleRequest (5,341 samples, 4.84%)</title><rect x="428.8" y="723.0" width="57.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.8" y="734.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,356 samples, 2.14%)</title><rect x="428.8" y="707.0" width="25.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.8" y="718.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (2,356 samples, 2.14%)</title><rect x="428.8" y="691.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.8" y="702.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (2,356 samples, 2.14%)</title><rect x="428.8" y="675.0" width="25.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.8" y="686.0">j..</text>
</g>
<g>
<title>ru.mail.polis.service.medalexey.ServiceImpl$$Lambda$89+0x0000000800bbe7d0 (2,356 samples, 2.14%)</title><rect x="428.8" y="659.0" width="25.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="431.8" y="670.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,985 samples, 2.71%)</title><rect x="454.0" y="707.0" width="32.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.0" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,985 samples, 2.71%)</title><rect x="454.0" y="691.0" width="32.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.0" y="702.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,985 samples, 2.71%)</title><rect x="454.0" y="675.0" width="32.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="457.0" y="686.0">ja..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30,323 samples, 27.50%)</title><rect x="486.0" y="739.0" width="324.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.0" y="750.0">one/nio/http/HttpSession.parseRequest</text>
</g>
<g>
<title>one.nio.http.Request (4,593 samples, 4.17%)</title><rect x="486.0" y="723.0" width="49.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="489.0" y="734.0">one.n..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11,627 samples, 10.54%)</title><rect x="535.1" y="723.0" width="124.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.1" y="734.0">one/nio/http/Re..</text>
</g>
<g>
<title>java.lang.String[] (11,627 samples, 10.54%)</title><rect x="535.1" y="707.0" width="124.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="538.1" y="718.0">java.lang.Strin..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (14,103 samples, 12.79%)</title><rect x="659.5" y="723.0" width="150.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.5" y="734.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (14,103 samples, 12.79%)</title><rect x="659.5" y="707.0" width="150.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.5" y="718.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>char[] (7,529 samples, 6.83%)</title><rect x="659.5" y="691.0" width="80.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="662.5" y="702.0">char[]</text>
</g>
<g>
<title>java.lang.String (2,664 samples, 2.42%)</title><rect x="740.1" y="691.0" width="28.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="743.1" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,910 samples, 3.55%)</title><rect x="768.6" y="691.0" width="41.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.6" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,910 samples, 3.55%)</title><rect x="768.6" y="675.0" width="41.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.6" y="686.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,910 samples, 3.55%)</title><rect x="768.6" y="659.0" width="41.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.6" y="670.0">jav..</text>
</g>
<g>
<title>byte[] (3,910 samples, 3.55%)</title><rect x="768.6" y="643.0" width="41.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="771.6" y="654.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3,088 samples, 2.80%)</title><rect x="810.4" y="739.0" width="33.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.4" y="750.0">on..</text>
</g>
<g>
<title>byte[] (3,088 samples, 2.80%)</title><rect x="810.4" y="723.0" width="33.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="813.4" y="734.0">by..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5,303 samples, 4.81%)</title><rect x="843.5" y="739.0" width="56.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.5" y="750.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Request.trim (5,303 samples, 4.81%)</title><rect x="843.5" y="723.0" width="56.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.5" y="734.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.substring (5,303 samples, 4.81%)</title><rect x="843.5" y="707.0" width="56.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.5" y="718.0">java/l..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,303 samples, 4.81%)</title><rect x="843.5" y="691.0" width="56.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.5" y="702.0">java/l..</text>
</g>
<g>
<title>java.lang.String (2,383 samples, 2.16%)</title><rect x="843.5" y="675.0" width="25.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="846.5" y="686.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,920 samples, 2.65%)</title><rect x="869.0" y="675.0" width="31.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.0" y="686.0">ja..</text>
</g>
<g>
<title>byte[] (2,920 samples, 2.65%)</title><rect x="869.0" y="659.0" width="31.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="872.0" y="670.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (27,081 samples, 24.56%)</title><rect x="900.2" y="739.0" width="289.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.2" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (27,081 samples, 24.56%)</title><rect x="900.2" y="723.0" width="289.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.2" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (14,908 samples, 13.52%)</title><rect x="900.2" y="707.0" width="159.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="903.2" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (3,694 samples, 3.35%)</title><rect x="1059.7" y="707.0" width="39.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1062.7" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,479 samples, 7.69%)</title><rect x="1099.3" y="707.0" width="90.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.3" y="718.0">java/lang/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,479 samples, 7.69%)</title><rect x="1099.3" y="691.0" width="90.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.3" y="702.0">java/lang/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8,479 samples, 7.69%)</title><rect x="1099.3" y="675.0" width="90.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.3" y="686.0">java/lang/..</text>
</g>
<g>
<title>byte[] (8,479 samples, 7.69%)</title><rect x="1099.3" y="659.0" width="90.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1102.3" y="670.0">byte[]</text>
</g>
</g>
</svg>
