<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (9,356 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="10.1" y="931.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.1" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.07%)</title><rect x="10.8" y="931.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.8" y="942.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.06%)</title><rect x="10.9" y="915.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.9" y="926.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.05%)</title><rect x="11.0" y="899.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="14.0" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,246 samples, 98.82%)</title><rect x="11.9" y="931.0" width="1166.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.9" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.10%)</title><rect x="12.5" y="915.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.10%)</title><rect x="12.5" y="899.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.02%)</title><rect x="13.4" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (4 samples, 0.04%)</title><rect x="13.7" y="915.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (300 samples, 3.21%)</title><rect x="14.2" y="915.0" width="37.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.2" y="926.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (9 samples, 0.10%)</title><rect x="14.5" y="899.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (9 samples, 0.10%)</title><rect x="14.5" y="883.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (288 samples, 3.08%)</title><rect x="15.7" y="899.0" width="36.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.7" y="910.0">one..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.07%)</title><rect x="17.3" y="883.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="20.3" y="894.0"></text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (2 samples, 0.02%)</title><rect x="18.2" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.2" y="894.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_slow(JavaThread*) (2 samples, 0.02%)</title><rect x="18.2" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.2" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (2 samples, 0.02%)</title><rect x="18.2" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.2" y="862.0"></text>
</g>
<g>
<title>syscall (2 samples, 0.02%)</title><rect x="18.2" y="835.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="21.2" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="18.2" y="819.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="21.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="18.2" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="21.2" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (10 samples, 0.11%)</title><rect x="18.5" y="883.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="21.5" y="894.0"></text>
</g>
<g>
<title>clock_gettime (12 samples, 0.13%)</title><rect x="19.8" y="883.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="22.8" y="894.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="21.1" y="867.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="24.1" y="878.0"></text>
</g>
<g>
<title>epoll_wait (243 samples, 2.60%)</title><rect x="21.4" y="883.0" width="30.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="24.4" y="894.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (181 samples, 1.93%)</title><rect x="29.2" y="867.0" width="22.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="32.2" y="878.0">e..</text>
</g>
<g>
<title>do_syscall_64 (179 samples, 1.91%)</title><rect x="29.3" y="851.0" width="22.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="32.3" y="862.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (167 samples, 1.78%)</title><rect x="29.4" y="835.0" width="21.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="32.4" y="846.0">_..</text>
</g>
<g>
<title>do_epoll_wait (166 samples, 1.77%)</title><rect x="29.4" y="819.0" width="21.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="32.4" y="830.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="29.4" y="803.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.4" y="814.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="29.4" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="32.4" y="798.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.03%)</title><rect x="29.4" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.4" y="782.0"></text>
</g>
<g>
<title>__put_user_nocheck_4 (8 samples, 0.09%)</title><rect x="29.9" y="803.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="32.9" y="814.0"></text>
</g>
<g>
<title>ep_poll (142 samples, 1.52%)</title><rect x="31.2" y="803.0" width="17.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.2" y="814.0"></text>
</g>
<g>
<title>ep_done_scan (5 samples, 0.05%)</title><rect x="34.0" y="787.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.0" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (38 samples, 0.41%)</title><rect x="34.6" y="787.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="37.6" y="798.0"></text>
</g>
<g>
<title>sock_poll (28 samples, 0.30%)</title><rect x="35.6" y="771.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="38.6" y="782.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.12%)</title><rect x="37.6" y="755.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="40.6" y="766.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.02%)</title><rect x="39.1" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="42.1" y="782.0"></text>
</g>
<g>
<title>ep_start_scan (14 samples, 0.15%)</title><rect x="39.4" y="787.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="42.4" y="798.0"></text>
</g>
<g>
<title>mutex_lock (17 samples, 0.18%)</title><rect x="41.2" y="787.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="44.2" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (40 samples, 0.43%)</title><rect x="43.3" y="787.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="46.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (40 samples, 0.43%)</title><rect x="43.3" y="771.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.3" y="782.0"></text>
</g>
<g>
<title>schedule (34 samples, 0.36%)</title><rect x="44.1" y="755.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="47.1" y="766.0"></text>
</g>
<g>
<title>__schedule (28 samples, 0.30%)</title><rect x="44.8" y="739.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="47.8" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.20%)</title><rect x="45.9" y="723.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="48.9" y="734.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.05%)</title><rect x="48.5" y="787.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="51.5" y="798.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.04%)</title><rect x="49.1" y="803.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="52.1" y="814.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.04%)</title><rect x="49.6" y="803.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.6" y="814.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.02%)</title><rect x="50.1" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="53.1" y="814.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (11 samples, 0.12%)</title><rect x="50.5" y="835.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,928 samples, 95.43%)</title><rect x="52.0" y="915.0" width="1126.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.0" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,923 samples, 95.37%)</title><rect x="52.6" y="899.0" width="1125.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.6" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,572 samples, 91.62%)</title><rect x="53.4" y="883.0" width="1081.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.4" y="894.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.05%)</title><rect x="55.9" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8,406 samples, 89.85%)</title><rect x="56.5" y="867.0" width="1060.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.5" y="878.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8,406 samples, 89.85%)</title><rect x="56.5" y="851.0" width="1060.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.5" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (8,392 samples, 89.70%)</title><rect x="56.5" y="835.0" width="1058.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.5" y="846.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,381 samples, 14.76%)</title><rect x="56.7" y="819.0" width="174.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.7" y="830.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,353 samples, 14.46%)</title><rect x="57.9" y="803.0" width="170.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.9" y="814.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (37 samples, 0.40%)</title><rect x="57.9" y="787.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.9" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.05%)</title><rect x="59.3" y="771.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="62.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.22%)</title><rect x="59.9" y="771.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.07%)</title><rect x="59.9" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (6 samples, 0.06%)</title><rect x="60.1" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.02%)</title><rect x="60.8" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.07%)</title><rect x="61.1" y="755.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="61.7" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.02%)</title><rect x="61.7" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="62.0" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="62.0" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="62.0" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,316 samples, 14.07%)</title><rect x="62.6" y="787.0" width="166.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.6" y="798.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,315 samples, 14.06%)</title><rect x="62.7" y="771.0" width="165.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.7" y="782.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,309 samples, 13.99%)</title><rect x="63.0" y="755.0" width="165.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.0" y="766.0">one/nio/net/Session$A..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,306 samples, 13.96%)</title><rect x="63.3" y="739.0" width="164.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.3" y="750.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (42 samples, 0.45%)</title><rect x="64.9" y="723.0" width="5.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="67.9" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.07%)</title><rect x="66.1" y="707.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="69.1" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (4 samples, 0.04%)</title><rect x="67.0" y="707.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="70.0" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.03%)</title><rect x="67.5" y="707.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="70.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="67.9" y="707.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (15 samples, 0.16%)</title><rect x="68.1" y="707.0" width="1.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="71.1" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="68.8" y="691.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="71.8" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.09%)</title><rect x="69.0" y="691.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="72.0" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.03%)</title><rect x="69.7" y="675.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="72.7" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.04%)</title><rect x="70.2" y="723.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="73.2" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.02%)</title><rect x="70.7" y="723.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="73.7" y="734.0"></text>
</g>
<g>
<title>__send (1,243 samples, 13.29%)</title><rect x="70.9" y="723.0" width="156.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="73.9" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,192 samples, 12.74%)</title><rect x="77.3" y="707.0" width="150.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="80.3" y="718.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>do_syscall_64 (1,189 samples, 12.71%)</title><rect x="77.6" y="691.0" width="150.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.6" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,161 samples, 12.41%)</title><rect x="78.0" y="675.0" width="146.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.0" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,156 samples, 12.36%)</title><rect x="78.0" y="659.0" width="145.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.0" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,136 samples, 12.14%)</title><rect x="78.7" y="643.0" width="143.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="81.7" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.02%)</title><rect x="79.1" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="82.1" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,106 samples, 11.82%)</title><rect x="79.4" y="627.0" width="139.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.4" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,099 samples, 11.75%)</title><rect x="80.3" y="611.0" width="138.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="83.3" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.06%)</title><rect x="80.4" y="595.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.02%)</title><rect x="81.1" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="84.1" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="81.4" y="595.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="84.4" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.02%)</title><rect x="81.6" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="84.6" y="606.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.04%)</title><rect x="82.1" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,077 samples, 11.51%)</title><rect x="82.8" y="595.0" width="135.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.8" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.06%)</title><rect x="84.8" y="579.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.8" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.04%)</title><rect x="85.0" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="88.0" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.07%)</title><rect x="85.7" y="579.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="88.7" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.04%)</title><rect x="85.8" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.8" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="86.3" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.3" y="574.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (3 samples, 0.03%)</title><rect x="86.8" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="89.8" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (9 samples, 0.10%)</title><rect x="87.2" y="579.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.2" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (8 samples, 0.09%)</title><rect x="87.3" y="563.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.3" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (50 samples, 0.53%)</title><rect x="88.3" y="579.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (46 samples, 0.49%)</title><rect x="88.6" y="563.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="91.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (13 samples, 0.14%)</title><rect x="89.5" y="547.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="92.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.11%)</title><rect x="89.5" y="531.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="92.5" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.02%)</title><rect x="90.3" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="93.3" y="526.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.04%)</title><rect x="91.1" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.1" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.12%)</title><rect x="91.6" y="547.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.6" y="558.0"></text>
</g>
<g>
<title>ksize (9 samples, 0.10%)</title><rect x="93.0" y="547.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.0" y="558.0"></text>
</g>
<g>
<title>__ksize (9 samples, 0.10%)</title><rect x="93.0" y="531.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="96.0" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="94.4" y="563.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.4" y="574.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.05%)</title><rect x="94.6" y="579.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.6" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.02%)</title><rect x="95.0" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.0" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.02%)</title><rect x="95.3" y="579.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="98.3" y="590.0"></text>
</g>
<g>
<title>tcp_push (950 samples, 10.15%)</title><rect x="95.5" y="579.0" width="119.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="98.5" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (948 samples, 10.13%)</title><rect x="95.6" y="563.0" width="119.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.6" y="574.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_mtu_probe (4 samples, 0.04%)</title><rect x="96.3" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="99.3" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (938 samples, 10.03%)</title><rect x="96.9" y="547.0" width="118.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="99.9" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (891 samples, 9.52%)</title><rect x="98.8" y="531.0" width="112.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="101.8" y="542.0">__tcp_transmit..</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.03%)</title><rect x="102.1" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="105.1" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.02%)</title><rect x="102.4" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.4" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (844 samples, 9.02%)</title><rect x="102.8" y="515.0" width="106.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="105.8" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (839 samples, 8.97%)</title><rect x="102.8" y="499.0" width="105.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="105.8" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.03%)</title><rect x="103.6" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.6" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.03%)</title><rect x="103.6" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.6" y="478.0"></text>
</g>
<g>
<title>ip_local_out (825 samples, 8.82%)</title><rect x="104.0" y="483.0" width="104.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="107.0" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (136 samples, 1.45%)</title><rect x="104.2" y="467.0" width="17.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="107.2" y="478.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.02%)</title><rect x="104.5" y="451.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="107.5" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.06%)</title><rect x="104.7" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="107.7" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.02%)</title><rect x="105.5" y="451.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.5" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (6 samples, 0.06%)</title><rect x="105.7" y="451.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (114 samples, 1.22%)</title><rect x="106.5" y="451.0" width="14.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.5" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (22 samples, 0.24%)</title><rect x="106.9" y="435.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="109.9" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (22 samples, 0.24%)</title><rect x="106.9" y="419.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="109.9" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (78 samples, 0.83%)</title><rect x="109.8" y="435.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.8" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.02%)</title><rect x="109.8" y="419.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.8" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.02%)</title><rect x="110.0" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="113.0" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (69 samples, 0.74%)</title><rect x="110.4" y="419.0" width="8.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.4" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (15 samples, 0.16%)</title><rect x="111.7" y="403.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.7" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (4 samples, 0.04%)</title><rect x="113.5" y="403.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="114.1" y="403.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="117.1" y="414.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (4 samples, 0.04%)</title><rect x="114.3" y="403.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="117.3" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (5 samples, 0.05%)</title><rect x="114.8" y="403.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.8" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (23 samples, 0.25%)</title><rect x="115.4" y="403.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.4" y="414.0"></text>
</g>
<g>
<title>nf_ct_acct_add?[nf_conntrack] (2 samples, 0.02%)</title><rect x="117.2" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.2" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.03%)</title><rect x="117.5" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="120.5" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (4 samples, 0.04%)</title><rect x="117.8" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="120.8" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.03%)</title><rect x="118.0" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="121.0" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.04%)</title><rect x="118.3" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="121.3" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.02%)</title><rect x="118.8" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="121.8" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (3 samples, 0.03%)</title><rect x="119.2" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.2" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="119.6" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (7 samples, 0.07%)</title><rect x="120.0" y="435.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="123.0" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="120.1" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="120.5" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="123.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.02%)</title><rect x="120.6" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="123.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (4 samples, 0.04%)</title><rect x="120.9" y="451.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="123.9" y="462.0"></text>
</g>
<g>
<title>ip_output (682 samples, 7.29%)</title><rect x="121.5" y="467.0" width="86.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="124.5" y="478.0">ip_output</text>
</g>
<g>
<title>apparmor_ipv4_postroute (5 samples, 0.05%)</title><rect x="121.9" y="451.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="124.9" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (655 samples, 7.00%)</title><rect x="122.5" y="451.0" width="82.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="125.5" y="462.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (10 samples, 0.11%)</title><rect x="123.0" y="435.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.0" y="446.0"></text>
</g>
<g>
<title>migrate_enable (2 samples, 0.02%)</title><rect x="124.0" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="127.0" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (637 samples, 6.81%)</title><rect x="124.3" y="435.0" width="80.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="127.3" y="446.0">__ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (631 samples, 6.74%)</title><rect x="125.0" y="419.0" width="79.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="128.0" y="430.0">ip_finish..</text>
</g>
<g>
<title>__local_bh_enable_ip (557 samples, 5.95%)</title><rect x="126.4" y="403.0" width="70.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="129.4" y="414.0">__local_..</text>
</g>
<g>
<title>do_softirq (557 samples, 5.95%)</title><rect x="126.4" y="387.0" width="70.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="129.4" y="398.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (550 samples, 5.88%)</title><rect x="127.3" y="371.0" width="69.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="130.3" y="382.0">do_soft..</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (550 samples, 5.88%)</title><rect x="127.3" y="355.0" width="69.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.3" y="366.0">asm_cal..</text>
</g>
<g>
<title>__softirqentry_text_start (548 samples, 5.86%)</title><rect x="127.3" y="339.0" width="69.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.3" y="350.0">__softi..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.02%)</title><rect x="129.9" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="132.9" y="334.0"></text>
</g>
<g>
<title>net_rx_action (522 samples, 5.58%)</title><rect x="130.2" y="323.0" width="65.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="133.2" y="334.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (516 samples, 5.52%)</title><rect x="131.0" y="307.0" width="65.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.0" y="318.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (507 samples, 5.42%)</title><rect x="131.6" y="291.0" width="63.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="134.6" y="302.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (504 samples, 5.39%)</title><rect x="131.7" y="275.0" width="63.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="134.7" y="286.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 0.11%)</title><rect x="132.2" y="259.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv (488 samples, 5.22%)</title><rect x="133.5" y="259.0" width="61.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="136.5" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.02%)</title><rect x="134.1" y="243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.03%)</title><rect x="134.4" y="243.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="137.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (457 samples, 4.88%)</title><rect x="134.7" y="243.0" width="57.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="137.7" y="254.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (450 samples, 4.81%)</title><rect x="135.1" y="227.0" width="56.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="138.1" y="238.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (430 samples, 4.60%)</title><rect x="135.5" y="211.0" width="54.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.5" y="222.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (430 samples, 4.60%)</title><rect x="135.5" y="195.0" width="54.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="138.5" y="206.0">ip_pr..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.03%)</title><rect x="136.4" y="179.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.4" y="190.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="136.8" y="179.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="139.8" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.02%)</title><rect x="137.0" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (415 samples, 4.44%)</title><rect x="137.4" y="179.0" width="52.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="140.4" y="190.0">tcp_v..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="138.0" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="141.0" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.10%)</title><rect x="138.3" y="163.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="141.3" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="139.5" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="142.5" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (16 samples, 0.17%)</title><rect x="139.8" y="163.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="142.8" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.06%)</title><rect x="140.3" y="147.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="143.3" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.04%)</title><rect x="141.0" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="144.0" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="141.5" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.5" y="158.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.03%)</title><rect x="141.8" y="163.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="144.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (374 samples, 4.00%)</title><rect x="142.3" y="163.0" width="47.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="145.3" y="174.0">tcp_..</text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.07%)</title><rect x="142.7" y="147.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (363 samples, 3.88%)</title><rect x="143.7" y="147.0" width="45.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="146.7" y="158.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (17 samples, 0.18%)</title><rect x="145.3" y="131.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="148.3" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (16 samples, 0.17%)</title><rect x="145.5" y="115.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="148.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="145.7" y="99.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="148.7" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.13%)</title><rect x="146.0" y="99.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="149.0" y="110.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.11%)</title><rect x="146.2" y="83.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="149.2" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.07%)</title><rect x="146.6" y="67.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="149.6" y="78.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="147.6" y="131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="150.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack (112 samples, 1.20%)</title><rect x="148.1" y="131.0" width="14.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="151.1" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.02%)</title><rect x="151.0" y="115.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="154.0" y="126.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.02%)</title><rect x="151.5" y="115.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.5" y="126.0"></text>
</g>
<g>
<title>tcp_ack_tstamp (2 samples, 0.02%)</title><rect x="151.8" y="115.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.8" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.03%)</title><rect x="152.0" y="115.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.0" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (3 samples, 0.03%)</title><rect x="152.4" y="115.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="155.4" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (67 samples, 0.72%)</title><rect x="152.8" y="115.0" width="8.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="155.8" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (36 samples, 0.38%)</title><rect x="154.9" y="99.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="157.9" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.05%)</title><rect x="154.9" y="83.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="157.9" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.05%)</title><rect x="154.9" y="67.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="155.2" y="51.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="158.2" y="62.0"></text>
</g>
<g>
<title>skb_release_all (29 samples, 0.31%)</title><rect x="155.5" y="83.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="158.5" y="94.0"></text>
</g>
<g>
<title>skb_release_data (28 samples, 0.30%)</title><rect x="155.5" y="67.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="158.5" y="78.0"></text>
</g>
<g>
<title>skb_free_head (17 samples, 0.18%)</title><rect x="156.9" y="51.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.9" y="62.0"></text>
</g>
<g>
<title>kfree (16 samples, 0.17%)</title><rect x="157.1" y="35.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="160.1" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="159.2" y="83.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="162.2" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (10 samples, 0.11%)</title><rect x="159.8" y="99.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.8" y="110.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.02%)</title><rect x="161.2" y="115.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="164.2" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.02%)</title><rect x="161.7" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (192 samples, 2.05%)</title><rect x="162.4" y="131.0" width="24.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.4" y="142.0">t..</text>
</g>
<g>
<title>sock_def_readable (191 samples, 2.04%)</title><rect x="162.5" y="115.0" width="24.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="165.5" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (188 samples, 2.01%)</title><rect x="162.9" y="99.0" width="23.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="165.9" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (188 samples, 2.01%)</title><rect x="162.9" y="83.0" width="23.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="165.9" y="94.0">_..</text>
</g>
<g>
<title>__lock_text_start (188 samples, 2.01%)</title><rect x="162.9" y="67.0" width="23.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="165.9" y="78.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.04%)</title><rect x="186.6" y="131.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="189.6" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.09%)</title><rect x="187.1" y="131.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.1" y="142.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.06%)</title><rect x="187.3" y="115.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="190.3" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.04%)</title><rect x="188.1" y="131.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.1" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="188.7" y="131.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.7" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="189.1" y="131.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="192.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.02%)</title><rect x="189.5" y="163.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.5" y="174.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.04%)</title><rect x="189.7" y="211.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.7" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.12%)</title><rect x="190.2" y="211.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="193.2" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.07%)</title><rect x="190.2" y="195.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="193.2" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.07%)</title><rect x="190.2" y="179.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="193.2" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="191.1" y="195.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="194.1" y="206.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="191.1" y="179.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="194.1" y="190.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.02%)</title><rect x="191.1" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="194.1" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (2 samples, 0.02%)</title><rect x="191.4" y="195.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.4" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="191.4" y="179.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="194.4" y="190.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="191.4" y="163.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="194.4" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (2 samples, 0.02%)</title><rect x="191.6" y="211.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="194.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (4 samples, 0.04%)</title><rect x="191.9" y="227.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="194.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.02%)</title><rect x="192.4" y="243.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="195.4" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.03%)</title><rect x="192.6" y="243.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="195.6" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="193.1" y="243.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="196.1" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.12%)</title><rect x="193.4" y="243.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="196.4" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.04%)</title><rect x="193.5" y="227.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="196.5" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="194.1" y="227.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="197.1" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_pre_routing?[nf_nat] (3 samples, 0.03%)</title><rect x="194.4" y="227.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="197.4" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="194.4" y="211.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="197.4" y="222.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="194.4" y="195.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="197.4" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_pre_routing?[nf_nat] (2 samples, 0.02%)</title><rect x="194.8" y="243.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="197.8" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="195.0" y="259.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="198.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.02%)</title><rect x="195.3" y="275.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="198.3" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.04%)</title><rect x="195.5" y="291.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="198.5" y="302.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.03%)</title><rect x="196.0" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="199.0" y="334.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.02%)</title><rect x="196.4" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (63 samples, 0.67%)</title><rect x="196.7" y="403.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="199.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (61 samples, 0.65%)</title><rect x="196.7" y="387.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="199.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (32 samples, 0.34%)</title><rect x="199.1" y="371.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="202.1" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.02%)</title><rect x="200.1" y="355.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="203.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (19 samples, 0.20%)</title><rect x="200.3" y="355.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="203.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.03%)</title><rect x="200.8" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="203.8" y="350.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.10%)</title><rect x="201.2" y="339.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="204.2" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.09%)</title><rect x="201.3" y="323.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.09%)</title><rect x="201.3" y="307.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.3" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.06%)</title><rect x="203.3" y="371.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="206.3" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.03%)</title><rect x="203.6" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="206.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.02%)</title><rect x="204.1" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="207.1" y="382.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.04%)</title><rect x="205.1" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="208.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.16%)</title><rect x="205.6" y="451.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="208.6" y="462.0"></text>
</g>
<g>
<title>apparmor_ip_postroute.isra.0 (3 samples, 0.03%)</title><rect x="206.0" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="209.0" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (8 samples, 0.09%)</title><rect x="206.4" y="435.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="209.4" y="446.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (4 samples, 0.04%)</title><rect x="206.4" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="209.4" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.02%)</title><rect x="206.6" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="209.6" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (4 samples, 0.04%)</title><rect x="206.9" y="419.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="209.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="207.5" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="210.5" y="478.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.02%)</title><rect x="208.0" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="211.0" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.03%)</title><rect x="208.3" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.3" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="208.6" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.6" y="510.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (2 samples, 0.02%)</title><rect x="209.0" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.0" y="510.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.09%)</title><rect x="209.3" y="515.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="212.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="209.3" y="499.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="212.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.06%)</title><rect x="209.5" y="499.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="212.5" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.03%)</title><rect x="209.9" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.9" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.03%)</title><rect x="210.3" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.3" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.02%)</title><rect x="210.7" y="515.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.7" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.02%)</title><rect x="210.9" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="213.9" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.02%)</title><rect x="210.9" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="213.9" y="510.0"></text>
</g>
<g>
<title>bpf_skops_write_hdr_opt.isra.0 (2 samples, 0.02%)</title><rect x="211.2" y="531.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.2" y="542.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.03%)</title><rect x="211.5" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="214.5" y="542.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="211.9" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="214.9" y="542.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.02%)</title><rect x="212.3" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="215.3" y="542.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.02%)</title><rect x="212.6" y="531.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="215.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.07%)</title><rect x="212.8" y="531.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.8" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.02%)</title><rect x="213.1" y="515.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.1" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="213.3" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="216.3" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="213.3" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.3" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="213.4" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="216.4" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (3 samples, 0.03%)</title><rect x="213.8" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="216.8" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="214.3" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="217.3" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.02%)</title><rect x="214.6" y="531.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="217.6" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.03%)</title><rect x="214.8" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="217.8" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.02%)</title><rect x="215.3" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="218.3" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (21 samples, 0.22%)</title><rect x="215.6" y="579.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="218.6" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.05%)</title><rect x="215.6" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="218.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (16 samples, 0.17%)</title><rect x="216.2" y="563.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="219.2" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.07%)</title><rect x="217.3" y="547.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="220.3" y="558.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.02%)</title><rect x="218.4" y="579.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.4" y="590.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.02%)</title><rect x="218.6" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.6" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (25 samples, 0.27%)</title><rect x="218.9" y="627.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="221.9" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (24 samples, 0.26%)</title><rect x="219.0" y="611.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="222.0" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (23 samples, 0.25%)</title><rect x="219.1" y="595.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="222.1" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (12 samples, 0.13%)</title><rect x="220.5" y="579.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="223.5" y="590.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.03%)</title><rect x="221.6" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="224.6" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.15%)</title><rect x="222.0" y="643.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="225.0" y="654.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.06%)</title><rect x="222.1" y="627.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="225.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.06%)</title><rect x="222.1" y="611.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="225.1" y="622.0"></text>
</g>
<g>
<title>__fget_files (6 samples, 0.06%)</title><rect x="222.1" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="225.1" y="606.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.07%)</title><rect x="222.9" y="627.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="225.9" y="638.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.02%)</title><rect x="223.9" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.9" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="224.2" y="659.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="227.2" y="670.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (25 samples, 0.27%)</title><rect x="224.4" y="675.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="227.7" y="723.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="230.7" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.04%)</title><rect x="228.1" y="755.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="231.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.09%)</title><rect x="228.6" y="803.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="228.8" y="787.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.05%)</title><rect x="228.9" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.9" y="782.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (9 samples, 0.10%)</title><rect x="229.7" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.increment (4 samples, 0.04%)</title><rect x="230.3" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (4 samples, 0.04%)</title><rect x="230.3" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (37 samples, 0.40%)</title><rect x="230.8" y="819.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.33%)</title><rect x="231.5" y="803.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.06%)</title><rect x="231.6" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.05%)</title><rect x="231.7" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (13 samples, 0.14%)</title><rect x="232.4" y="787.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.06%)</title><rect x="233.2" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (6 samples, 0.06%)</title><rect x="233.2" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.05%)</title><rect x="234.0" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.05%)</title><rect x="234.0" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="234.0" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="234.2" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.2" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="234.4" y="723.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="237.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.06%)</title><rect x="234.6" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.06%)</title><rect x="234.6" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.06%)</title><rect x="234.6" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.06%)</title><rect x="234.6" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.entity (6,972 samples, 74.52%)</title><rect x="235.6" y="819.0" width="879.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.6" y="830.0">ru/mail/polis/service/medalexey/ServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.isBlank (2 samples, 0.02%)</title><rect x="236.8" y="803.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.get (6,961 samples, 74.40%)</title><rect x="237.0" y="803.0" width="878.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.0" y="814.0">ru/mail/polis/service/medalexey/ServiceImpl.get</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.03%)</title><rect x="237.1" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.02%)</title><rect x="237.3" y="771.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getValue (2 samples, 0.02%)</title><rect x="237.3" y="755.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.33%)</title><rect x="237.5" y="787.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.32%)</title><rect x="237.7" y="771.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (29 samples, 0.31%)</title><rect x="237.8" y="755.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.25%)</title><rect x="238.2" y="739.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.14%)</title><rect x="238.7" y="723.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.12%)</title><rect x="238.9" y="707.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.11%)</title><rect x="239.0" y="691.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.0" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.09%)</title><rect x="239.2" y="675.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.2" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="240.4" y="723.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="243.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges (3 samples, 0.03%)</title><rect x="240.7" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.03%)</title><rect x="241.1" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/DAO.nextKey (35 samples, 0.37%)</title><rect x="241.4" y="787.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.19%)</title><rect x="241.4" y="771.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.18%)</title><rect x="241.6" y="755.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.12%)</title><rect x="241.8" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="242.3" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.3" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="242.8" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.8" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.04%)</title><rect x="243.2" y="739.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="246.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (17 samples, 0.18%)</title><rect x="243.7" y="771.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (17 samples, 0.18%)</title><rect x="243.7" y="755.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (16 samples, 0.17%)</title><rect x="243.8" y="739.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (16 samples, 0.17%)</title><rect x="243.8" y="723.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (15 samples, 0.16%)</title><rect x="243.8" y="707.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (13 samples, 0.14%)</title><rect x="244.0" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (2 samples, 0.02%)</title><rect x="245.3" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getValue (2 samples, 0.02%)</title><rect x="245.8" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO$1.hasNext (486 samples, 5.19%)</title><rect x="246.1" y="787.0" width="61.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.1" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (486 samples, 5.19%)</title><rect x="246.1" y="771.0" width="61.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.1" y="782.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (40 samples, 0.43%)</title><rect x="246.1" y="755.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (40 samples, 0.43%)</title><rect x="246.1" y="739.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (40 samples, 0.43%)</title><rect x="246.1" y="723.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (40 samples, 0.43%)</title><rect x="246.1" y="707.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (39 samples, 0.42%)</title><rect x="246.2" y="691.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (38 samples, 0.41%)</title><rect x="246.4" y="675.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.4" y="686.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="246.4" y="659.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="249.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (35 samples, 0.37%)</title><rect x="246.7" y="659.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (35 samples, 0.37%)</title><rect x="246.7" y="643.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.7" y="654.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="246.7" y="627.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="249.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (31 samples, 0.33%)</title><rect x="247.2" y="627.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (31 samples, 0.33%)</title><rect x="247.2" y="611.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.2" y="622.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="247.6" y="595.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="250.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (25 samples, 0.27%)</title><rect x="248.0" y="595.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (23 samples, 0.25%)</title><rect x="248.2" y="579.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.2" y="590.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.10%)</title><rect x="248.6" y="563.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="251.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.04%)</title><rect x="249.8" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="249.9" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (7 samples, 0.07%)</title><rect x="250.3" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (446 samples, 4.77%)</title><rect x="251.1" y="755.0" width="56.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.1" y="766.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (446 samples, 4.77%)</title><rect x="251.1" y="739.0" width="56.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.1" y="750.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="251.1" y="723.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="251.1" y="707.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="251.1" y="691.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="251.1" y="675.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="251.1" y="659.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="251.1" y="643.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (19 samples, 0.20%)</title><rect x="251.3" y="627.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="251.4" y="611.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.4" y="622.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="251.4" y="595.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="254.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (16 samples, 0.17%)</title><rect x="251.7" y="595.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="254.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.16%)</title><rect x="251.8" y="579.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.8" y="590.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.06%)</title><rect x="251.8" y="563.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="254.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (9 samples, 0.10%)</title><rect x="252.5" y="563.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (9 samples, 0.10%)</title><rect x="252.5" y="547.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.5" y="558.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="252.5" y="531.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="255.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.06%)</title><rect x="252.8" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.06%)</title><rect x="252.8" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.8" y="526.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.05%)</title><rect x="252.8" y="499.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="255.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (31 samples, 0.33%)</title><rect x="253.7" y="723.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (31 samples, 0.33%)</title><rect x="253.7" y="707.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (31 samples, 0.33%)</title><rect x="253.7" y="691.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.7" y="702.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="253.9" y="675.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="256.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.hasNext (8 samples, 0.09%)</title><rect x="254.2" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (19 samples, 0.20%)</title><rect x="255.2" y="675.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (19 samples, 0.20%)</title><rect x="255.2" y="659.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (19 samples, 0.20%)</title><rect x="255.2" y="643.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (19 samples, 0.20%)</title><rect x="255.2" y="627.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (18 samples, 0.19%)</title><rect x="255.3" y="611.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="255.3" y="595.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (16 samples, 0.17%)</title><rect x="255.6" y="579.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.16%)</title><rect x="255.7" y="563.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.7" y="574.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="255.9" y="547.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="258.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.06%)</title><rect x="256.3" y="547.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.06%)</title><rect x="256.3" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.3" y="542.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="256.6" y="515.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="259.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (4 samples, 0.04%)</title><rect x="257.1" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (395 samples, 4.22%)</title><rect x="257.6" y="723.0" width="49.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.6" y="734.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="257.6" y="707.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="257.6" y="691.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="257.6" y="675.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="257.6" y="659.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="257.6" y="643.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="257.6" y="627.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (19 samples, 0.20%)</title><rect x="257.7" y="611.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (19 samples, 0.20%)</title><rect x="257.7" y="595.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (19 samples, 0.20%)</title><rect x="257.7" y="579.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.7" y="590.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="257.8" y="563.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="260.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (16 samples, 0.17%)</title><rect x="258.1" y="563.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (16 samples, 0.17%)</title><rect x="258.1" y="547.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.1" y="558.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="258.5" y="531.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="261.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (9 samples, 0.10%)</title><rect x="258.8" y="531.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.06%)</title><rect x="259.2" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (4 samples, 0.04%)</title><rect x="259.5" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (375 samples, 4.01%)</title><rect x="260.1" y="707.0" width="47.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.1" y="718.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (18 samples, 0.19%)</title><rect x="260.1" y="691.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="260.1" y="675.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (18 samples, 0.19%)</title><rect x="260.1" y="659.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="260.1" y="643.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (18 samples, 0.19%)</title><rect x="260.1" y="627.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="260.1" y="611.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (17 samples, 0.18%)</title><rect x="260.2" y="595.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (17 samples, 0.18%)</title><rect x="260.2" y="579.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (16 samples, 0.17%)</title><rect x="260.4" y="563.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (13 samples, 0.14%)</title><rect x="260.7" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.7" y="558.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="261.0" y="531.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="264.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.05%)</title><rect x="261.4" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.05%)</title><rect x="261.4" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.4" y="526.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="261.4" y="499.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="264.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="261.7" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="262.0" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (357 samples, 3.82%)</title><rect x="262.4" y="691.0" width="45.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.4" y="702.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (357 samples, 3.82%)</title><rect x="262.4" y="675.0" width="45.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.4" y="686.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getKey (47 samples, 0.50%)</title><rect x="262.4" y="659.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.4" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="262.5" y="643.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.5" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.02%)</title><rect x="262.5" y="627.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.5" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="262.5" y="611.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="262.5" y="595.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.5" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="262.5" y="579.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="262.5" y="563.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="262.5" y="547.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (44 samples, 0.47%)</title><rect x="262.7" y="643.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (44 samples, 0.47%)</title><rect x="262.7" y="627.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (43 samples, 0.46%)</title><rect x="262.9" y="611.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.46%)</title><rect x="262.9" y="595.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (43 samples, 0.46%)</title><rect x="262.9" y="579.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.9" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (43 samples, 0.46%)</title><rect x="262.9" y="563.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.9" y="574.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.15%)</title><rect x="263.0" y="547.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="266.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (16 samples, 0.17%)</title><rect x="264.8" y="547.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (16 samples, 0.17%)</title><rect x="264.8" y="531.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.8" y="542.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.07%)</title><rect x="264.8" y="515.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="267.8" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (9 samples, 0.10%)</title><rect x="265.6" y="515.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.6" y="526.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.07%)</title><rect x="265.6" y="499.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="268.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (2 samples, 0.02%)</title><rect x="266.5" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (10 samples, 0.11%)</title><rect x="266.8" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (2 samples, 0.02%)</title><rect x="268.0" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (18 samples, 0.19%)</title><rect x="268.3" y="659.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="268.3" y="643.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (16 samples, 0.17%)</title><rect x="268.6" y="627.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (16 samples, 0.17%)</title><rect x="268.6" y="611.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (15 samples, 0.16%)</title><rect x="268.7" y="595.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.16%)</title><rect x="268.7" y="579.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (15 samples, 0.16%)</title><rect x="268.7" y="563.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.16%)</title><rect x="268.7" y="547.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (14 samples, 0.15%)</title><rect x="268.8" y="531.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (12 samples, 0.13%)</title><rect x="269.1" y="515.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.1" y="526.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="269.2" y="499.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="272.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.05%)</title><rect x="269.7" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.05%)</title><rect x="269.7" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.7" y="494.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="269.7" y="467.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="272.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="270.1" y="467.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="270.3" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (58 samples, 0.62%)</title><rect x="270.6" y="659.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (58 samples, 0.62%)</title><rect x="270.6" y="643.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (57 samples, 0.61%)</title><rect x="270.7" y="627.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (56 samples, 0.60%)</title><rect x="270.8" y="611.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (55 samples, 0.59%)</title><rect x="270.9" y="595.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.9" y="606.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="271.1" y="579.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="274.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (50 samples, 0.53%)</title><rect x="271.6" y="579.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (49 samples, 0.52%)</title><rect x="271.7" y="563.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.7" y="574.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.12%)</title><rect x="272.1" y="547.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="275.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (35 samples, 0.37%)</title><rect x="273.5" y="547.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (32 samples, 0.34%)</title><rect x="273.8" y="531.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.8" y="542.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.06%)</title><rect x="274.5" y="515.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="277.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (19 samples, 0.20%)</title><rect x="275.2" y="515.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (17 samples, 0.18%)</title><rect x="275.5" y="499.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.5" y="510.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.06%)</title><rect x="276.0" y="483.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="279.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (7 samples, 0.07%)</title><rect x="276.7" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="277.6" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (234 samples, 2.50%)</title><rect x="277.9" y="659.0" width="29.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.9" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="277.9" y="643.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="277.9" y="627.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="277.9" y="611.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="280.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="277.9" y="595.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="277.9" y="579.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (20 samples, 0.21%)</title><rect x="277.9" y="563.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (20 samples, 0.21%)</title><rect x="277.9" y="547.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.9" y="558.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="277.9" y="531.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="280.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (17 samples, 0.18%)</title><rect x="278.3" y="531.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (17 samples, 0.18%)</title><rect x="278.3" y="515.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.3" y="526.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.07%)</title><rect x="278.4" y="499.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="281.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.07%)</title><rect x="279.3" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.06%)</title><rect x="279.4" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.4" y="494.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="279.4" y="467.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="282.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="279.8" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="280.2" y="499.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (214 samples, 2.29%)</title><rect x="280.4" y="643.0" width="27.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.4" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (15 samples, 0.16%)</title><rect x="280.4" y="627.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.16%)</title><rect x="280.4" y="611.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (15 samples, 0.16%)</title><rect x="280.4" y="595.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.16%)</title><rect x="280.4" y="579.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.4" y="590.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="280.4" y="563.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="283.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (13 samples, 0.14%)</title><rect x="280.7" y="563.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (11 samples, 0.12%)</title><rect x="280.9" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.07%)</title><rect x="281.3" y="531.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.07%)</title><rect x="281.3" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="281.7" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="281.7" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.7" y="494.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="281.7" y="467.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="284.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (199 samples, 2.13%)</title><rect x="282.3" y="627.0" width="25.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.3" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (199 samples, 2.13%)</title><rect x="282.3" y="611.0" width="25.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.3" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (22 samples, 0.24%)</title><rect x="282.4" y="595.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (22 samples, 0.24%)</title><rect x="282.4" y="579.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (22 samples, 0.24%)</title><rect x="282.4" y="563.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (21 samples, 0.22%)</title><rect x="282.6" y="547.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.6" y="558.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="282.6" y="531.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="285.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (18 samples, 0.19%)</title><rect x="282.9" y="531.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="282.9" y="515.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (17 samples, 0.18%)</title><rect x="283.1" y="499.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (11 samples, 0.12%)</title><rect x="283.8" y="483.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.8" y="494.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="283.9" y="467.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="286.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.07%)</title><rect x="284.2" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.05%)</title><rect x="284.4" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.4" y="462.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="284.4" y="435.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="287.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="284.7" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (16 samples, 0.17%)</title><rect x="285.2" y="595.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (16 samples, 0.17%)</title><rect x="285.2" y="579.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (15 samples, 0.16%)</title><rect x="285.3" y="563.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (14 samples, 0.15%)</title><rect x="285.5" y="547.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (14 samples, 0.15%)</title><rect x="285.5" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (13 samples, 0.14%)</title><rect x="285.6" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (12 samples, 0.13%)</title><rect x="285.7" y="499.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.7" y="510.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="285.7" y="483.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="288.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (8 samples, 0.09%)</title><rect x="286.2" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.07%)</title><rect x="286.3" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="286.8" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (160 samples, 1.71%)</title><rect x="287.2" y="595.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (10 samples, 0.11%)</title><rect x="287.2" y="579.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (10 samples, 0.11%)</title><rect x="287.2" y="563.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (10 samples, 0.11%)</title><rect x="287.2" y="547.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (10 samples, 0.11%)</title><rect x="287.2" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (10 samples, 0.11%)</title><rect x="287.2" y="515.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.2" y="526.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="287.2" y="499.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="290.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (8 samples, 0.09%)</title><rect x="287.5" y="499.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.07%)</title><rect x="287.6" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="287.7" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="287.7" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.7" y="462.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="287.7" y="435.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="290.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="288.1" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (150 samples, 1.60%)</title><rect x="288.5" y="579.0" width="18.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (12 samples, 0.13%)</title><rect x="288.5" y="563.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (12 samples, 0.13%)</title><rect x="288.5" y="547.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (11 samples, 0.12%)</title><rect x="288.6" y="531.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (11 samples, 0.12%)</title><rect x="288.6" y="515.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.6" y="526.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="288.7" y="499.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="291.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.07%)</title><rect x="289.1" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.07%)</title><rect x="289.1" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.1" y="494.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="289.2" y="467.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="292.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="289.5" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (138 samples, 1.47%)</title><rect x="290.0" y="563.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (138 samples, 1.47%)</title><rect x="290.0" y="547.0" width="17.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getKey (15 samples, 0.16%)</title><rect x="290.2" y="531.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.2" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="290.4" y="515.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.4" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.02%)</title><rect x="290.4" y="499.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="290.4" y="483.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="290.4" y="467.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.4" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="290.4" y="451.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="290.4" y="435.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="290.4" y="419.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.4" y="430.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="290.4" y="403.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="293.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (12 samples, 0.13%)</title><rect x="290.6" y="515.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.13%)</title><rect x="290.6" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (12 samples, 0.13%)</title><rect x="290.6" y="483.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.13%)</title><rect x="290.6" y="467.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.13%)</title><rect x="290.6" y="451.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.6" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.13%)</title><rect x="290.6" y="435.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.6" y="446.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.05%)</title><rect x="290.9" y="419.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="293.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.05%)</title><rect x="291.5" y="419.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.05%)</title><rect x="291.5" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.5" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="291.6" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.6" y="398.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="291.6" y="371.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="294.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (18 samples, 0.19%)</title><rect x="292.1" y="531.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="292.1" y="515.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (18 samples, 0.19%)</title><rect x="292.1" y="499.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (18 samples, 0.19%)</title><rect x="292.1" y="483.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.1" y="494.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="292.3" y="467.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="295.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (15 samples, 0.16%)</title><rect x="292.5" y="467.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (13 samples, 0.14%)</title><rect x="292.8" y="451.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.8" y="462.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="293.0" y="435.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="296.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.07%)</title><rect x="293.3" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.06%)</title><rect x="293.4" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.4" y="430.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="293.4" y="403.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="296.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (3 samples, 0.03%)</title><rect x="293.8" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="294.2" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.07%)</title><rect x="294.4" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (7 samples, 0.07%)</title><rect x="294.4" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (7 samples, 0.07%)</title><rect x="294.4" y="499.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.06%)</title><rect x="294.5" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.06%)</title><rect x="294.5" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="294.7" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="295.0" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (96 samples, 1.03%)</title><rect x="295.3" y="531.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.05%)</title><rect x="295.3" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.04%)</title><rect x="295.4" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.04%)</title><rect x="295.4" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (4 samples, 0.04%)</title><rect x="295.4" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (4 samples, 0.04%)</title><rect x="295.4" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="295.5" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="295.5" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.5" y="430.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="295.5" y="403.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="298.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (91 samples, 0.97%)</title><rect x="295.9" y="515.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (6 samples, 0.06%)</title><rect x="295.9" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.06%)</title><rect x="295.9" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.05%)</title><rect x="296.0" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.05%)</title><rect x="296.0" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (2 samples, 0.02%)</title><rect x="296.2" y="435.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (2 samples, 0.02%)</title><rect x="296.2" y="419.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.2" y="430.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="296.2" y="403.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="299.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="296.4" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (85 samples, 0.91%)</title><rect x="296.7" y="499.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (85 samples, 0.91%)</title><rect x="296.7" y="483.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="296.8" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="296.8" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="296.8" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="296.8" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (2 samples, 0.02%)</title><rect x="296.9" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (2 samples, 0.02%)</title><rect x="296.9" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="299.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (6 samples, 0.06%)</title><rect x="297.2" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (5 samples, 0.05%)</title><rect x="297.3" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (5 samples, 0.05%)</title><rect x="297.3" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="297.3" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="297.3" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.3" y="414.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="297.3" y="387.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="300.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.hasNext (2 samples, 0.02%)</title><rect x="297.7" y="419.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (75 samples, 0.80%)</title><rect x="297.9" y="467.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="298.1" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (3 samples, 0.03%)</title><rect x="298.1" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="298.1" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (2 samples, 0.02%)</title><rect x="298.2" y="403.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (2 samples, 0.02%)</title><rect x="298.2" y="387.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.2" y="398.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="298.2" y="371.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="301.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (71 samples, 0.76%)</title><rect x="298.4" y="451.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (70 samples, 0.75%)</title><rect x="298.6" y="435.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (70 samples, 0.75%)</title><rect x="298.6" y="419.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.6" y="430.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.02%)</title><rect x="298.6" y="403.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getKey (10 samples, 0.11%)</title><rect x="298.8" y="403.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.8" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="298.8" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.8" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.06%)</title><rect x="298.8" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.8" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.1" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.1" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.1" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.1" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.1" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.1" y="302.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="299.1" y="275.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="302.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="299.6" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="299.6" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.6" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.6" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.6" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="299.6" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (3 samples, 0.03%)</title><rect x="300.1" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (2 samples, 0.02%)</title><rect x="300.1" y="387.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (2 samples, 0.02%)</title><rect x="300.1" y="371.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (55 samples, 0.59%)</title><rect x="300.5" y="403.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (54 samples, 0.58%)</title><rect x="300.6" y="387.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (36 samples, 0.38%)</title><rect x="300.6" y="371.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="303.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (36 samples, 0.38%)</title><rect x="300.6" y="355.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (36 samples, 0.38%)</title><rect x="300.6" y="339.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="303.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (35 samples, 0.37%)</title><rect x="300.7" y="323.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (21 samples, 0.22%)</title><rect x="300.8" y="307.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (21 samples, 0.22%)</title><rect x="300.8" y="291.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getKey (13 samples, 0.14%)</title><rect x="301.2" y="275.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.2" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="301.2" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.02%)</title><rect x="301.2" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.2" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="301.2" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.2" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="301.2" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.2" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="301.2" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="301.2" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="301.2" y="163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.12%)</title><rect x="301.5" y="259.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.12%)</title><rect x="301.5" y="243.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (11 samples, 0.12%)</title><rect x="301.5" y="227.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.12%)</title><rect x="301.5" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.12%)</title><rect x="301.5" y="195.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.5" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="301.8" y="179.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="302.1" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="302.1" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.1" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="302.1" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (2 samples, 0.02%)</title><rect x="302.6" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (5 samples, 0.05%)</title><rect x="302.9" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (5 samples, 0.05%)</title><rect x="302.9" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (13 samples, 0.14%)</title><rect x="303.5" y="307.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (13 samples, 0.14%)</title><rect x="303.5" y="291.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (8 samples, 0.09%)</title><rect x="303.6" y="275.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="303.7" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (7 samples, 0.07%)</title><rect x="303.7" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="303.7" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="303.7" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.7" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="304.4" y="195.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (4 samples, 0.04%)</title><rect x="304.6" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3 samples, 0.03%)</title><rect x="304.6" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="304.6" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="304.6" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.6" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="304.6" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="304.7" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="304.7" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.7" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="304.7" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (18 samples, 0.19%)</title><rect x="305.1" y="371.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (18 samples, 0.19%)</title><rect x="305.1" y="355.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (11 samples, 0.12%)</title><rect x="305.4" y="339.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="305.6" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.02%)</title><rect x="305.6" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="305.9" y="323.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (7 samples, 0.07%)</title><rect x="305.9" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="305.9" y="291.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="306.0" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.0" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="306.0" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="306.3" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="306.4" y="227.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="306.4" y="211.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (5 samples, 0.05%)</title><rect x="306.8" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.04%)</title><rect x="306.8" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="307.0" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="307.0" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.0" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="307.0" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="307.0" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="307.0" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.0" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="307.0" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.range (6,401 samples, 68.42%)</title><rect x="307.5" y="787.0" width="807.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.5" y="798.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.range</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (168 samples, 1.80%)</title><rect x="307.8" y="771.0" width="21.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.8" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (168 samples, 1.80%)</title><rect x="307.8" y="755.0" width="21.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.8" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (166 samples, 1.77%)</title><rect x="308.0" y="739.0" width="21.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandle.acquireFence (2 samples, 0.02%)</title><rect x="308.2" y="723.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (163 samples, 1.74%)</title><rect x="308.4" y="723.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (163 samples, 1.74%)</title><rect x="308.4" y="707.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.15%)</title><rect x="308.5" y="691.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.15%)</title><rect x="308.5" y="675.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.12%)</title><rect x="308.9" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.9" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.05%)</title><rect x="309.7" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (148 samples, 1.58%)</title><rect x="310.3" y="691.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (68 samples, 0.73%)</title><rect x="320.4" y="675.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="323.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (60 samples, 0.64%)</title><rect x="321.4" y="659.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.45%)</title><rect x="323.7" y="643.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.7" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (33 samples, 0.35%)</title><rect x="324.5" y="627.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (3 samples, 0.03%)</title><rect x="325.3" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (20 samples, 0.21%)</title><rect x="325.7" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.7" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.05%)</title><rect x="327.4" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.4" y="606.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="328.3" y="611.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="331.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="328.7" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.02%)</title><rect x="328.7" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.map (34 samples, 0.36%)</title><rect x="329.0" y="771.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (34 samples, 0.36%)</title><rect x="329.0" y="755.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (34 samples, 0.36%)</title><rect x="329.0" y="739.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (34 samples, 0.36%)</title><rect x="329.0" y="723.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (34 samples, 0.36%)</title><rect x="329.0" y="707.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (34 samples, 0.36%)</title><rect x="329.0" y="691.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (33 samples, 0.35%)</title><rect x="329.1" y="675.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.34%)</title><rect x="329.2" y="659.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.2" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (24 samples, 0.26%)</title><rect x="329.5" y="643.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (6 samples, 0.06%)</title><rect x="329.8" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.06%)</title><rect x="330.6" y="627.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.6" y="638.0"></text>
</g>
<g>
<title>vtable stub (8 samples, 0.09%)</title><rect x="331.5" y="627.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="334.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.06%)</title><rect x="332.5" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.5" y="654.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="332.6" y="627.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="335.6" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="333.0" y="627.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="336.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges (6,197 samples, 66.24%)</title><rect x="333.3" y="771.0" width="781.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.3" y="782.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (38 samples, 0.41%)</title><rect x="335.0" y="755.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.next (28 samples, 0.30%)</title><rect x="339.9" y="755.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.advance (28 samples, 0.30%)</title><rect x="339.9" y="739.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Itr.nextNode (11 samples, 0.12%)</title><rect x="341.7" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.succ (10 samples, 0.11%)</title><rect x="341.8" y="707.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Itr.startNode (3 samples, 0.03%)</title><rect x="343.1" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (2 samples, 0.02%)</title><rect x="343.2" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.iterator (37 samples, 0.40%)</title><rect x="343.5" y="755.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Itr.&lt;init&gt; (33 samples, 0.35%)</title><rect x="344.0" y="739.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.&lt;init&gt; (33 samples, 0.35%)</title><rect x="344.0" y="723.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="347.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.advance (33 samples, 0.35%)</title><rect x="344.0" y="707.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.range (13 samples, 0.14%)</title><rect x="346.5" y="691.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (202 samples, 2.16%)</title><rect x="348.3" y="755.0" width="25.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.3" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (182 samples, 1.95%)</title><rect x="350.8" y="739.0" width="22.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.8" y="750.0">r..</text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (3 samples, 0.03%)</title><rect x="352.0" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (150 samples, 1.60%)</title><rect x="352.8" y="723.0" width="18.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (4 samples, 0.04%)</title><rect x="353.4" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.size (3 samples, 0.03%)</title><rect x="353.9" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.checkForComodification (3 samples, 0.03%)</title><rect x="353.9" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (4 samples, 0.04%)</title><rect x="354.3" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (129 samples, 1.38%)</title><rect x="354.9" y="707.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (5 samples, 0.05%)</title><rect x="355.8" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (2 samples, 0.02%)</title><rect x="356.1" y="675.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (7 samples, 0.07%)</title><rect x="356.5" y="691.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.&lt;init&gt; (4 samples, 0.04%)</title><rect x="356.8" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (4 samples, 0.04%)</title><rect x="356.8" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.8" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (4 samples, 0.04%)</title><rect x="356.8" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="357.1" y="627.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (107 samples, 1.14%)</title><rect x="357.3" y="691.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (7 samples, 0.07%)</title><rect x="361.1" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.1" y="686.0"></text>
</g>
<g>
<title>java/util/Objects.checkIndex (2 samples, 0.02%)</title><rect x="361.8" y="659.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.size (7 samples, 0.07%)</title><rect x="362.0" y="675.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.checkForComodification (7 samples, 0.07%)</title><rect x="362.0" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (45 samples, 0.48%)</title><rect x="363.0" y="675.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.0" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="364.2" y="659.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="367.2" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (4 samples, 0.04%)</title><rect x="364.7" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.size (3 samples, 0.03%)</title><rect x="364.8" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.get (8 samples, 0.09%)</title><rect x="365.2" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.checkForComodification (3 samples, 0.03%)</title><rect x="365.7" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (11 samples, 0.12%)</title><rect x="366.2" y="659.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.2" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractList.subListRangeCheck (3 samples, 0.03%)</title><rect x="366.5" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.5" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.&lt;init&gt; (5 samples, 0.05%)</title><rect x="366.9" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.9" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (5 samples, 0.05%)</title><rect x="366.9" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.9" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (5 samples, 0.05%)</title><rect x="366.9" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.9" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.03%)</title><rect x="367.2" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (6 samples, 0.06%)</title><rect x="367.6" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.&lt;init&gt; (5 samples, 0.05%)</title><rect x="367.7" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="370.7" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (5 samples, 0.05%)</title><rect x="367.7" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.7" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (5 samples, 0.05%)</title><rect x="367.7" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.04%)</title><rect x="367.8" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="368.4" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="368.4" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (3 samples, 0.03%)</title><rect x="368.7" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.7" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="368.7" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="371.7" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="368.8" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="371.8" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="368.8" y="627.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="371.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.&lt;init&gt; (14 samples, 0.15%)</title><rect x="369.1" y="675.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (8 samples, 0.09%)</title><rect x="369.8" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="371.0" y="691.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="371.2" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.&lt;init&gt; (16 samples, 0.17%)</title><rect x="371.7" y="723.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (13 samples, 0.14%)</title><rect x="372.1" y="707.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.range (5,876 samples, 62.80%)</title><rect x="373.7" y="755.0" width="741.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.7" y="766.0">ru/mail/polis/lsm/artemdrozdov/SSTable.range</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="380.4" y="739.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="383.4" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="380.4" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="383.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="380.4" y="707.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="383.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="380.4" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="383.4" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.02%)</title><rect x="380.4" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="383.4" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.02%)</title><rect x="380.4" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="383.4" y="670.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (2 samples, 0.02%)</title><rect x="380.4" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="383.4" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.03%)</title><rect x="380.9" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.9" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (88 samples, 0.94%)</title><rect x="381.3" y="739.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.3" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (88 samples, 0.94%)</title><rect x="381.3" y="723.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.3" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.04%)</title><rect x="382.3" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="385.3" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="382.3" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="385.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="382.3" y="675.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="385.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="382.3" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="385.3" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (3 samples, 0.03%)</title><rect x="382.8" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.8" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.09%)</title><rect x="383.2" y="707.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.markValue (2 samples, 0.02%)</title><rect x="384.2" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="384.5" y="707.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.5" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (61 samples, 0.65%)</title><rect x="384.7" y="707.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.7" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (51 samples, 0.55%)</title><rect x="386.0" y="691.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.0" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (39 samples, 0.42%)</title><rect x="387.5" y="675.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (36 samples, 0.38%)</title><rect x="387.9" y="659.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (36 samples, 0.38%)</title><rect x="387.9" y="643.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.9" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.27%)</title><rect x="389.2" y="627.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="392.2" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.05%)</title><rect x="391.5" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="394.5" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.05%)</title><rect x="391.5" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.05%)</title><rect x="391.5" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.5" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.05%)</title><rect x="391.5" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.5" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="392.2" y="611.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.2" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="392.2" y="595.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="392.2" y="579.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.2" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="392.2" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.2" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.11%)</title><rect x="392.4" y="739.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.4" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.11%)</title><rect x="392.4" y="723.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.11%)</title><rect x="392.4" y="707.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.11%)</title><rect x="392.4" y="691.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.&lt;init&gt; (8 samples, 0.09%)</title><rect x="393.7" y="739.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.offset (5,710 samples, 61.03%)</title><rect x="394.7" y="739.0" width="720.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.7" y="750.0">ru/mail/polis/lsm/artemdrozdov/SSTable.offset</text>
</g>
<g>
<title>java/nio/Buffer.remaining (48 samples, 0.51%)</title><rect x="485.7" y="723.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.mismatch (1,889 samples, 20.19%)</title><rect x="491.8" y="723.0" width="238.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.8" y="734.0">java/nio/ByteBuffer.mismatch</text>
</g>
<g>
<title>java/nio/Buffer.limit (39 samples, 0.42%)</title><rect x="513.2" y="707.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (19 samples, 0.20%)</title><rect x="518.1" y="707.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.1" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1,661 samples, 17.75%)</title><rect x="520.5" y="707.0" width="209.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.5" y="718.0">java/nio/BufferMismatch.mis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.base (111 samples, 1.19%)</title><rect x="564.4" y="691.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.4" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (176 samples, 1.88%)</title><rect x="578.4" y="691.0" width="22.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.4" y="702.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (73 samples, 0.78%)</title><rect x="578.4" y="675.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.4" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (69 samples, 0.74%)</title><rect x="587.6" y="675.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (34 samples, 0.36%)</title><rect x="596.3" y="675.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (212 samples, 2.27%)</title><rect x="600.6" y="691.0" width="26.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.6" y="702.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (53 samples, 0.57%)</title><rect x="609.3" y="675.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.3" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkSegment (42 samples, 0.45%)</title><rect x="616.0" y="675.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.0" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (48 samples, 0.51%)</title><rect x="621.3" y="675.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (814 samples, 8.70%)</title><rect x="627.4" y="691.0" width="102.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.4" y="702.0">jdk/internal..</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="729.8" y="675.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="732.8" y="686.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="729.8" y="659.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.8" y="670.0"></text>
</g>
<g>
<title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="729.8" y="643.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.8" y="654.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="729.8" y="627.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.8" y="638.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="729.8" y="611.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="732.8" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="729.8" y="595.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="732.8" y="606.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="729.8" y="579.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="732.8" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (116 samples, 1.24%)</title><rect x="730.0" y="723.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (41 samples, 0.44%)</title><rect x="730.0" y="707.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkSegment (44 samples, 0.47%)</title><rect x="735.2" y="707.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.2" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (31 samples, 0.33%)</title><rect x="740.8" y="707.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.8" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (2,384 samples, 25.48%)</title><rect x="744.7" y="723.0" width="300.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.7" y="734.0">java/nio/DirectByteBuffer.getInt</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (81 samples, 0.87%)</title><rect x="744.7" y="707.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (248 samples, 2.65%)</title><rect x="754.9" y="707.0" width="31.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.9" y="718.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (2,011 samples, 21.49%)</title><rect x="786.2" y="707.0" width="253.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.2" y="718.0">java/nio/DirectByteBuffer.getInt</text>
</g>
<g>
<title>java/nio/Buffer.checkSegment (137 samples, 1.46%)</title><rect x="787.9" y="691.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1,860 samples, 19.88%)</title><rect x="805.2" y="691.0" width="234.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.2" y="702.0">jdk/internal/misc/Unsafe.getInt..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1,774 samples, 18.96%)</title><rect x="816.0" y="675.0" width="223.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.0" y="686.0">jdk/internal/misc/Unsafe.conv..</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="1039.5" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.5" y="670.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="1039.5" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.5" y="654.0"></text>
</g>
<g>
<title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="1039.5" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1042.5" y="638.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="1039.5" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1042.5" y="622.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="1039.5" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1042.5" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="1039.5" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1042.5" y="590.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="1039.5" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.5" y="574.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="1039.5" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.5" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="1039.5" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1042.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (44 samples, 0.47%)</title><rect x="1039.8" y="707.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (241 samples, 2.58%)</title><rect x="1045.3" y="723.0" width="30.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.3" y="734.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (30 samples, 0.32%)</title><rect x="1056.4" y="707.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkSegment (77 samples, 0.82%)</title><rect x="1060.2" y="707.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (46 samples, 0.49%)</title><rect x="1069.9" y="707.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1072.9" y="718.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (310 samples, 3.31%)</title><rect x="1075.7" y="723.0" width="39.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1078.7" y="734.0">jav..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (310 samples, 3.31%)</title><rect x="1075.7" y="707.0" width="39.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1078.7" y="718.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (310 samples, 3.31%)</title><rect x="1075.7" y="691.0" width="39.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1078.7" y="702.0">jav..</text>
</g>
<g>
<title>java/nio/Buffer.position (310 samples, 3.31%)</title><rect x="1075.7" y="675.0" width="39.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1078.7" y="686.0">jav..</text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.02%)</title><rect x="1115.0" y="835.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.06%)</title><rect x="1115.2" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.06%)</title><rect x="1115.2" y="819.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.06%)</title><rect x="1115.2" y="803.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.03%)</title><rect x="1115.5" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.06%)</title><rect x="1116.0" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.06%)</title><rect x="1116.0" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.06%)</title><rect x="1116.0" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1116.0" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.0" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="1116.0" y="771.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1119.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.03%)</title><rect x="1116.3" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (79 samples, 0.84%)</title><rect x="1116.7" y="867.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (38 samples, 0.41%)</title><rect x="1116.7" y="851.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (21 samples, 0.22%)</title><rect x="1118.9" y="835.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.21%)</title><rect x="1119.0" y="819.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.14%)</title><rect x="1119.9" y="803.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.09%)</title><rect x="1120.3" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="1121.3" y="787.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.24%)</title><rect x="1121.5" y="851.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.24%)</title><rect x="1121.5" y="835.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1123.5" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1123.5" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.05%)</title><rect x="1123.5" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (19 samples, 0.20%)</title><rect x="1124.3" y="851.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.10%)</title><rect x="1126.7" y="867.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (9 samples, 0.10%)</title><rect x="1126.7" y="851.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.7" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.09%)</title><rect x="1126.8" y="835.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (4 samples, 0.04%)</title><rect x="1126.8" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.digit (4 samples, 0.04%)</title><rect x="1126.8" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.8" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.02%)</title><rect x="1127.1" y="787.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.04%)</title><rect x="1127.3" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.03%)</title><rect x="1127.4" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.04%)</title><rect x="1127.8" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (24 samples, 0.26%)</title><rect x="1128.3" y="867.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.11%)</title><rect x="1128.7" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.05%)</title><rect x="1128.8" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.04%)</title><rect x="1129.0" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="1129.5" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.5" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.05%)</title><rect x="1130.0" y="851.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1133.0" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1130.6" y="851.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1133.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.trim (4 samples, 0.04%)</title><rect x="1130.8" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="1131.0" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.27%)</title><rect x="1131.4" y="867.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.22%)</title><rect x="1131.9" y="851.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1134.0" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1137.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1134.0" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.03%)</title><rect x="1134.1" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (345 samples, 3.69%)</title><rect x="1134.5" y="883.0" width="43.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.5" y="894.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (343 samples, 3.67%)</title><rect x="1134.5" y="867.0" width="43.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.5" y="878.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (86 samples, 0.92%)</title><rect x="1136.9" y="851.0" width="10.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1139.9" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (12 samples, 0.13%)</title><rect x="1137.9" y="835.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1140.9" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ul&gt;::oop_access_barrier(void*) (13 samples, 0.14%)</title><rect x="1139.4" y="835.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.4" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.04%)</title><rect x="1141.1" y="835.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.1" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (6 samples, 0.06%)</title><rect x="1141.6" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.6" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (39 samples, 0.42%)</title><rect x="1142.3" y="835.0" width="4.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1145.3" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.05%)</title><rect x="1143.3" y="819.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.3" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.03%)</title><rect x="1144.0" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.0" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (6 samples, 0.06%)</title><rect x="1144.3" y="819.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.3" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (17 samples, 0.18%)</title><rect x="1145.1" y="819.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1148.1" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (9 samples, 0.10%)</title><rect x="1146.1" y="803.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.1" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.03%)</title><rect x="1147.4" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.4" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="1147.7" y="851.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1150.7" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.06%)</title><rect x="1148.0" y="851.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1151.0" y="862.0"></text>
</g>
<g>
<title>recv (230 samples, 2.46%)</title><rect x="1148.8" y="851.0" width="29.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1151.8" y="862.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (171 samples, 1.83%)</title><rect x="1156.2" y="835.0" width="21.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1159.2" y="846.0">e..</text>
</g>
<g>
<title>__x86_retpoline_rax (2 samples, 0.02%)</title><rect x="1156.3" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (168 samples, 1.80%)</title><rect x="1156.6" y="819.0" width="21.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.6" y="830.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (155 samples, 1.66%)</title><rect x="1156.6" y="803.0" width="19.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1159.6" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (150 samples, 1.60%)</title><rect x="1156.6" y="787.0" width="18.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1159.6" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (128 samples, 1.37%)</title><rect x="1157.1" y="771.0" width="16.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.1" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.04%)</title><rect x="1157.2" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1160.2" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (100 samples, 1.07%)</title><rect x="1157.7" y="755.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.7" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (94 samples, 1.00%)</title><rect x="1158.5" y="739.0" width="11.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1161.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.06%)</title><rect x="1158.5" y="723.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1161.5" y="734.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.07%)</title><rect x="1159.4" y="723.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.4" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="1159.7" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1162.7" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg_locked (78 samples, 0.83%)</title><rect x="1160.2" y="723.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1163.2" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.17%)</title><rect x="1161.9" y="707.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1164.9" y="718.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.16%)</title><rect x="1162.0" y="691.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1165.0" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.11%)</title><rect x="1162.3" y="675.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1165.3" y="686.0"></text>
</g>
<g>
<title>dst_release (8 samples, 0.09%)</title><rect x="1162.5" y="659.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1165.5" y="670.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.03%)</title><rect x="1163.5" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1166.5" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (42 samples, 0.45%)</title><rect x="1164.0" y="707.0" width="5.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1167.0" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (41 samples, 0.44%)</title><rect x="1164.1" y="691.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1167.1" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (27 samples, 0.29%)</title><rect x="1165.9" y="675.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1168.9" y="686.0"></text>
</g>
<g>
<title>__check_object_size (15 samples, 0.16%)</title><rect x="1166.2" y="659.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1169.2" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (15 samples, 0.16%)</title><rect x="1166.2" y="643.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1169.2" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.02%)</title><rect x="1168.1" y="659.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.1" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.06%)</title><rect x="1168.3" y="659.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1171.3" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.06%)</title><rect x="1168.3" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1171.3" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="1169.3" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1172.3" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="1169.3" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.3" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.03%)</title><rect x="1169.7" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.7" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="1169.8" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1172.8" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="1170.1" y="723.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.1" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (23 samples, 0.25%)</title><rect x="1170.3" y="755.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1173.3" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (20 samples, 0.21%)</title><rect x="1170.7" y="739.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1173.7" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (20 samples, 0.21%)</title><rect x="1170.7" y="723.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1173.7" y="734.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.02%)</title><rect x="1171.8" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.8" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (9 samples, 0.10%)</title><rect x="1172.1" y="707.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1175.1" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (7 samples, 0.07%)</title><rect x="1172.3" y="691.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1175.3" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (18 samples, 0.19%)</title><rect x="1173.2" y="771.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1176.2" y="782.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.16%)</title><rect x="1173.2" y="755.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.2" y="766.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.02%)</title><rect x="1173.2" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.2" y="750.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.14%)</title><rect x="1173.5" y="739.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1176.5" y="750.0"></text>
</g>
<g>
<title>__fget_files (13 samples, 0.14%)</title><rect x="1173.5" y="723.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.5" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="1175.1" y="755.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.1" y="766.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.02%)</title><rect x="1175.6" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1178.6" y="798.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (13 samples, 0.14%)</title><rect x="1176.1" y="803.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1179.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.02%)</title><rect x="1177.8" y="867.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1180.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.hasNext (77 samples, 0.82%)</title><rect x="1178.0" y="931.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.hasNext (77 samples, 0.82%)</title><rect x="1178.0" y="915.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1181.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (77 samples, 0.82%)</title><rect x="1178.0" y="899.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.0" y="910.0"></text>
</g>
<g>
<title>start_thread (17 samples, 0.18%)</title><rect x="1187.9" y="931.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1190.9" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (17 samples, 0.18%)</title><rect x="1187.9" y="915.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (17 samples, 0.18%)</title><rect x="1187.9" y="899.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 0.12%)</title><rect x="1187.9" y="883.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (6 samples, 0.06%)</title><rect x="1187.9" y="867.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1187.9" y="851.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.03%)</title><rect x="1187.9" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>TaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.02%)</title><rect x="1188.0" y="819.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="830.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1188.6" y="867.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (2 samples, 0.02%)</title><rect x="1188.6" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.6" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0] (2 samples, 0.02%)</title><rect x="1188.6" y="835.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.6" y="846.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (2 samples, 0.02%)</title><rect x="1188.6" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.6" y="830.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.02%)</title><rect x="1189.2" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.02%)</title><rect x="1189.2" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.02%)</title><rect x="1189.2" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.2" y="862.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.02%)</title><rect x="1189.2" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.2" y="846.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.02%)</title><rect x="1189.2" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.03%)</title><rect x="1189.5" y="883.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.03%)</title><rect x="1189.5" y="867.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="1189.6" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.02%)</title><rect x="1189.6" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.02%)</title><rect x="1189.6" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.02%)</title><rect x="1189.6" y="803.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.6" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (2 samples, 0.02%)</title><rect x="1189.6" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.6" y="798.0"></text>
</g>
</g>
</svg>
