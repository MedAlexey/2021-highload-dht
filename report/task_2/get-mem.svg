<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (395,059 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (395,059 samples, 100.00%)</title><rect x="10.0" y="803.0" width="1180.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (594 samples, 0.15%)</title><rect x="10.0" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (594 samples, 0.15%)</title><rect x="10.0" y="771.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (394,465 samples, 99.85%)</title><rect x="11.8" y="787.0" width="1178.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.8" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (394,465 samples, 99.85%)</title><rect x="11.8" y="771.0" width="1178.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.8" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (394,465 samples, 99.85%)</title><rect x="11.8" y="755.0" width="1178.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.8" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (384,270 samples, 97.27%)</title><rect x="11.8" y="739.0" width="1147.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.8" y="750.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (384,270 samples, 97.27%)</title><rect x="11.8" y="723.0" width="1147.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.8" y="734.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (383,234 samples, 97.01%)</title><rect x="11.8" y="707.0" width="1144.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.8" y="718.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,423 samples, 0.61%)</title><rect x="11.8" y="691.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,423 samples, 0.61%)</title><rect x="11.8" y="675.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,673 samples, 0.42%)</title><rect x="11.8" y="659.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,673 samples, 0.42%)</title><rect x="11.8" y="643.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.8" y="654.0"></text>
</g>
<g>
<title>byte[] (1,673 samples, 0.42%)</title><rect x="11.8" y="627.0" width="5.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="14.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (750 samples, 0.19%)</title><rect x="16.8" y="659.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.8" y="670.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (750 samples, 0.19%)</title><rect x="16.8" y="643.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="19.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,033 samples, 0.26%)</title><rect x="19.0" y="691.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,033 samples, 0.26%)</title><rect x="19.0" y="675.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,033 samples, 0.26%)</title><rect x="19.0" y="659.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,033 samples, 0.26%)</title><rect x="19.0" y="643.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,033 samples, 0.26%)</title><rect x="19.0" y="627.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (396 samples, 0.10%)</title><rect x="19.0" y="611.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="22.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (637 samples, 0.16%)</title><rect x="20.2" y="611.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.2" y="622.0"></text>
</g>
<g>
<title>byte[] (637 samples, 0.16%)</title><rect x="20.2" y="595.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="23.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.entity (379,778 samples, 96.13%)</title><rect x="22.1" y="691.0" width="1134.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.1" y="702.0">ru/mail/polis/service/medalexey/ServiceImpl.entity</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.get (379,778 samples, 96.13%)</title><rect x="22.1" y="675.0" width="1134.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.1" y="686.0">ru/mail/polis/service/medalexey/ServiceImpl.get</text>
</g>
<g>
<title>java/lang/String.getBytes (509 samples, 0.13%)</title><rect x="22.1" y="659.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (509 samples, 0.13%)</title><rect x="22.1" y="643.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (509 samples, 0.13%)</title><rect x="22.1" y="627.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (509 samples, 0.13%)</title><rect x="22.1" y="611.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.1" y="622.0"></text>
</g>
<g>
<title>byte[] (509 samples, 0.13%)</title><rect x="22.1" y="595.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="25.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,118 samples, 0.28%)</title><rect x="23.6" y="659.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,118 samples, 0.28%)</title><rect x="23.6" y="643.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.6" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,118 samples, 0.28%)</title><rect x="23.6" y="627.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="26.6" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (373 samples, 0.09%)</title><rect x="27.0" y="659.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="30.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,811 samples, 0.46%)</title><rect x="28.1" y="659.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.1" y="670.0"></text>
</g>
<g>
<title>byte[] (703 samples, 0.18%)</title><rect x="28.1" y="643.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="31.1" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (637 samples, 0.16%)</title><rect x="30.2" y="643.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="33.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (471 samples, 0.12%)</title><rect x="32.1" y="643.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="35.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/DAO.nextKey (1,717 samples, 0.43%)</title><rect x="33.5" y="659.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,717 samples, 0.43%)</title><rect x="33.5" y="643.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.5" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,046 samples, 0.26%)</title><rect x="33.5" y="627.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="36.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (671 samples, 0.17%)</title><rect x="36.6" y="627.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.6" y="638.0"></text>
</g>
<g>
<title>byte[] (671 samples, 0.17%)</title><rect x="36.6" y="611.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="39.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getValue (1,153 samples, 0.29%)</title><rect x="38.6" y="659.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.6" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,153 samples, 0.29%)</title><rect x="38.6" y="643.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.6" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,153 samples, 0.29%)</title><rect x="38.6" y="627.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.6" y="638.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,153 samples, 0.29%)</title><rect x="38.6" y="611.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="41.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO$1.hasNext (25,169 samples, 6.37%)</title><rect x="42.1" y="659.0" width="75.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.1" y="670.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (25,169 samples, 6.37%)</title><rect x="42.1" y="643.0" width="75.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.1" y="654.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (25,169 samples, 6.37%)</title><rect x="42.1" y="627.0" width="75.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.1" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (25,169 samples, 6.37%)</title><rect x="42.1" y="611.0" width="75.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.1" y="622.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (25,169 samples, 6.37%)</title><rect x="42.1" y="595.0" width="75.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.1" y="606.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (25,169 samples, 6.37%)</title><rect x="42.1" y="579.0" width="75.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.1" y="590.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (25,169 samples, 6.37%)</title><rect x="42.1" y="563.0" width="75.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.1" y="574.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (25,169 samples, 6.37%)</title><rect x="42.1" y="547.0" width="75.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.1" y="558.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getKey (2,317 samples, 0.59%)</title><rect x="42.1" y="531.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.1" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,317 samples, 0.59%)</title><rect x="42.1" y="515.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,317 samples, 0.59%)</title><rect x="42.1" y="499.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.1" y="510.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,317 samples, 0.59%)</title><rect x="42.1" y="483.0" width="6.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="45.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (22,852 samples, 5.78%)</title><rect x="49.0" y="531.0" width="68.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.0" y="542.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (22,852 samples, 5.78%)</title><rect x="49.0" y="515.0" width="68.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.0" y="526.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (22,852 samples, 5.78%)</title><rect x="49.0" y="499.0" width="68.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.0" y="510.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.getKey (1,970 samples, 0.50%)</title><rect x="49.0" y="483.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,970 samples, 0.50%)</title><rect x="49.0" y="467.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,970 samples, 0.50%)</title><rect x="49.0" y="451.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.0" y="462.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,970 samples, 0.50%)</title><rect x="49.0" y="435.0" width="5.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="52.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="483.0" width="23.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.9" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (7,863 samples, 1.99%)</title><rect x="54.9" y="467.0" width="23.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.9" y="478.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="451.0" width="23.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.9" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="435.0" width="23.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.9" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="419.0" width="23.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.9" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (7,863 samples, 1.99%)</title><rect x="54.9" y="403.0" width="23.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.9" y="414.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="387.0" width="23.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.9" y="398.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="371.0" width="23.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.9" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="355.0" width="23.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.9" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (7,863 samples, 1.99%)</title><rect x="54.9" y="339.0" width="23.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.9" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="323.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.9" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="307.0" width="23.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.9" y="318.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="291.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.9" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (7,863 samples, 1.99%)</title><rect x="54.9" y="275.0" width="23.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.9" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="259.0" width="23.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.9" y="270.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,863 samples, 1.99%)</title><rect x="54.9" y="243.0" width="23.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.9" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (7,862 samples, 1.99%)</title><rect x="54.9" y="227.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.9" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (7,862 samples, 1.99%)</title><rect x="54.9" y="211.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.9" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (4,631 samples, 1.17%)</title><rect x="54.9" y="195.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (4,631 samples, 1.17%)</title><rect x="54.9" y="179.0" width="13.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (4,630 samples, 1.17%)</title><rect x="54.9" y="163.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (4,630 samples, 1.17%)</title><rect x="54.9" y="147.0" width="13.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (4,630 samples, 1.17%)</title><rect x="54.9" y="131.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (4,630 samples, 1.17%)</title><rect x="54.9" y="115.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (3,184 samples, 0.81%)</title><rect x="54.9" y="99.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,499 samples, 0.38%)</title><rect x="54.9" y="83.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,499 samples, 0.38%)</title><rect x="54.9" y="67.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,499 samples, 0.38%)</title><rect x="54.9" y="51.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="57.9" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.Record (239 samples, 0.06%)</title><rect x="59.3" y="83.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="62.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (1,446 samples, 0.37%)</title><rect x="60.0" y="83.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,446 samples, 0.37%)</title><rect x="60.0" y="67.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.0" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,446 samples, 0.37%)</title><rect x="60.0" y="51.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.0" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,446 samples, 0.37%)</title><rect x="60.0" y="35.0" width="4.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="63.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (1,446 samples, 0.37%)</title><rect x="64.4" y="99.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1,446 samples, 0.37%)</title><rect x="64.4" y="83.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.4" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,446 samples, 0.37%)</title><rect x="64.4" y="67.0" width="4.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="67.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (3,231 samples, 0.82%)</title><rect x="68.7" y="195.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (3,231 samples, 0.82%)</title><rect x="68.7" y="179.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (2,241 samples, 0.57%)</title><rect x="68.7" y="163.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,005 samples, 0.25%)</title><rect x="68.7" y="147.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,005 samples, 0.25%)</title><rect x="68.7" y="131.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,005 samples, 0.25%)</title><rect x="68.7" y="115.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="71.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.Record (194 samples, 0.05%)</title><rect x="71.7" y="147.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="74.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (1,042 samples, 0.26%)</title><rect x="72.3" y="147.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,042 samples, 0.26%)</title><rect x="72.3" y="131.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,042 samples, 0.26%)</title><rect x="72.3" y="115.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.3" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,042 samples, 0.26%)</title><rect x="72.3" y="99.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="75.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (990 samples, 0.25%)</title><rect x="75.4" y="163.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (990 samples, 0.25%)</title><rect x="75.4" y="147.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (990 samples, 0.25%)</title><rect x="75.4" y="131.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="78.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (13,019 samples, 3.30%)</title><rect x="78.3" y="483.0" width="38.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.3" y="494.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13,019 samples, 3.30%)</title><rect x="78.3" y="467.0" width="38.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.3" y="478.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13,019 samples, 3.30%)</title><rect x="78.3" y="451.0" width="38.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.3" y="462.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (13,018 samples, 3.30%)</title><rect x="78.3" y="435.0" width="38.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.3" y="446.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (13,018 samples, 3.30%)</title><rect x="78.3" y="419.0" width="38.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.3" y="430.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13,018 samples, 3.30%)</title><rect x="78.3" y="403.0" width="38.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.3" y="414.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13,018 samples, 3.30%)</title><rect x="78.3" y="387.0" width="38.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.3" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (13,018 samples, 3.30%)</title><rect x="78.3" y="371.0" width="38.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.3" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (13,018 samples, 3.30%)</title><rect x="78.3" y="355.0" width="38.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.3" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13,018 samples, 3.30%)</title><rect x="78.3" y="339.0" width="38.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.3" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13,018 samples, 3.30%)</title><rect x="78.3" y="323.0" width="38.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.3" y="334.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (13,015 samples, 3.29%)</title><rect x="78.3" y="307.0" width="38.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.3" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (13,015 samples, 3.29%)</title><rect x="78.3" y="291.0" width="38.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.3" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13,015 samples, 3.29%)</title><rect x="78.3" y="275.0" width="38.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.3" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (13,015 samples, 3.29%)</title><rect x="78.3" y="259.0" width="38.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.3" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (13,009 samples, 3.29%)</title><rect x="78.3" y="243.0" width="38.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.3" y="254.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (13,009 samples, 3.29%)</title><rect x="78.3" y="227.0" width="38.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.3" y="238.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,133 samples, 1.81%)</title><rect x="78.3" y="211.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.3" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/MergeIterator.next (7,133 samples, 1.81%)</title><rect x="78.3" y="195.0" width="21.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.3" y="206.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.next (7,131 samples, 1.81%)</title><rect x="78.3" y="179.0" width="21.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.3" y="190.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/PeekingIterator.peek (7,131 samples, 1.81%)</title><rect x="78.3" y="163.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.3" y="174.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (7,131 samples, 1.81%)</title><rect x="78.3" y="147.0" width="21.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.3" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (7,131 samples, 1.81%)</title><rect x="78.3" y="131.0" width="21.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.3" y="142.0">r..</text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (4,907 samples, 1.24%)</title><rect x="78.3" y="115.0" width="14.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,218 samples, 0.56%)</title><rect x="78.3" y="99.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,218 samples, 0.56%)</title><rect x="78.3" y="83.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.3" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,218 samples, 0.56%)</title><rect x="78.3" y="67.0" width="6.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="81.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.Record (431 samples, 0.11%)</title><rect x="85.0" y="99.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="88.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (2,258 samples, 0.57%)</title><rect x="86.3" y="99.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,258 samples, 0.57%)</title><rect x="86.3" y="83.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,258 samples, 0.57%)</title><rect x="86.3" y="67.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,258 samples, 0.57%)</title><rect x="86.3" y="51.0" width="6.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="89.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (2,224 samples, 0.56%)</title><rect x="93.0" y="115.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,224 samples, 0.56%)</title><rect x="93.0" y="99.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.0" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,224 samples, 0.56%)</title><rect x="93.0" y="83.0" width="6.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="96.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (5,876 samples, 1.49%)</title><rect x="99.7" y="211.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.next (5,876 samples, 1.49%)</title><rect x="99.7" y="195.0" width="17.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.of (4,065 samples, 1.03%)</title><rect x="99.7" y="179.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,901 samples, 0.48%)</title><rect x="99.7" y="163.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,901 samples, 0.48%)</title><rect x="99.7" y="147.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,901 samples, 0.48%)</title><rect x="99.7" y="131.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="102.7" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.Record (350 samples, 0.09%)</title><rect x="105.3" y="163.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="108.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/Record.&lt;init&gt; (1,814 samples, 0.46%)</title><rect x="106.4" y="163.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,814 samples, 0.46%)</title><rect x="106.4" y="147.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,814 samples, 0.46%)</title><rect x="106.4" y="131.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,814 samples, 0.46%)</title><rect x="106.4" y="115.0" width="5.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="109.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/RangeIterator.read (1,811 samples, 0.46%)</title><rect x="111.8" y="179.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1,811 samples, 0.46%)</title><rect x="111.8" y="163.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,811 samples, 0.46%)</title><rect x="111.8" y="147.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="114.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.range (347,383 samples, 87.93%)</title><rect x="117.2" y="659.0" width="1037.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.2" y="670.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.range</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (571 samples, 0.14%)</title><rect x="117.2" y="643.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (571 samples, 0.14%)</title><rect x="117.2" y="627.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="120.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1,100 samples, 0.28%)</title><rect x="118.9" y="643.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1,100 samples, 0.28%)</title><rect x="118.9" y="627.0" width="3.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="121.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (1,664 samples, 0.42%)</title><rect x="122.2" y="643.0" width="5.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="125.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.filterTombstones (424 samples, 0.11%)</title><rect x="127.2" y="643.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (424 samples, 0.11%)</title><rect x="127.2" y="627.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="130.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.map (1,713 samples, 0.43%)</title><rect x="128.5" y="643.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (1,713 samples, 0.43%)</title><rect x="128.5" y="627.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (1,713 samples, 0.43%)</title><rect x="128.5" y="611.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.subMap (1,713 samples, 0.43%)</title><rect x="128.5" y="595.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (1,713 samples, 0.43%)</title><rect x="128.5" y="579.0" width="5.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="131.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (898 samples, 0.23%)</title><rect x="133.6" y="643.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.6" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (898 samples, 0.23%)</title><rect x="133.6" y="627.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="136.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges (341,013 samples, 86.32%)</title><rect x="136.3" y="643.0" width="1018.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.3" y="654.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.sstableRanges</text>
</g>
<g>
<title>java.util.ArrayList (6,321 samples, 1.60%)</title><rect x="136.3" y="627.0" width="18.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="139.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7,389 samples, 1.87%)</title><rect x="155.1" y="627.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.1" y="638.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (7,389 samples, 1.87%)</title><rect x="155.1" y="611.0" width="22.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="158.1" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (179,124 samples, 45.34%)</title><rect x="177.2" y="627.0" width="535.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.2" y="638.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge</text>
</g>
<g>
<title>java/util/ArrayList.subList (1,141 samples, 0.29%)</title><rect x="177.2" y="611.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.2" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (1,141 samples, 0.29%)</title><rect x="177.2" y="595.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="180.2" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (841 samples, 0.21%)</title><rect x="180.6" y="611.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="183.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (176,738 samples, 44.74%)</title><rect x="183.1" y="611.0" width="527.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.1" y="622.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (2,386 samples, 0.60%)</title><rect x="183.1" y="595.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.1" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (2,386 samples, 0.60%)</title><rect x="183.1" y="579.0" width="7.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="186.1" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (1,799 samples, 0.46%)</title><rect x="190.3" y="595.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="193.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (171,650 samples, 43.45%)</title><rect x="195.6" y="595.0" width="512.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.6" y="606.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (4,537 samples, 1.15%)</title><rect x="195.6" y="579.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.6" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (4,537 samples, 1.15%)</title><rect x="195.6" y="563.0" width="13.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="198.6" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (3,317 samples, 0.84%)</title><rect x="209.2" y="579.0" width="9.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="212.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (162,071 samples, 41.02%)</title><rect x="219.1" y="579.0" width="484.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.1" y="590.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (9,381 samples, 2.37%)</title><rect x="219.1" y="563.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.1" y="574.0">ja..</text>
</g>
<g>
<title>java.util.ArrayList$SubList (9,381 samples, 2.37%)</title><rect x="219.1" y="547.0" width="28.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="222.1" y="558.0">ja..</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (6,860 samples, 1.74%)</title><rect x="247.1" y="563.0" width="20.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="250.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (142,439 samples, 36.06%)</title><rect x="267.6" y="563.0" width="425.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.6" y="574.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (18,292 samples, 4.63%)</title><rect x="267.6" y="547.0" width="54.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.6" y="558.0">java/..</text>
</g>
<g>
<title>java.util.ArrayList$SubList (18,292 samples, 4.63%)</title><rect x="267.6" y="531.0" width="54.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="270.6" y="542.0">java...</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (13,513 samples, 3.42%)</title><rect x="322.2" y="547.0" width="40.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="325.2" y="558.0">ru...</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (103,751 samples, 26.26%)</title><rect x="362.6" y="547.0" width="309.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.6" y="558.0">ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge</text>
</g>
<g>
<title>java/util/ArrayList$SubList.subList (29,462 samples, 7.46%)</title><rect x="362.6" y="531.0" width="88.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.6" y="542.0">java/util/..</text>
</g>
<g>
<title>java.util.ArrayList$SubList (29,462 samples, 7.46%)</title><rect x="362.6" y="515.0" width="88.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="365.6" y="526.0">java.util...</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (27,113 samples, 6.86%)</title><rect x="450.6" y="531.0" width="81.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="453.6" y="542.0">ru.mail.p..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.merge (33,500 samples, 8.48%)</title><rect x="531.6" y="531.0" width="100.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.6" y="542.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.PeekingIterator (22,329 samples, 5.65%)</title><rect x="531.6" y="515.0" width="66.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="534.6" y="526.0">ru.mail..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (11,171 samples, 2.83%)</title><rect x="598.3" y="515.0" width="33.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.3" y="526.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (11,171 samples, 2.83%)</title><rect x="598.3" y="499.0" width="33.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="601.3" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (13,676 samples, 3.46%)</title><rect x="631.6" y="531.0" width="40.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.6" y="542.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (13,676 samples, 3.46%)</title><rect x="631.6" y="515.0" width="40.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="634.6" y="526.0">ru...</text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (6,883 samples, 1.74%)</title><rect x="672.5" y="547.0" width="20.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.5" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (6,883 samples, 1.74%)</title><rect x="672.5" y="531.0" width="20.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="675.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (3,391 samples, 0.86%)</title><rect x="693.0" y="563.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.0" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (3,391 samples, 0.86%)</title><rect x="693.0" y="547.0" width="10.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="696.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (1,725 samples, 0.44%)</title><rect x="703.2" y="579.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.2" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (1,725 samples, 0.44%)</title><rect x="703.2" y="563.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="706.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (903 samples, 0.23%)</title><rect x="708.3" y="595.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (903 samples, 0.23%)</title><rect x="708.3" y="579.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="711.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/LsmDAO.mergeTwo (404 samples, 0.10%)</title><rect x="711.0" y="611.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.MergeIterator (404 samples, 0.10%)</title><rect x="711.0" y="595.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="714.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/lsm/artemdrozdov/SSTable.range (148,179 samples, 37.51%)</title><rect x="712.2" y="627.0" width="442.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.2" y="638.0">ru/mail/polis/lsm/artemdrozdov/SSTable.range</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (106,802 samples, 27.03%)</title><rect x="712.2" y="611.0" width="319.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.2" y="622.0">java/nio/DirectByteBufferR.asReadOnlyBuffer</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (106,802 samples, 27.03%)</title><rect x="712.2" y="595.0" width="319.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.2" y="606.0">java/nio/DirectByteBufferR.duplicate</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (106,802 samples, 27.03%)</title><rect x="712.2" y="579.0" width="319.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="715.2" y="590.0">java.nio.DirectByteBufferR</text>
</g>
<g>
<title>ru.mail.polis.lsm.artemdrozdov.RangeIterator (41,377 samples, 10.47%)</title><rect x="1031.2" y="611.0" width="123.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1034.2" y="622.0">ru.mail.polis.l..</text>
</g>
<g>
<title>ru/mail/polis/service/medalexey/ServiceImpl.extractBytes (545 samples, 0.14%)</title><rect x="1154.8" y="659.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.8" y="670.0"></text>
</g>
<g>
<title>byte[] (545 samples, 0.14%)</title><rect x="1154.8" y="643.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1157.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,036 samples, 0.26%)</title><rect x="1156.5" y="707.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,036 samples, 0.26%)</title><rect x="1156.5" y="691.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,036 samples, 0.26%)</title><rect x="1156.5" y="675.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (447 samples, 0.11%)</title><rect x="1156.5" y="659.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1159.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (589 samples, 0.15%)</title><rect x="1157.8" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.8" y="670.0"></text>
</g>
<g>
<title>byte[] (589 samples, 0.15%)</title><rect x="1157.8" y="643.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1160.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,477 samples, 1.13%)</title><rect x="1159.5" y="739.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.5" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (702 samples, 0.18%)</title><rect x="1159.5" y="723.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1162.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,455 samples, 0.37%)</title><rect x="1161.6" y="723.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.6" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (1,455 samples, 0.37%)</title><rect x="1161.6" y="707.0" width="4.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1164.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,320 samples, 0.59%)</title><rect x="1166.0" y="723.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1169.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,320 samples, 0.59%)</title><rect x="1166.0" y="707.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.0" y="718.0"></text>
</g>
<g>
<title>char[] (1,157 samples, 0.29%)</title><rect x="1166.0" y="691.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1169.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (418 samples, 0.11%)</title><rect x="1169.4" y="691.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1172.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (745 samples, 0.19%)</title><rect x="1170.7" y="691.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1173.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (745 samples, 0.19%)</title><rect x="1170.7" y="675.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (745 samples, 0.19%)</title><rect x="1170.7" y="659.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.7" y="670.0"></text>
</g>
<g>
<title>byte[] (745 samples, 0.19%)</title><rect x="1170.7" y="643.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1173.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (581 samples, 0.15%)</title><rect x="1172.9" y="739.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1175.9" y="750.0"></text>
</g>
<g>
<title>byte[] (581 samples, 0.15%)</title><rect x="1172.9" y="723.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1175.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (831 samples, 0.21%)</title><rect x="1174.7" y="739.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.trim (831 samples, 0.21%)</title><rect x="1174.7" y="723.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (831 samples, 0.21%)</title><rect x="1174.7" y="707.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (831 samples, 0.21%)</title><rect x="1174.7" y="691.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.7" y="702.0"></text>
</g>
<g>
<title>java.lang.String (389 samples, 0.10%)</title><rect x="1174.7" y="675.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (442 samples, 0.11%)</title><rect x="1175.8" y="675.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1178.8" y="686.0"></text>
</g>
<g>
<title>byte[] (442 samples, 0.11%)</title><rect x="1175.8" y="659.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1178.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,306 samples, 1.09%)</title><rect x="1177.1" y="739.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,306 samples, 1.09%)</title><rect x="1177.1" y="723.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.1" y="734.0"></text>
</g>
<g>
<title>char[] (2,018 samples, 0.51%)</title><rect x="1177.1" y="707.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1180.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (776 samples, 0.20%)</title><rect x="1183.2" y="707.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1186.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,512 samples, 0.38%)</title><rect x="1185.5" y="707.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,512 samples, 0.38%)</title><rect x="1185.5" y="691.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,512 samples, 0.38%)</title><rect x="1185.5" y="675.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.5" y="686.0"></text>
</g>
<g>
<title>byte[] (1,512 samples, 0.38%)</title><rect x="1185.5" y="659.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1188.5" y="670.0"></text>
</g>
</g>
</svg>
